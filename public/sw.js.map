{"version":3,"file":"sw.js","mappings":"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AAK,EACzBujB,EAAMvjB,EAAS,EAAK,GAAK,EACzBujB,EAAMvjB,EAAS,EAAK,GAAK,EACzBujB,EAAMvjB,EAAS,EAAK,GAAK,EACzBujB,EAAMvjB,EAAS,EAAK,GAAK,EACzBujB,EAAMvjB,EAAS,EAAK,GAAK,GAG3BA,EAAUA,EAAS,EAAK,EAExB,OAAO,CACT,CAEA,SAASwpB,GAAOvD,GACdA,EAAQA,EAAQ,EAEhB,OAAO,CACT,CAEA,SAASpD,GAAOoD,GACdA,EAAQA,EAAQ,EAEhBR,IAEAzlB,EAAUA,EAAS,EAAK,EAExB,OAAO,CACT,CAIA,IAAI4lB,GAAY,CAEdI,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EAEAE,EAEAC,EAEAC,EAEAC,EACAmD,GACAA,GACAA,GACAA,GAEAlD,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EAEAC,EAEAC,EAEAC,GAEAC,GACA8C,GACAA,GACAA,GACAA,GAEA9I,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAEAkG,GAEAC,GAEAC,GAEAC,GACAyC,GACAA,GACAA,GAEAxC,GAEArG,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAEAsG,GAEAC,GAEAC,GAEAC,GAEAoC,GACAA,GACAA,GACAnC,GAEAzG,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAC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","sources":["webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/cjs/agent/http/errors.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/canisterStatus/index.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/cbor.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/certificate.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/errors.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/request_id.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/vendor/bls/bls.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/vendor/bls/wasm.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/utils/bls.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/utils/buffer.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/candid/lib/esm/utils/buffer.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/candid/lib/esm/utils/hash.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/candid/lib/esm/utils/leb128.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/candid/lib/esm/utils/bigint-math.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/candid/lib/esm/idl.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/principal/lib/esm/utils/base32.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/principal/lib/esm/utils/getCrc.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/principal/lib/esm/index.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/principal/lib/esm/utils/sha224.js","webpack://@dfinity/service-worker/./node_modules/base64-js/index.js","webpack://@dfinity/service-worker/./node_modules/bignumber.js/bignumber.js","webpack://@dfinity/service-worker/./node_modules/borc/src/constants.js","webpack://@dfinity/service-worker/./node_modules/borc/src/decoder.asm.js","webpack://@dfinity/service-worker/./node_modules/borc/src/decoder.js","webpack://@dfinity/service-worker/./node_modules/borc/src/diagnose.js","webpack://@dfinity/service-worker/./node_modules/borc/src/encoder.js","webpack://@dfinity/service-worker/./node_modules/borc/src/index.js","webpack://@dfinity/service-worker/./node_modules/borc/src/simple.js","webpack://@dfinity/service-worker/./node_modules/borc/src/tagged.js","webpack://@dfinity/service-worker/./node_modules/borc/src/utils.js","webpack://@dfinity/service-worker/./node_modules/buffer/index.js","webpack://@dfinity/service-worker/./node_modules/ieee754/index.js","webpack://@dfinity/service-worker/./node_modules/iso-url/index.js","webpack://@dfinity/service-worker/./node_modules/iso-url/src/relative.js","webpack://@dfinity/service-worker/./node_modules/iso-url/src/url-browser.js","webpack://@dfinity/service-worker/./node_modules/simple-cbor/src/index.js","webpack://@dfinity/service-worker/./node_modules/simple-cbor/src/serializer.js","webpack://@dfinity/service-worker/./node_modules/simple-cbor/src/value.js","webpack://@dfinity/service-worker/./node_modules/@noble/hashes/esm/_assert.js","webpack://@dfinity/service-worker/./node_modules/@noble/hashes/esm/utils.js","webpack://@dfinity/service-worker/./node_modules/@noble/hashes/esm/crypto.js","webpack://@dfinity/service-worker/./node_modules/@noble/hashes/esm/_sha2.js","webpack://@dfinity/service-worker/./node_modules/@noble/hashes/esm/sha256.js","webpack://@dfinity/service-worker/webpack/bootstrap","webpack://@dfinity/service-worker/webpack/runtime/compat get default export","webpack://@dfinity/service-worker/webpack/runtime/define property getters","webpack://@dfinity/service-worker/webpack/runtime/global","webpack://@dfinity/service-worker/webpack/runtime/hasOwnProperty shorthand","webpack://@dfinity/service-worker/webpack/runtime/make namespace object","webpack://@dfinity/service-worker/webpack/runtime/importScripts chunk loading","webpack://@dfinity/service-worker/./src/typings.ts","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/agent/api.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/auth.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/utils/random.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/agent/http/types.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/agent/http/transforms.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/agent/http/errors.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/agent/http/index.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/agent/proxy.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/agent/index.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/polling/index.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/canisters/management_idl.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/actor.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/agent/lib/esm/polling/strategy.js","webpack://@dfinity/service-worker/./node_modules/@dfinity/response-verification/dist/web/web.js","webpack://@dfinity/service-worker/./src/http-interface/canister_http_interface.ts","webpack://@dfinity/service-worker/./src/sw/requests/typings.ts","webpack://@dfinity/service-worker/./src/sw/requests/utils.ts","webpack://@dfinity/service-worker/./src/logger.ts","webpack://@dfinity/service-worker/./node_modules/idb/build/wrap-idb-value.js","webpack://@dfinity/service-worker/./node_modules/idb/build/index.js","webpack://@dfinity/service-worker/./src/sw/storage.ts","webpack://@dfinity/service-worker/./src/sw/domains/errors.ts","webpack://@dfinity/service-worker/./src/sw/domains/mapper.ts","webpack://@dfinity/service-worker/./src/sw/domains/static.ts","webpack://@dfinity/service-worker/./src/sw/domains/typings.ts","webpack://@dfinity/service-worker/./src/sw/domains/utils.ts","webpack://@dfinity/service-worker/./src/sw/domains/index.ts","webpack://@dfinity/service-worker/./src/sw/cache/typings.ts","webpack://@dfinity/service-worker/./src/sw/cache/mapper.ts","webpack://@dfinity/service-worker/./src/utils.ts","webpack://@dfinity/service-worker/./src/sw/cache/index.ts","webpack://@dfinity/service-worker/./node_modules/pako/dist/pako.esm.mjs","webpack://@dfinity/service-worker/./src/sw/response/body-decoding.ts","webpack://@dfinity/service-worker/./src/sw/response/body-streaming.ts","webpack://@dfinity/service-worker/./src/sw/response/filter-response-headers.ts","webpack://@dfinity/service-worker/./src/sw/response/response-verification.ts","webpack://@dfinity/service-worker/./src/sw/requests/query-call.ts","webpack://@dfinity/service-worker/./src/sw/requests/mapper.ts","webpack://@dfinity/service-worker/./src/sw/requests/index.ts","webpack://@dfinity/service-worker/./src/sw/requests/upgrade-to-update-call.ts","webpack://@dfinity/service-worker/./src/sw/views/error.html","webpack://@dfinity/service-worker/./src/sw/views/error.ts","webpack://@dfinity/service-worker/./src/sw/sw.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AgentHTTPResponseError = void 0;\nclass AgentHTTPResponseError extends Error {\n    constructor(message, response) {\n        super(message);\n        this.response = response;\n        this.name = this.constructor.name;\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.AgentHTTPResponseError = AgentHTTPResponseError;\n//# sourceMappingURL=errors.js.map","/** @module CanisterStatus */\nimport { lebDecode, PipeArrayBuffer } from '@dfinity/candid';\nimport { Principal } from '@dfinity/principal';\nimport { AgentError } from '../errors';\nimport { Certificate } from '../certificate';\nimport { toHex } from '../utils/buffer';\nimport * as Cbor from '../cbor';\n/**\n *\n * @param {CanisterStatusOptions} options {@link CanisterStatusOptions}\n * @param {CanisterStatusOptions['canisterId']} options.canisterId {@link Principal}\n * @param {CanisterStatusOptions['agent']} options.agent {@link HttpAgent} optional authenticated agent to use to make the canister request. Useful for accessing private metadata under icp:private\n * @param {CanisterStatusOptions['paths']} options.paths {@link Path[]}\n * @returns {Status} object populated with data from the requested paths\n * @example\n * const status = await canisterStatus({\n *   paths: ['controllers', 'candid'],\n *   ...options\n * });\n *\n * const controllers = status.get('controllers');\n */\nexport const request = async (options) => {\n    const { canisterId, agent, paths } = options;\n    const uniquePaths = [...new Set(paths)];\n    // Map path options to their correct formats\n    const encodedPaths = uniquePaths.map(path => {\n        return encodePath(path, canisterId);\n    });\n    const status = new Map();\n    const promises = uniquePaths.map((path, index) => {\n        return (async () => {\n            var _a;\n            try {\n                const response = await agent.readState(canisterId, {\n                    paths: [encodedPaths[index]],\n                });\n                const cert = await Certificate.create({\n                    certificate: response.certificate,\n                    rootKey: agent.rootKey,\n                    canisterId: canisterId,\n                });\n                const data = cert.lookup(encodePath(uniquePaths[index], canisterId));\n                if (!data) {\n                    // Typically, the cert lookup will throw\n                    console.warn(`Expected to find result for path ${path}, but instead found nothing.`);\n                    if (typeof path === 'string') {\n                        status.set(path, null);\n                    }\n                    else {\n                        status.set(path.key, null);\n                    }\n                }\n                else {\n                    switch (path) {\n                        case 'time': {\n                            status.set(path, decodeTime(data));\n                            break;\n                        }\n                        case 'controllers': {\n                            status.set(path, decodeControllers(data));\n                            break;\n                        }\n                        case 'module_hash': {\n                            status.set(path, decodeHex(data));\n                            break;\n                        }\n                        case 'candid': {\n                            status.set(path, new TextDecoder().decode(data));\n                            break;\n                        }\n                        default: {\n                            // Check for CustomPath signature\n                            if (typeof path !== 'string' && 'key' in path && 'path' in path) {\n                                switch (path.decodeStrategy) {\n                                    case 'raw':\n                                        status.set(path.key, data);\n                                        break;\n                                    case 'leb128': {\n                                        status.set(path.key, decodeLeb128(data));\n                                        break;\n                                    }\n                                    case 'cbor': {\n                                        status.set(path.key, decodeCbor(data));\n                                        break;\n                                    }\n                                    case 'hex': {\n                                        status.set(path.key, decodeHex(data));\n                                        break;\n                                    }\n                                    case 'utf-8': {\n                                        status.set(path.key, decodeUtf8(data));\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            catch (error) {\n                // Break on signature verification errors\n                if ((_a = error === null || error === void 0 ? void 0 : error.message) === null || _a === void 0 ? void 0 : _a.includes('Invalid certificate')) {\n                    throw new AgentError(error.message);\n                }\n                if (typeof path !== 'string' && 'key' in path && 'path' in path) {\n                    status.set(path.key, null);\n                }\n                else {\n                    status.set(path, null);\n                }\n                console.group();\n                console.warn(`Expected to find result for path ${path}, but instead found nothing.`);\n                console.warn(error);\n                console.groupEnd();\n            }\n        })();\n    });\n    // Fetch all values separately, as each option can fail\n    await Promise.all(promises);\n    return status;\n};\nexport const encodePath = (path, canisterId) => {\n    const encoder = new TextEncoder();\n    const encode = (arg) => {\n        return new DataView(encoder.encode(arg).buffer).buffer;\n    };\n    const canisterBuffer = new DataView(canisterId.toUint8Array().buffer).buffer;\n    switch (path) {\n        case 'time':\n            return [encode('time')];\n        case 'controllers':\n            return [encode('canister'), canisterBuffer, encode('controllers')];\n        case 'module_hash':\n            return [encode('canister'), canisterBuffer, encode('module_hash')];\n        case 'subnet':\n            return [encode('subnet')];\n        case 'candid':\n            return [encode('canister'), canisterBuffer, encode('metadata'), encode('candid:service')];\n        default: {\n            // Check for CustomPath signature\n            if ('key' in path && 'path' in path) {\n                // For simplified metadata queries\n                if (typeof path['path'] === 'string' || path['path'] instanceof ArrayBuffer) {\n                    const metaPath = path.path;\n                    const encoded = typeof metaPath === 'string' ? encode(metaPath) : metaPath;\n                    return [encode('canister'), canisterBuffer, encode('metadata'), encoded];\n                    // For non-metadata, return the provided custompath\n                }\n                else {\n                    return path['path'];\n                }\n            }\n        }\n    }\n    throw new Error(`An unexpeected error was encountered while encoding your path for canister status. Please ensure that your path, ${path} was formatted correctly.`);\n};\nconst decodeHex = (buf) => {\n    return toHex(buf);\n};\nconst decodeLeb128 = (buf) => {\n    return lebDecode(new PipeArrayBuffer(buf));\n};\nconst decodeCbor = (buf) => {\n    return Cbor.decode(buf);\n};\nconst decodeUtf8 = (buf) => {\n    return new TextDecoder().decode(buf);\n};\n// time is a LEB128-encoded Nat\nconst decodeTime = (buf) => {\n    const decoded = decodeLeb128(buf);\n    return new Date(Number(decoded / BigInt(1000000)));\n};\n// Controllers are CBOR-encoded buffers, starting with a Tag we don't need\nconst decodeControllers = (buf) => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [tag, ...controllersRaw] = decodeCbor(buf);\n    return controllersRaw.map((buf) => {\n        return Principal.fromUint8Array(new Uint8Array(buf));\n    });\n};\n//# sourceMappingURL=index.js.map","// tslint:disable:max-classes-per-file\n// This file is based on:\n// tslint:disable-next-line: max-line-length\n// https://github.com/dfinity-lab/dfinity/blob/9bca65f8edd65701ea6bdb00e0752f9186bbc893/docs/spec/public/index.adoc#cbor-encoding-of-requests-and-responses\nimport borc from 'borc';\nimport * as cbor from 'simple-cbor';\nimport { SelfDescribeCborSerializer } from 'simple-cbor';\nimport { concat, fromHex } from './utils/buffer';\n// We are using hansl/simple-cbor for CBOR serialization, to avoid issues with\n// encoding the uint64 values that the HTTP handler of the client expects for\n// canister IDs. However, simple-cbor does not yet provide deserialization so\n// we are using `Uint8Array` so that we can use the dignifiedquire/borc CBOR\n// decoder.\nclass PrincipalEncoder {\n    get name() {\n        return 'Principal';\n    }\n    get priority() {\n        return 0;\n    }\n    match(value) {\n        return value && value._isPrincipal === true;\n    }\n    encode(v) {\n        return cbor.value.bytes(v.toUint8Array());\n    }\n}\nclass BufferEncoder {\n    get name() {\n        return 'Buffer';\n    }\n    get priority() {\n        return 1;\n    }\n    match(value) {\n        return value instanceof ArrayBuffer || ArrayBuffer.isView(value);\n    }\n    encode(v) {\n        return cbor.value.bytes(new Uint8Array(v));\n    }\n}\nclass BigIntEncoder {\n    get name() {\n        return 'BigInt';\n    }\n    get priority() {\n        return 1;\n    }\n    match(value) {\n        return typeof value === `bigint`;\n    }\n    encode(v) {\n        // Always use a bigint encoding.\n        if (v > BigInt(0)) {\n            return cbor.value.tagged(2, cbor.value.bytes(fromHex(v.toString(16))));\n        }\n        else {\n            return cbor.value.tagged(3, cbor.value.bytes(fromHex((BigInt('-1') * v).toString(16))));\n        }\n    }\n}\nconst serializer = SelfDescribeCborSerializer.withDefaultEncoders(true);\nserializer.addEncoder(new PrincipalEncoder());\nserializer.addEncoder(new BufferEncoder());\nserializer.addEncoder(new BigIntEncoder());\nexport var CborTag;\n(function (CborTag) {\n    CborTag[CborTag[\"Uint64LittleEndian\"] = 71] = \"Uint64LittleEndian\";\n    CborTag[CborTag[\"Semantic\"] = 55799] = \"Semantic\";\n})(CborTag || (CborTag = {}));\n/**\n * Encode a JavaScript value into CBOR.\n */\nexport function encode(value) {\n    return serializer.serialize(value);\n}\nfunction decodePositiveBigInt(buf) {\n    const len = buf.byteLength;\n    let res = BigInt(0);\n    for (let i = 0; i < len; i++) {\n        // tslint:disable-next-line:no-bitwise\n        res = res * BigInt(0x100) + BigInt(buf[i]);\n    }\n    return res;\n}\n// A BORC subclass that decodes byte strings to ArrayBuffer instead of the Buffer class.\nclass Uint8ArrayDecoder extends borc.Decoder {\n    createByteString(raw) {\n        return concat(...raw);\n    }\n    createByteStringFromHeap(start, end) {\n        if (start === end) {\n            return new ArrayBuffer(0);\n        }\n        return new Uint8Array(this._heap.slice(start, end));\n    }\n}\nexport function decode(input) {\n    const buffer = new Uint8Array(input);\n    const decoder = new Uint8ArrayDecoder({\n        size: buffer.byteLength,\n        tags: {\n            // Override tags 2 and 3 for BigInt support (borc supports only BigNumber).\n            2: val => decodePositiveBigInt(val),\n            3: val => -decodePositiveBigInt(val),\n            [CborTag.Semantic]: (value) => value,\n        },\n    });\n    return decoder.decodeFirst(buffer);\n}\n//# sourceMappingURL=cbor.js.map","import * as cbor from './cbor';\nimport { AgentError } from './errors';\nimport { hash } from './request_id';\nimport { concat, fromHex, toHex } from './utils/buffer';\nimport { Principal } from '@dfinity/principal';\nimport * as bls from './utils/bls';\n/**\n * A certificate may fail verification with respect to the provided public key\n */\nexport class CertificateVerificationError extends AgentError {\n    constructor(reason) {\n        super(`Invalid certificate: ${reason}`);\n    }\n}\n/**\n * Make a human readable string out of a hash tree.\n * @param tree\n */\nexport function hashTreeToString(tree) {\n    const indent = (s) => s\n        .split('\\n')\n        .map(x => '  ' + x)\n        .join('\\n');\n    function labelToString(label) {\n        const decoder = new TextDecoder(undefined, { fatal: true });\n        try {\n            return JSON.stringify(decoder.decode(label));\n        }\n        catch (e) {\n            return `data(...${label.byteLength} bytes)`;\n        }\n    }\n    switch (tree[0]) {\n        case 0 /* NodeId.Empty */:\n            return '()';\n        case 1 /* NodeId.Fork */: {\n            const left = hashTreeToString(tree[1]);\n            const right = hashTreeToString(tree[2]);\n            return `sub(\\n left:\\n${indent(left)}\\n---\\n right:\\n${indent(right)}\\n)`;\n        }\n        case 2 /* NodeId.Labeled */: {\n            const label = labelToString(tree[1]);\n            const sub = hashTreeToString(tree[2]);\n            return `label(\\n label:\\n${indent(label)}\\n sub:\\n${indent(sub)}\\n)`;\n        }\n        case 3 /* NodeId.Leaf */: {\n            return `leaf(...${tree[1].byteLength} bytes)`;\n        }\n        case 4 /* NodeId.Pruned */: {\n            return `pruned(${toHex(new Uint8Array(tree[1]))}`;\n        }\n        default: {\n            return `unknown(${JSON.stringify(tree[0])})`;\n        }\n    }\n}\nfunction isBufferEqual(a, b) {\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    const a8 = new Uint8Array(a);\n    const b8 = new Uint8Array(b);\n    for (let i = 0; i < a8.length; i++) {\n        if (a8[i] !== b8[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport class Certificate {\n    constructor(certificate, _rootKey, _canisterId, _blsVerify) {\n        this._rootKey = _rootKey;\n        this._canisterId = _canisterId;\n        this._blsVerify = _blsVerify;\n        this.cert = cbor.decode(new Uint8Array(certificate));\n    }\n    /**\n     * Create a new instance of a certificate, automatically verifying it. Throws a\n     * CertificateVerificationError if the certificate cannot be verified.\n     * @constructs {@link AuthClient}\n     * @param {CreateCertificateOptions} options\n     * @see {@link CreateCertificateOptions}\n     * @param {ArrayBuffer} options.certificate The bytes of the certificate\n     * @param {ArrayBuffer} options.rootKey The root key to verify against\n     * @param {Principal} options.canisterId The effective or signing canister ID\n     * @throws {CertificateVerificationError}\n     */\n    static async create(options) {\n        let blsVerify = options.blsVerify;\n        if (!blsVerify) {\n            blsVerify = bls.blsVerify;\n        }\n        const cert = new Certificate(options.certificate, options.rootKey, options.canisterId, blsVerify);\n        await cert.verify();\n        return cert;\n    }\n    lookup(path) {\n        return lookup_path(path, this.cert.tree);\n    }\n    async verify() {\n        const rootHash = await reconstruct(this.cert.tree);\n        const derKey = await this._checkDelegationAndGetKey(this.cert.delegation);\n        const sig = this.cert.signature;\n        const key = extractDER(derKey);\n        const msg = concat(domain_sep('ic-state-root'), rootHash);\n        let sigVer = false;\n        try {\n            sigVer = await this._blsVerify(new Uint8Array(key), new Uint8Array(sig), new Uint8Array(msg));\n        }\n        catch (err) {\n            sigVer = false;\n        }\n        if (!sigVer) {\n            throw new CertificateVerificationError('Signature verification failed');\n        }\n    }\n    async _checkDelegationAndGetKey(d) {\n        if (!d) {\n            return this._rootKey;\n        }\n        const cert = await Certificate.create({\n            certificate: d.certificate,\n            rootKey: this._rootKey,\n            canisterId: this._canisterId,\n        });\n        const rangeLookup = cert.lookup(['subnet', d.subnet_id, 'canister_ranges']);\n        if (!rangeLookup) {\n            throw new CertificateVerificationError(`Could not find canister ranges for subnet 0x${toHex(d.subnet_id)}`);\n        }\n        const ranges_arr = cbor.decode(rangeLookup);\n        const ranges = ranges_arr.map(v => [\n            Principal.fromUint8Array(v[0]),\n            Principal.fromUint8Array(v[1]),\n        ]);\n        const canisterInRange = ranges.some(r => r[0].ltEq(this._canisterId) && r[1].gtEq(this._canisterId));\n        if (!canisterInRange) {\n            throw new CertificateVerificationError(`Canister ${this._canisterId} not in range of delegations for subnet 0x${toHex(d.subnet_id)}`);\n        }\n        const publicKeyLookup = cert.lookup(['subnet', d.subnet_id, 'public_key']);\n        if (!publicKeyLookup) {\n            throw new Error(`Could not find subnet key for subnet 0x${toHex(d.subnet_id)}`);\n        }\n        return publicKeyLookup;\n    }\n}\nconst DER_PREFIX = fromHex('308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100');\nconst KEY_LENGTH = 96;\nfunction extractDER(buf) {\n    const expectedLength = DER_PREFIX.byteLength + KEY_LENGTH;\n    if (buf.byteLength !== expectedLength) {\n        throw new TypeError(`BLS DER-encoded public key must be ${expectedLength} bytes long`);\n    }\n    const prefix = buf.slice(0, DER_PREFIX.byteLength);\n    if (!isBufferEqual(prefix, DER_PREFIX)) {\n        throw new TypeError(`BLS DER-encoded public key is invalid. Expect the following prefix: ${DER_PREFIX}, but get ${prefix}`);\n    }\n    return buf.slice(DER_PREFIX.byteLength);\n}\n/**\n * @param t\n */\nexport async function reconstruct(t) {\n    switch (t[0]) {\n        case 0 /* NodeId.Empty */:\n            return hash(domain_sep('ic-hashtree-empty'));\n        case 4 /* NodeId.Pruned */:\n            return t[1];\n        case 3 /* NodeId.Leaf */:\n            return hash(concat(domain_sep('ic-hashtree-leaf'), t[1]));\n        case 2 /* NodeId.Labeled */:\n            return hash(concat(domain_sep('ic-hashtree-labeled'), t[1], await reconstruct(t[2])));\n        case 1 /* NodeId.Fork */:\n            return hash(concat(domain_sep('ic-hashtree-fork'), await reconstruct(t[1]), await reconstruct(t[2])));\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction domain_sep(s) {\n    const len = new Uint8Array([s.length]);\n    const str = new TextEncoder().encode(s);\n    return concat(len, str);\n}\n/**\n * @param path\n * @param tree\n */\nexport function lookup_path(path, tree) {\n    if (path.length === 0) {\n        switch (tree[0]) {\n            case 3 /* NodeId.Leaf */: {\n                return new Uint8Array(tree[1]).buffer;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n    const label = typeof path[0] === 'string' ? new TextEncoder().encode(path[0]) : path[0];\n    const t = find_label(label, flatten_forks(tree));\n    if (t) {\n        return lookup_path(path.slice(1), t);\n    }\n}\nfunction flatten_forks(t) {\n    switch (t[0]) {\n        case 0 /* NodeId.Empty */:\n            return [];\n        case 1 /* NodeId.Fork */:\n            return flatten_forks(t[1]).concat(flatten_forks(t[2]));\n        default:\n            return [t];\n    }\n}\nfunction find_label(l, trees) {\n    if (trees.length === 0) {\n        return undefined;\n    }\n    for (const t of trees) {\n        if (t[0] === 2 /* NodeId.Labeled */) {\n            const p = t[1];\n            if (isBufferEqual(l, p)) {\n                return t[2];\n            }\n        }\n    }\n}\n//# sourceMappingURL=certificate.js.map","/**\n * An error that happens in the Agent. This is the root of all errors and should be used\n * everywhere in the Agent code (this package).\n *\n * @todo https://github.com/dfinity/agent-js/issues/420\n */\nexport class AgentError extends Error {\n    constructor(message) {\n        super(message);\n        this.message = message;\n        Object.setPrototypeOf(this, AgentError.prototype);\n    }\n}\n//# sourceMappingURL=errors.js.map","import { lebEncode } from '@dfinity/candid';\nimport borc from 'borc';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { compare, concat, uint8ToBuf } from './utils/buffer';\n/**\n * sha256 hash the provided Buffer\n * @param data - input to hash function\n */\nexport function hash(data) {\n    return uint8ToBuf(sha256.create().update(new Uint8Array(data)).digest());\n}\n/**\n *\n * @param value unknown value\n * @returns ArrayBuffer\n */\nexport function hashValue(value) {\n    if (value instanceof borc.Tagged) {\n        return hashValue(value.value);\n    }\n    else if (typeof value === 'string') {\n        return hashString(value);\n    }\n    else if (typeof value === 'number') {\n        return hash(lebEncode(value));\n    }\n    else if (value instanceof ArrayBuffer || ArrayBuffer.isView(value)) {\n        return hash(value);\n    }\n    else if (Array.isArray(value)) {\n        const vals = value.map(hashValue);\n        return hash(concat(...vals));\n    }\n    else if (value && typeof value === 'object' && value._isPrincipal) {\n        return hash(value.toUint8Array());\n    }\n    else if (typeof value === 'object' &&\n        value !== null &&\n        typeof value.toHash === 'function') {\n        return hashValue(value.toHash());\n        // TODO This should be move to a specific async method as the webauthn flow required\n        // the flow to be synchronous to ensure Safari touch id works.\n        // } else if (value instanceof Promise) {\n        //   return value.then(x => hashValue(x));\n    }\n    else if (typeof value === 'bigint') {\n        // Do this check much later than the other bigint check because this one is much less\n        // type-safe.\n        // So we want to try all the high-assurance type guards before this 'probable' one.\n        return hash(lebEncode(value));\n    }\n    throw Object.assign(new Error(`Attempt to hash a value of unsupported type: ${value}`), {\n        // include so logs/callers can understand the confusing value.\n        // (when stringified in error message, prototype info is lost)\n        value,\n    });\n}\nconst hashString = (value) => {\n    const encoded = new TextEncoder().encode(value);\n    return hash(encoded);\n};\n/**\n * Get the RequestId of the provided ic-ref request.\n * RequestId is the result of the representation-independent-hash function.\n * https://sdk.dfinity.org/docs/interface-spec/index.html#hash-of-map\n * @param request - ic-ref request to hash into RequestId\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function requestIdOf(request) {\n    const hashed = Object.entries(request)\n        .filter(([, value]) => value !== undefined)\n        .map(([key, value]) => {\n        const hashedKey = hashString(key);\n        const hashedValue = hashValue(value);\n        return [hashedKey, hashedValue];\n    });\n    const traversed = hashed;\n    const sorted = traversed.sort(([k1], [k2]) => {\n        return compare(k1, k2);\n    });\n    const concatenated = concat(...sorted.map(x => concat(...x)));\n    const requestId = hash(concatenated);\n    return requestId;\n}\n//# sourceMappingURL=request_id.js.map","import * as base64Arraybuffer from 'base64-arraybuffer';\n// This WASM is generated from the miracl BLS Rust code (see\n// https://github.com/dfinity/miracl_core_bls12381/)\nimport { wasmBytesBase64 } from './wasm';\n/* tslint:disable */\n/* eslint-disable */\nlet wasm;\nconst wasmBytes = base64Arraybuffer.decode(wasmBytesBase64);\n/**\n * @returns {number}\n */\nexport function bls_init() {\n    let ret = wasm.bls_init();\n    return ret;\n}\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    return [ptr, arg.length];\n}\n/**\n * @param {Uint8Array} sig\n * @param {Uint8Array} m\n * @param {Uint8Array} w\n * @returns {number}\n */\nexport function bls_verify(sig, m, w) {\n    const [ptr0, len0] = passArray8ToWasm0(sig, wasm.__wbindgen_malloc);\n    const [ptr1, len1] = passArray8ToWasm0(m, wasm.__wbindgen_malloc);\n    const [ptr2, len2] = passArray8ToWasm0(w, wasm.__wbindgen_malloc);\n    const ret = wasm.bls_verify(ptr0, len0, ptr1, len1, ptr2, len2);\n    return ret;\n}\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n    }\n    else {\n        const instance = await WebAssembly.instantiate(module, imports);\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n        }\n        else {\n            return instance;\n        }\n    }\n}\nasync function init() {\n    const imports = {};\n    const { instance, module } = await load(wasmBytes, imports);\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n    return wasm;\n}\n/**\n * If `module_or_path` is {RequestInfo} or {URL}, makes a request and\n * for everything else, calls `WebAssembly.instantiate` directly.\n *\n * @param {InitInput | Promise<InitInput>} module_or_path\n *\n * @returns {Promise<InitOutput>}\n */\nexport default init;\n//# sourceMappingURL=bls.js.map","export const wasmBytesBase64 = ``;\n//# sourceMappingURL=wasm.js.map","import init, { bls_init, bls_verify } from '../vendor/bls/bls';\nexport let verify;\n/**\n *\n * @param pk primary key: Uint8Array\n * @param sig signature: Uint8Array\n * @param msg message: Uint8Array\n * @returns Promise resolving a boolean\n */\nexport async function blsVerify(pk, sig, msg) {\n    if (!verify) {\n        await init();\n        if (bls_init() !== 0) {\n            throw new Error('Cannot initialize BLS');\n        }\n        verify = (pk1, sig1, msg1) => {\n            // Reorder things from what the WASM expects (sig, m, w).\n            return bls_verify(sig1, msg1, pk1) === 0;\n        };\n    }\n    return verify(pk, sig, msg);\n}\n//# sourceMappingURL=bls.js.map","/**\n * Concatenate multiple array buffers.\n * @param buffers The buffers to concatenate.\n */\nexport function concat(...buffers) {\n    const result = new Uint8Array(buffers.reduce((acc, curr) => acc + curr.byteLength, 0));\n    let index = 0;\n    for (const b of buffers) {\n        result.set(new Uint8Array(b), index);\n        index += b.byteLength;\n    }\n    return result.buffer;\n}\n/**\n * Transforms a buffer to an hexadecimal string. This will use the buffer as an Uint8Array.\n * @param buffer The buffer to return the hexadecimal string of.\n */\nexport function toHex(buffer) {\n    return [...new Uint8Array(buffer)].map(x => x.toString(16).padStart(2, '0')).join('');\n}\nconst hexRe = new RegExp(/^([0-9A-F]{2})*$/i);\n/**\n * Transforms a hexadecimal string into an array buffer.\n * @param hex The hexadecimal string to use.\n */\nexport function fromHex(hex) {\n    if (!hexRe.test(hex)) {\n        throw new Error('Invalid hexadecimal string.');\n    }\n    const buffer = [...hex]\n        .reduce((acc, curr, i) => {\n        // tslint:disable-next-line:no-bitwise\n        acc[(i / 2) | 0] = (acc[(i / 2) | 0] || '') + curr;\n        return acc;\n    }, [])\n        .map(x => Number.parseInt(x, 16));\n    return new Uint8Array(buffer).buffer;\n}\nexport function compare(b1, b2) {\n    if (b1.byteLength !== b2.byteLength) {\n        return b1.byteLength - b2.byteLength;\n    }\n    const u1 = new Uint8Array(b1);\n    const u2 = new Uint8Array(b2);\n    for (let i = 0; i < u1.length; i++) {\n        if (u1[i] !== u2[i]) {\n            return u1[i] - u2[i];\n        }\n    }\n    return 0;\n}\n/**\n * Returns a true ArrayBuffer from a Uint8Array, as Uint8Array.buffer is unsafe.\n * @param {Uint8Array} arr Uint8Array to convert\n * @returns ArrayBuffer\n */\nexport function uint8ToBuf(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength).buffer;\n}\n//# sourceMappingURL=buffer.js.map","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","/**\n * Concatenate multiple array buffers.\n * @param buffers The buffers to concatenate.\n */\nexport function concat(...buffers) {\n    const result = new Uint8Array(buffers.reduce((acc, curr) => acc + curr.byteLength, 0));\n    let index = 0;\n    for (const b of buffers) {\n        result.set(new Uint8Array(b), index);\n        index += b.byteLength;\n    }\n    return result;\n}\n/**\n * Returns an hexadecimal representation of an array buffer.\n * @param bytes The array buffer.\n */\nexport function toHexString(bytes) {\n    return new Uint8Array(bytes).reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n}\n/**\n * Return an array buffer from its hexadecimal representation.\n * @param hexString The hexadecimal string.\n */\nexport function fromHexString(hexString) {\n    var _a;\n    return new Uint8Array(((_a = hexString.match(/.{1,2}/g)) !== null && _a !== void 0 ? _a : []).map(byte => parseInt(byte, 16)));\n}\n/**\n * A class that abstracts a pipe-like ArrayBuffer.\n */\nexport class PipeArrayBuffer {\n    /**\n     * Creates a new instance of a pipe\n     * @param buffer an optional buffer to start with\n     * @param length an optional amount of bytes to use for the length.\n     */\n    constructor(buffer, length = (buffer === null || buffer === void 0 ? void 0 : buffer.byteLength) || 0) {\n        this._buffer = buffer || new ArrayBuffer(0);\n        this._view = new Uint8Array(this._buffer, 0, length);\n    }\n    get buffer() {\n        // Return a copy of the buffer.\n        return this._view.slice();\n    }\n    get byteLength() {\n        return this._view.byteLength;\n    }\n    /**\n     * Read `num` number of bytes from the front of the pipe.\n     * @param num The number of bytes to read.\n     */\n    read(num) {\n        const result = this._view.subarray(0, num);\n        this._view = this._view.subarray(num);\n        return result.slice().buffer;\n    }\n    readUint8() {\n        const result = this._view[0];\n        this._view = this._view.subarray(1);\n        return result;\n    }\n    /**\n     * Write a buffer to the end of the pipe.\n     * @param buf The bytes to write.\n     */\n    write(buf) {\n        const b = new Uint8Array(buf);\n        const offset = this._view.byteLength;\n        if (this._view.byteOffset + this._view.byteLength + b.byteLength >= this._buffer.byteLength) {\n            // Alloc grow the view to include the new bytes.\n            this.alloc(b.byteLength);\n        }\n        else {\n            // Update the view to include the new bytes.\n            this._view = new Uint8Array(this._buffer, this._view.byteOffset, this._view.byteLength + b.byteLength);\n        }\n        this._view.set(b, offset);\n    }\n    /**\n     * Whether or not there is more data to read from the buffer\n     */\n    get end() {\n        return this._view.byteLength === 0;\n    }\n    /**\n     * Allocate a fixed amount of memory in the buffer. This does not affect the view.\n     * @param amount A number of bytes to add to the buffer.\n     */\n    alloc(amount) {\n        // Add a little bit of exponential growth.\n        // tslint:disable-next-line:no-bitwise\n        const b = new ArrayBuffer(((this._buffer.byteLength + amount) * 1.2) | 0);\n        const v = new Uint8Array(b, 0, this._view.byteLength + amount);\n        v.set(this._view);\n        this._buffer = b;\n        this._view = v;\n    }\n}\n//# sourceMappingURL=buffer.js.map","/**\n * Hashes a string to a number. Algorithm can be found here:\n * https://caml.inria.fr/pub/papers/garrigue-polymorphic_variants-ml98.pdf\n * @param s\n */\nfunction idlHash(s) {\n    const utf8encoder = new TextEncoder();\n    const array = utf8encoder.encode(s);\n    let h = 0;\n    for (const c of array) {\n        h = (h * 223 + c) % 2 ** 32;\n    }\n    return h;\n}\n/**\n *\n * @param label string\n * @returns number representing hashed label\n */\nexport function idlLabelToId(label) {\n    if (/^_\\d+_$/.test(label) || /^_0x[0-9a-fA-F]+_$/.test(label)) {\n        const num = +label.slice(1, -1);\n        if (Number.isSafeInteger(num) && num >= 0 && num < 2 ** 32) {\n            return num;\n        }\n    }\n    return idlHash(label);\n}\n//# sourceMappingURL=hash.js.map","/* eslint-disable no-constant-condition */\n// tslint:disable:no-bitwise\n// Note: this file uses buffer-pipe, which on Node only, uses the Node Buffer\n//       implementation, which isn't compatible with the NPM buffer package\n//       which we use everywhere else. This means that we have to transform\n//       one into the other, hence why every function that returns a Buffer\n//       actually return `new Buffer(pipe.buffer)`.\n// TODO: The best solution would be to have our own buffer type around\n//       Uint8Array which is standard.\nimport { PipeArrayBuffer as Pipe } from './buffer';\nfunction eob() {\n    throw new Error('unexpected end of buffer');\n}\n/**\n *\n * @param pipe Pipe from buffer-pipe\n * @param num number\n * @returns Buffer\n */\nexport function safeRead(pipe, num) {\n    if (pipe.byteLength < num) {\n        eob();\n    }\n    return pipe.read(num);\n}\n/**\n * @param pipe\n */\nexport function safeReadUint8(pipe) {\n    const byte = pipe.readUint8();\n    if (byte === undefined) {\n        eob();\n    }\n    return byte;\n}\n/**\n * Encode a positive number (or bigint) into a Buffer. The number will be floored to the\n * nearest integer.\n * @param value The number to encode.\n */\nexport function lebEncode(value) {\n    if (typeof value === 'number') {\n        value = BigInt(value);\n    }\n    if (value < BigInt(0)) {\n        throw new Error('Cannot leb encode negative values.');\n    }\n    const byteLength = (value === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(value)))) + 1;\n    const pipe = new Pipe(new ArrayBuffer(byteLength), 0);\n    while (true) {\n        const i = Number(value & BigInt(0x7f));\n        value /= BigInt(0x80);\n        if (value === BigInt(0)) {\n            pipe.write(new Uint8Array([i]));\n            break;\n        }\n        else {\n            pipe.write(new Uint8Array([i | 0x80]));\n        }\n    }\n    return pipe.buffer;\n}\n/**\n * Decode a leb encoded buffer into a bigint. The number will always be positive (does not\n * support signed leb encoding).\n * @param pipe A Buffer containing the leb encoded bits.\n */\nexport function lebDecode(pipe) {\n    let weight = BigInt(1);\n    let value = BigInt(0);\n    let byte;\n    do {\n        byte = safeReadUint8(pipe);\n        value += BigInt(byte & 0x7f).valueOf() * weight;\n        weight *= BigInt(128);\n    } while (byte >= 0x80);\n    return value;\n}\n/**\n * Encode a number (or bigint) into a Buffer, with support for negative numbers. The number\n * will be floored to the nearest integer.\n * @param value The number to encode.\n */\nexport function slebEncode(value) {\n    if (typeof value === 'number') {\n        value = BigInt(value);\n    }\n    const isNeg = value < BigInt(0);\n    if (isNeg) {\n        value = -value - BigInt(1);\n    }\n    const byteLength = (value === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(value)))) + 1;\n    const pipe = new Pipe(new ArrayBuffer(byteLength), 0);\n    while (true) {\n        const i = getLowerBytes(value);\n        value /= BigInt(0x80);\n        // prettier-ignore\n        if ((isNeg && value === BigInt(0) && (i & 0x40) !== 0)\n            || (!isNeg && value === BigInt(0) && (i & 0x40) === 0)) {\n            pipe.write(new Uint8Array([i]));\n            break;\n        }\n        else {\n            pipe.write(new Uint8Array([i | 0x80]));\n        }\n    }\n    function getLowerBytes(num) {\n        const bytes = num % BigInt(0x80);\n        if (isNeg) {\n            // We swap the bits here again, and remove 1 to do two's complement.\n            return Number(BigInt(0x80) - bytes - BigInt(1));\n        }\n        else {\n            return Number(bytes);\n        }\n    }\n    return pipe.buffer;\n}\n/**\n * Decode a leb encoded buffer into a bigint. The number is decoded with support for negative\n * signed-leb encoding.\n * @param pipe A Buffer containing the signed leb encoded bits.\n */\nexport function slebDecode(pipe) {\n    // Get the size of the buffer, then cut a buffer of that size.\n    const pipeView = new Uint8Array(pipe.buffer);\n    let len = 0;\n    for (; len < pipeView.byteLength; len++) {\n        if (pipeView[len] < 0x80) {\n            // If it's a positive number, we reuse lebDecode.\n            if ((pipeView[len] & 0x40) === 0) {\n                return lebDecode(pipe);\n            }\n            break;\n        }\n    }\n    const bytes = new Uint8Array(safeRead(pipe, len + 1));\n    let value = BigInt(0);\n    for (let i = bytes.byteLength - 1; i >= 0; i--) {\n        value = value * BigInt(0x80) + BigInt(0x80 - (bytes[i] & 0x7f) - 1);\n    }\n    return -value - BigInt(1);\n}\n/**\n *\n * @param value bigint or number\n * @param byteLength number\n * @returns Buffer\n */\nexport function writeUIntLE(value, byteLength) {\n    if (BigInt(value) < BigInt(0)) {\n        throw new Error('Cannot write negative values.');\n    }\n    return writeIntLE(value, byteLength);\n}\n/**\n *\n * @param value\n * @param byteLength\n */\nexport function writeIntLE(value, byteLength) {\n    value = BigInt(value);\n    const pipe = new Pipe(new ArrayBuffer(Math.min(1, byteLength)), 0);\n    let i = 0;\n    let mul = BigInt(256);\n    let sub = BigInt(0);\n    let byte = Number(value % mul);\n    pipe.write(new Uint8Array([byte]));\n    while (++i < byteLength) {\n        if (value < 0 && sub === BigInt(0) && byte !== 0) {\n            sub = BigInt(1);\n        }\n        byte = Number((value / mul - sub) % BigInt(256));\n        pipe.write(new Uint8Array([byte]));\n        mul *= BigInt(256);\n    }\n    return pipe.buffer;\n}\n/**\n *\n * @param pipe Pipe from buffer-pipe\n * @param byteLength number\n * @returns bigint\n */\nexport function readUIntLE(pipe, byteLength) {\n    let val = BigInt(safeReadUint8(pipe));\n    let mul = BigInt(1);\n    let i = 0;\n    while (++i < byteLength) {\n        mul *= BigInt(256);\n        const byte = BigInt(safeReadUint8(pipe));\n        val = val + mul * byte;\n    }\n    return val;\n}\n/**\n *\n * @param pipe Pipe from buffer-pipe\n * @param byteLength number\n * @returns bigint\n */\nexport function readIntLE(pipe, byteLength) {\n    let val = readUIntLE(pipe, byteLength);\n    const mul = BigInt(2) ** (BigInt(8) * BigInt(byteLength - 1) + BigInt(7));\n    if (val >= mul) {\n        val -= mul * BigInt(2);\n    }\n    return val;\n}\n//# sourceMappingURL=leb128.js.map","/**\n * Equivalent to `Math.log2(n)` with support for `BigInt` values\n *\n * @param n bigint or integer\n * @returns integer\n */\nexport function ilog2(n) {\n    const nBig = BigInt(n);\n    if (n <= 0) {\n        throw new RangeError('Input must be positive');\n    }\n    return nBig.toString(2).length - 1;\n}\n/**\n * Equivalent to `2 ** n` with support for `BigInt` values\n * (necessary for browser preprocessors which replace the `**` operator with `Math.pow`)\n *\n * @param n bigint or integer\n * @returns bigint\n */\nexport function iexp2(n) {\n    const nBig = BigInt(n);\n    if (n < 0) {\n        throw new RangeError('Input must be non-negative');\n    }\n    return BigInt(1) << nBig;\n}\n//# sourceMappingURL=bigint-math.js.map","// tslint:disable:max-classes-per-file\nimport { Principal as PrincipalId } from '@dfinity/principal';\nimport { concat, PipeArrayBuffer as Pipe } from './utils/buffer';\nimport { idlLabelToId } from './utils/hash';\nimport { lebDecode, lebEncode, readIntLE, readUIntLE, safeRead, safeReadUint8, slebDecode, slebEncode, writeIntLE, writeUIntLE, } from './utils/leb128';\nimport { iexp2 } from './utils/bigint-math';\nconst magicNumber = 'DIDL';\nconst toReadableString_max = 400; // will not display arguments after 400chars. Makes sure 2mb blobs don't get inside the error\nfunction zipWith(xs, ys, f) {\n    return xs.map((x, i) => f(x, ys[i]));\n}\n/**\n * An IDL Type Table, which precedes the data in the stream.\n */\nclass TypeTable {\n    constructor() {\n        // List of types. Needs to be an array as the index needs to be stable.\n        this._typs = [];\n        this._idx = new Map();\n    }\n    has(obj) {\n        return this._idx.has(obj.name);\n    }\n    add(type, buf) {\n        const idx = this._typs.length;\n        this._idx.set(type.name, idx);\n        this._typs.push(buf);\n    }\n    merge(obj, knot) {\n        const idx = this._idx.get(obj.name);\n        const knotIdx = this._idx.get(knot);\n        if (idx === undefined) {\n            throw new Error('Missing type index for ' + obj);\n        }\n        if (knotIdx === undefined) {\n            throw new Error('Missing type index for ' + knot);\n        }\n        this._typs[idx] = this._typs[knotIdx];\n        // Delete the type.\n        this._typs.splice(knotIdx, 1);\n        this._idx.delete(knot);\n    }\n    encode() {\n        const len = lebEncode(this._typs.length);\n        const buf = concat(...this._typs);\n        return concat(len, buf);\n    }\n    indexOf(typeName) {\n        if (!this._idx.has(typeName)) {\n            throw new Error('Missing type index for ' + typeName);\n        }\n        return slebEncode(this._idx.get(typeName) || 0);\n    }\n}\nexport class Visitor {\n    visitType(t, data) {\n        throw new Error('Not implemented');\n    }\n    visitPrimitive(t, data) {\n        return this.visitType(t, data);\n    }\n    visitEmpty(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitBool(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitNull(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitReserved(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitText(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitNumber(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitInt(t, data) {\n        return this.visitNumber(t, data);\n    }\n    visitNat(t, data) {\n        return this.visitNumber(t, data);\n    }\n    visitFloat(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitFixedInt(t, data) {\n        return this.visitNumber(t, data);\n    }\n    visitFixedNat(t, data) {\n        return this.visitNumber(t, data);\n    }\n    visitPrincipal(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitConstruct(t, data) {\n        return this.visitType(t, data);\n    }\n    visitVec(t, ty, data) {\n        return this.visitConstruct(t, data);\n    }\n    visitOpt(t, ty, data) {\n        return this.visitConstruct(t, data);\n    }\n    visitRecord(t, fields, data) {\n        return this.visitConstruct(t, data);\n    }\n    visitTuple(t, components, data) {\n        const fields = components.map((ty, i) => [`_${i}_`, ty]);\n        return this.visitRecord(t, fields, data);\n    }\n    visitVariant(t, fields, data) {\n        return this.visitConstruct(t, data);\n    }\n    visitRec(t, ty, data) {\n        return this.visitConstruct(ty, data);\n    }\n    visitFunc(t, data) {\n        return this.visitConstruct(t, data);\n    }\n    visitService(t, data) {\n        return this.visitConstruct(t, data);\n    }\n}\n/**\n * Represents an IDL type.\n */\nexport class Type {\n    /* Display type name */\n    display() {\n        return this.name;\n    }\n    valueToString(x) {\n        return toReadableString(x);\n    }\n    /* Implement `T` in the IDL spec, only needed for non-primitive types */\n    buildTypeTable(typeTable) {\n        if (!typeTable.has(this)) {\n            this._buildTypeTableImpl(typeTable);\n        }\n    }\n}\nexport class PrimitiveType extends Type {\n    checkType(t) {\n        if (this.name !== t.name) {\n            throw new Error(`type mismatch: type on the wire ${t.name}, expect type ${this.name}`);\n        }\n        return t;\n    }\n    _buildTypeTableImpl(typeTable) {\n        // No type table encoding for Primitive types.\n        return;\n    }\n}\nexport class ConstructType extends Type {\n    checkType(t) {\n        if (t instanceof RecClass) {\n            const ty = t.getType();\n            if (typeof ty === 'undefined') {\n                throw new Error('type mismatch with uninitialized type');\n            }\n            return ty;\n        }\n        throw new Error(`type mismatch: type on the wire ${t.name}, expect type ${this.name}`);\n    }\n    encodeType(typeTable) {\n        return typeTable.indexOf(this.name);\n    }\n}\n/**\n * Represents an IDL Empty, a type which has no inhabitants.\n * Since no values exist for this type, it cannot be serialised or deserialised.\n * Result types like `Result<Text, Empty>` should always succeed.\n */\nexport class EmptyClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitEmpty(this, d);\n    }\n    covariant(x) {\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue() {\n        throw new Error('Empty cannot appear as a function argument');\n    }\n    valueToString() {\n        throw new Error('Empty cannot appear as a value');\n    }\n    encodeType() {\n        return slebEncode(-17 /* IDLTypeIds.Empty */);\n    }\n    decodeValue() {\n        throw new Error('Empty cannot appear as an output');\n    }\n    get name() {\n        return 'empty';\n    }\n}\n/**\n * Represents an IDL Unknown, a placeholder type for deserialization only.\n * When decoding a value as Unknown, all fields will be retained but the names are only available in\n * hashed form.\n * A deserialized unknown will offer it's actual type by calling the `type()` function.\n * Unknown cannot be serialized and attempting to do so will throw an error.\n */\nexport class UnknownClass extends Type {\n    checkType(t) {\n        throw new Error('Method not implemented for unknown.');\n    }\n    accept(v, d) {\n        throw v.visitType(this, d);\n    }\n    covariant(x) {\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue() {\n        throw new Error('Unknown cannot appear as a function argument');\n    }\n    valueToString() {\n        throw new Error('Unknown cannot appear as a value');\n    }\n    encodeType() {\n        throw new Error('Unknown cannot be serialized');\n    }\n    decodeValue(b, t) {\n        let decodedValue = t.decodeValue(b, t);\n        if (Object(decodedValue) !== decodedValue) {\n            // decodedValue is primitive. Box it, otherwise we cannot add the type() function.\n            // The type() function is important for primitives because otherwise we cannot tell apart the\n            // different number types.\n            decodedValue = Object(decodedValue);\n        }\n        let typeFunc;\n        if (t instanceof RecClass) {\n            typeFunc = () => t.getType();\n        }\n        else {\n            typeFunc = () => t;\n        }\n        // Do not use 'decodedValue.type = typeFunc' because this would lead to an enumerable property\n        // 'type' which means it would be serialized if the value would be candid encoded again.\n        // This in turn leads to problems if the decoded value is a variant because these values are\n        // only allowed to have a single property.\n        Object.defineProperty(decodedValue, 'type', {\n            value: typeFunc,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        });\n        return decodedValue;\n    }\n    _buildTypeTableImpl() {\n        throw new Error('Unknown cannot be serialized');\n    }\n    get name() {\n        return 'Unknown';\n    }\n}\n/**\n * Represents an IDL Bool\n */\nexport class BoolClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitBool(this, d);\n    }\n    covariant(x) {\n        if (typeof x === 'boolean')\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        return new Uint8Array([x ? 1 : 0]);\n    }\n    encodeType() {\n        return slebEncode(-2 /* IDLTypeIds.Bool */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        switch (safeReadUint8(b)) {\n            case 0:\n                return false;\n            case 1:\n                return true;\n            default:\n                throw new Error('Boolean value out of range');\n        }\n    }\n    get name() {\n        return 'bool';\n    }\n}\n/**\n * Represents an IDL Null\n */\nexport class NullClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitNull(this, d);\n    }\n    covariant(x) {\n        if (x === null)\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue() {\n        return new ArrayBuffer(0);\n    }\n    encodeType() {\n        return slebEncode(-1 /* IDLTypeIds.Null */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        return null;\n    }\n    get name() {\n        return 'null';\n    }\n}\n/**\n * Represents an IDL Reserved\n */\nexport class ReservedClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitReserved(this, d);\n    }\n    covariant(x) {\n        return true;\n    }\n    encodeValue() {\n        return new ArrayBuffer(0);\n    }\n    encodeType() {\n        return slebEncode(-16 /* IDLTypeIds.Reserved */);\n    }\n    decodeValue(b, t) {\n        if (t.name !== this.name) {\n            t.decodeValue(b, t);\n        }\n        return null;\n    }\n    get name() {\n        return 'reserved';\n    }\n}\n/**\n * Represents an IDL Text\n */\nexport class TextClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitText(this, d);\n    }\n    covariant(x) {\n        if (typeof x === 'string')\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        const buf = new TextEncoder().encode(x);\n        const len = lebEncode(buf.byteLength);\n        return concat(len, buf);\n    }\n    encodeType() {\n        return slebEncode(-15 /* IDLTypeIds.Text */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        const len = lebDecode(b);\n        const buf = safeRead(b, Number(len));\n        const decoder = new TextDecoder('utf8', { fatal: true });\n        return decoder.decode(buf);\n    }\n    get name() {\n        return 'text';\n    }\n    valueToString(x) {\n        return '\"' + x + '\"';\n    }\n}\n/**\n * Represents an IDL Int\n */\nexport class IntClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitInt(this, d);\n    }\n    covariant(x) {\n        // We allow encoding of JavaScript plain numbers.\n        // But we will always decode to bigint.\n        if (typeof x === 'bigint' || Number.isInteger(x))\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        return slebEncode(x);\n    }\n    encodeType() {\n        return slebEncode(-4 /* IDLTypeIds.Int */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        return slebDecode(b);\n    }\n    get name() {\n        return 'int';\n    }\n    valueToString(x) {\n        return x.toString();\n    }\n}\n/**\n * Represents an IDL Nat\n */\nexport class NatClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitNat(this, d);\n    }\n    covariant(x) {\n        // We allow encoding of JavaScript plain numbers.\n        // But we will always decode to bigint.\n        if ((typeof x === 'bigint' && x >= BigInt(0)) || (Number.isInteger(x) && x >= 0))\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        return lebEncode(x);\n    }\n    encodeType() {\n        return slebEncode(-3 /* IDLTypeIds.Nat */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        return lebDecode(b);\n    }\n    get name() {\n        return 'nat';\n    }\n    valueToString(x) {\n        return x.toString();\n    }\n}\n/**\n * Represents an IDL Float\n */\nexport class FloatClass extends PrimitiveType {\n    constructor(_bits) {\n        super();\n        this._bits = _bits;\n        if (_bits !== 32 && _bits !== 64) {\n            throw new Error('not a valid float type');\n        }\n    }\n    accept(v, d) {\n        return v.visitFloat(this, d);\n    }\n    covariant(x) {\n        if (typeof x === 'number' || x instanceof Number)\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        const buf = new ArrayBuffer(this._bits / 8);\n        const view = new DataView(buf);\n        if (this._bits === 32) {\n            view.setFloat32(0, x, true);\n        }\n        else {\n            view.setFloat64(0, x, true);\n        }\n        return buf;\n    }\n    encodeType() {\n        const opcode = this._bits === 32 ? -13 /* IDLTypeIds.Float32 */ : -14 /* IDLTypeIds.Float64 */;\n        return slebEncode(opcode);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        const bytes = safeRead(b, this._bits / 8);\n        const view = new DataView(bytes);\n        if (this._bits === 32) {\n            return view.getFloat32(0, true);\n        }\n        else {\n            return view.getFloat64(0, true);\n        }\n    }\n    get name() {\n        return 'float' + this._bits;\n    }\n    valueToString(x) {\n        return x.toString();\n    }\n}\n/**\n * Represents an IDL fixed-width Int(n)\n */\nexport class FixedIntClass extends PrimitiveType {\n    constructor(_bits) {\n        super();\n        this._bits = _bits;\n    }\n    accept(v, d) {\n        return v.visitFixedInt(this, d);\n    }\n    covariant(x) {\n        const min = iexp2(this._bits - 1) * BigInt(-1);\n        const max = iexp2(this._bits - 1) - BigInt(1);\n        let ok = false;\n        if (typeof x === 'bigint') {\n            ok = x >= min && x <= max;\n        }\n        else if (Number.isInteger(x)) {\n            const v = BigInt(x);\n            ok = v >= min && v <= max;\n        }\n        else {\n            ok = false;\n        }\n        if (ok)\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        return writeIntLE(x, this._bits / 8);\n    }\n    encodeType() {\n        const offset = Math.log2(this._bits) - 3;\n        return slebEncode(-9 - offset);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        const num = readIntLE(b, this._bits / 8);\n        if (this._bits <= 32) {\n            return Number(num);\n        }\n        else {\n            return num;\n        }\n    }\n    get name() {\n        return `int${this._bits}`;\n    }\n    valueToString(x) {\n        return x.toString();\n    }\n}\n/**\n * Represents an IDL fixed-width Nat(n)\n */\nexport class FixedNatClass extends PrimitiveType {\n    constructor(_bits) {\n        super();\n        this._bits = _bits;\n    }\n    accept(v, d) {\n        return v.visitFixedNat(this, d);\n    }\n    covariant(x) {\n        const max = iexp2(this._bits);\n        let ok = false;\n        if (typeof x === 'bigint' && x >= BigInt(0)) {\n            ok = x < max;\n        }\n        else if (Number.isInteger(x) && x >= 0) {\n            const v = BigInt(x);\n            ok = v < max;\n        }\n        else {\n            ok = false;\n        }\n        if (ok)\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        return writeUIntLE(x, this._bits / 8);\n    }\n    encodeType() {\n        const offset = Math.log2(this._bits) - 3;\n        return slebEncode(-5 - offset);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        const num = readUIntLE(b, this._bits / 8);\n        if (this._bits <= 32) {\n            return Number(num);\n        }\n        else {\n            return num;\n        }\n    }\n    get name() {\n        return `nat${this._bits}`;\n    }\n    valueToString(x) {\n        return x.toString();\n    }\n}\n/**\n * Represents an IDL Array\n *\n * Arrays of fixed-sized nat/int type (e.g. nat8), are encoded from and decoded to TypedArrays (e.g. Uint8Array).\n * Arrays of float or other non-primitive types are encoded/decoded as untyped array in Javascript.\n *\n * @param {Type} t\n */\nexport class VecClass extends ConstructType {\n    constructor(_type) {\n        super();\n        this._type = _type;\n        // If true, this vector is really a blob and we can just use memcpy.\n        //\n        // NOTE:\n        // With support of encoding/dencoding of TypedArrays, this optimization is\n        // only used when plain array of bytes are passed as encoding input in order\n        // to be backward compatible.\n        this._blobOptimization = false;\n        if (_type instanceof FixedNatClass && _type._bits === 8) {\n            this._blobOptimization = true;\n        }\n    }\n    accept(v, d) {\n        return v.visitVec(this, this._type, d);\n    }\n    covariant(x) {\n        // Special case for ArrayBuffer\n        const bits = this._type instanceof FixedNatClass\n            ? this._type._bits\n            : this._type instanceof FixedIntClass\n                ? this._type._bits\n                : 0;\n        if ((ArrayBuffer.isView(x) && bits == x.BYTES_PER_ELEMENT * 8) ||\n            (Array.isArray(x) &&\n                x.every((v, idx) => {\n                    try {\n                        return this._type.covariant(v);\n                    }\n                    catch (e) {\n                        throw new Error(`Invalid ${this.display()} argument: \\n\\nindex ${idx} -> ${e.message}`);\n                    }\n                })))\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        const len = lebEncode(x.length);\n        if (this._blobOptimization) {\n            return concat(len, new Uint8Array(x));\n        }\n        if (ArrayBuffer.isView(x)) {\n            return concat(len, new Uint8Array(x.buffer));\n        }\n        const buf = new Pipe(new ArrayBuffer(len.byteLength + x.length), 0);\n        buf.write(len);\n        for (const d of x) {\n            const encoded = this._type.encodeValue(d);\n            buf.write(new Uint8Array(encoded));\n        }\n        return buf.buffer;\n    }\n    _buildTypeTableImpl(typeTable) {\n        this._type.buildTypeTable(typeTable);\n        const opCode = slebEncode(-19 /* IDLTypeIds.Vector */);\n        const buffer = this._type.encodeType(typeTable);\n        typeTable.add(this, concat(opCode, buffer));\n    }\n    decodeValue(b, t) {\n        const vec = this.checkType(t);\n        if (!(vec instanceof VecClass)) {\n            throw new Error('Not a vector type');\n        }\n        const len = Number(lebDecode(b));\n        if (this._type instanceof FixedNatClass) {\n            if (this._type._bits == 8) {\n                return new Uint8Array(b.read(len));\n            }\n            if (this._type._bits == 16) {\n                return new Uint16Array(b.read(len * 2));\n            }\n            if (this._type._bits == 32) {\n                return new Uint32Array(b.read(len * 4));\n            }\n            if (this._type._bits == 64) {\n                return new BigUint64Array(b.read(len * 8));\n            }\n        }\n        if (this._type instanceof FixedIntClass) {\n            if (this._type._bits == 8) {\n                return new Int8Array(b.read(len));\n            }\n            if (this._type._bits == 16) {\n                return new Int16Array(b.read(len * 2));\n            }\n            if (this._type._bits == 32) {\n                return new Int32Array(b.read(len * 4));\n            }\n            if (this._type._bits == 64) {\n                return new BigInt64Array(b.read(len * 8));\n            }\n        }\n        const rets = [];\n        for (let i = 0; i < len; i++) {\n            rets.push(this._type.decodeValue(b, vec._type));\n        }\n        return rets;\n    }\n    get name() {\n        return `vec ${this._type.name}`;\n    }\n    display() {\n        return `vec ${this._type.display()}`;\n    }\n    valueToString(x) {\n        const elements = x.map(e => this._type.valueToString(e));\n        return 'vec {' + elements.join('; ') + '}';\n    }\n}\n/**\n * Represents an IDL Option\n * @param {Type} t\n */\nexport class OptClass extends ConstructType {\n    constructor(_type) {\n        super();\n        this._type = _type;\n    }\n    accept(v, d) {\n        return v.visitOpt(this, this._type, d);\n    }\n    covariant(x) {\n        try {\n            if (Array.isArray(x) && (x.length === 0 || (x.length === 1 && this._type.covariant(x[0]))))\n                return true;\n        }\n        catch (e) {\n            throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)} \\n\\n-> ${e.message}`);\n        }\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        if (x.length === 0) {\n            return new Uint8Array([0]);\n        }\n        else {\n            return concat(new Uint8Array([1]), this._type.encodeValue(x[0]));\n        }\n    }\n    _buildTypeTableImpl(typeTable) {\n        this._type.buildTypeTable(typeTable);\n        const opCode = slebEncode(-18 /* IDLTypeIds.Opt */);\n        const buffer = this._type.encodeType(typeTable);\n        typeTable.add(this, concat(opCode, buffer));\n    }\n    decodeValue(b, t) {\n        const opt = this.checkType(t);\n        if (!(opt instanceof OptClass)) {\n            throw new Error('Not an option type');\n        }\n        switch (safeReadUint8(b)) {\n            case 0:\n                return [];\n            case 1:\n                return [this._type.decodeValue(b, opt._type)];\n            default:\n                throw new Error('Not an option value');\n        }\n    }\n    get name() {\n        return `opt ${this._type.name}`;\n    }\n    display() {\n        return `opt ${this._type.display()}`;\n    }\n    valueToString(x) {\n        if (x.length === 0) {\n            return 'null';\n        }\n        else {\n            return `opt ${this._type.valueToString(x[0])}`;\n        }\n    }\n}\n/**\n * Represents an IDL Record\n * @param {Object} [fields] - mapping of function name to Type\n */\nexport class RecordClass extends ConstructType {\n    constructor(fields = {}) {\n        super();\n        this._fields = Object.entries(fields).sort((a, b) => idlLabelToId(a[0]) - idlLabelToId(b[0]));\n    }\n    accept(v, d) {\n        return v.visitRecord(this, this._fields, d);\n    }\n    tryAsTuple() {\n        const res = [];\n        for (let i = 0; i < this._fields.length; i++) {\n            const [key, type] = this._fields[i];\n            if (key !== `_${i}_`) {\n                return null;\n            }\n            res.push(type);\n        }\n        return res;\n    }\n    covariant(x) {\n        if (typeof x === 'object' &&\n            this._fields.every(([k, t]) => {\n                // eslint-disable-next-line\n                if (!x.hasOwnProperty(k)) {\n                    throw new Error(`Record is missing key \"${k}\".`);\n                }\n                try {\n                    return t.covariant(x[k]);\n                }\n                catch (e) {\n                    throw new Error(`Invalid ${this.display()} argument: \\n\\nfield ${k} -> ${e.message}`);\n                }\n            }))\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        const values = this._fields.map(([key]) => x[key]);\n        const bufs = zipWith(this._fields, values, ([, c], d) => c.encodeValue(d));\n        return concat(...bufs);\n    }\n    _buildTypeTableImpl(T) {\n        this._fields.forEach(([_, value]) => value.buildTypeTable(T));\n        const opCode = slebEncode(-20 /* IDLTypeIds.Record */);\n        const len = lebEncode(this._fields.length);\n        const fields = this._fields.map(([key, value]) => concat(lebEncode(idlLabelToId(key)), value.encodeType(T)));\n        T.add(this, concat(opCode, len, concat(...fields)));\n    }\n    decodeValue(b, t) {\n        const record = this.checkType(t);\n        if (!(record instanceof RecordClass)) {\n            throw new Error('Not a record type');\n        }\n        const x = {};\n        let expectedRecordIdx = 0;\n        let actualRecordIdx = 0;\n        while (actualRecordIdx < record._fields.length) {\n            const [hash, type] = record._fields[actualRecordIdx];\n            if (expectedRecordIdx >= this._fields.length) {\n                // skip unexpected left over fields present on the wire\n                type.decodeValue(b, type);\n                actualRecordIdx++;\n                continue;\n            }\n            const [expectKey, expectType] = this._fields[expectedRecordIdx];\n            const expectedId = idlLabelToId(this._fields[expectedRecordIdx][0]);\n            const actualId = idlLabelToId(hash);\n            if (expectedId === actualId) {\n                // the current field on the wire matches the expected field\n                x[expectKey] = expectType.decodeValue(b, type);\n                expectedRecordIdx++;\n                actualRecordIdx++;\n            }\n            else if (actualId > expectedId) {\n                // The expected field does not exist on the wire\n                if (expectType instanceof OptClass || expectType instanceof ReservedClass) {\n                    x[expectKey] = [];\n                    expectedRecordIdx++;\n                }\n                else {\n                    throw new Error('Cannot find required field ' + expectKey);\n                }\n            }\n            else {\n                // The field on the wire does not exist in the output type, so we can skip it\n                type.decodeValue(b, type);\n                actualRecordIdx++;\n            }\n        }\n        // initialize left over expected optional fields\n        for (const [expectKey, expectType] of this._fields.slice(expectedRecordIdx)) {\n            if (expectType instanceof OptClass || expectType instanceof ReservedClass) {\n                // TODO this assumes null value in opt is represented as []\n                x[expectKey] = [];\n            }\n            else {\n                throw new Error('Cannot find required field ' + expectKey);\n            }\n        }\n        return x;\n    }\n    get name() {\n        const fields = this._fields.map(([key, value]) => key + ':' + value.name);\n        return `record {${fields.join('; ')}}`;\n    }\n    display() {\n        const fields = this._fields.map(([key, value]) => key + ':' + value.display());\n        return `record {${fields.join('; ')}}`;\n    }\n    valueToString(x) {\n        const values = this._fields.map(([key]) => x[key]);\n        const fields = zipWith(this._fields, values, ([k, c], d) => k + '=' + c.valueToString(d));\n        return `record {${fields.join('; ')}}`;\n    }\n}\n/**\n * Represents Tuple, a syntactic sugar for Record.\n * @param {Type} components\n */\nexport class TupleClass extends RecordClass {\n    constructor(_components) {\n        const x = {};\n        _components.forEach((e, i) => (x['_' + i + '_'] = e));\n        super(x);\n        this._components = _components;\n    }\n    accept(v, d) {\n        return v.visitTuple(this, this._components, d);\n    }\n    covariant(x) {\n        // `>=` because tuples can be covariant when encoded.\n        if (Array.isArray(x) &&\n            x.length >= this._fields.length &&\n            this._components.every((t, i) => {\n                try {\n                    return t.covariant(x[i]);\n                }\n                catch (e) {\n                    throw new Error(`Invalid ${this.display()} argument: \\n\\nindex ${i} -> ${e.message}`);\n                }\n            }))\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        const bufs = zipWith(this._components, x, (c, d) => c.encodeValue(d));\n        return concat(...bufs);\n    }\n    decodeValue(b, t) {\n        const tuple = this.checkType(t);\n        if (!(tuple instanceof TupleClass)) {\n            throw new Error('not a tuple type');\n        }\n        if (tuple._components.length < this._components.length) {\n            throw new Error('tuple mismatch');\n        }\n        const res = [];\n        for (const [i, wireType] of tuple._components.entries()) {\n            if (i >= this._components.length) {\n                // skip value\n                wireType.decodeValue(b, wireType);\n            }\n            else {\n                res.push(this._components[i].decodeValue(b, wireType));\n            }\n        }\n        return res;\n    }\n    display() {\n        const fields = this._components.map(value => value.display());\n        return `record {${fields.join('; ')}}`;\n    }\n    valueToString(values) {\n        const fields = zipWith(this._components, values, (c, d) => c.valueToString(d));\n        return `record {${fields.join('; ')}}`;\n    }\n}\n/**\n * Represents an IDL Variant\n * @param {Object} [fields] - mapping of function name to Type\n */\nexport class VariantClass extends ConstructType {\n    constructor(fields = {}) {\n        super();\n        this._fields = Object.entries(fields).sort((a, b) => idlLabelToId(a[0]) - idlLabelToId(b[0]));\n    }\n    accept(v, d) {\n        return v.visitVariant(this, this._fields, d);\n    }\n    covariant(x) {\n        if (typeof x === 'object' &&\n            Object.entries(x).length === 1 &&\n            this._fields.every(([k, v]) => {\n                try {\n                    // eslint-disable-next-line\n                    return !x.hasOwnProperty(k) || v.covariant(x[k]);\n                }\n                catch (e) {\n                    throw new Error(`Invalid ${this.display()} argument: \\n\\nvariant ${k} -> ${e.message}`);\n                }\n            }))\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        for (let i = 0; i < this._fields.length; i++) {\n            const [name, type] = this._fields[i];\n            // eslint-disable-next-line\n            if (x.hasOwnProperty(name)) {\n                const idx = lebEncode(i);\n                const buf = type.encodeValue(x[name]);\n                return concat(idx, buf);\n            }\n        }\n        throw Error('Variant has no data: ' + x);\n    }\n    _buildTypeTableImpl(typeTable) {\n        this._fields.forEach(([, type]) => {\n            type.buildTypeTable(typeTable);\n        });\n        const opCode = slebEncode(-21 /* IDLTypeIds.Variant */);\n        const len = lebEncode(this._fields.length);\n        const fields = this._fields.map(([key, value]) => concat(lebEncode(idlLabelToId(key)), value.encodeType(typeTable)));\n        typeTable.add(this, concat(opCode, len, ...fields));\n    }\n    decodeValue(b, t) {\n        const variant = this.checkType(t);\n        if (!(variant instanceof VariantClass)) {\n            throw new Error('Not a variant type');\n        }\n        const idx = Number(lebDecode(b));\n        if (idx >= variant._fields.length) {\n            throw Error('Invalid variant index: ' + idx);\n        }\n        const [wireHash, wireType] = variant._fields[idx];\n        for (const [key, expectType] of this._fields) {\n            if (idlLabelToId(wireHash) === idlLabelToId(key)) {\n                const value = expectType.decodeValue(b, wireType);\n                return { [key]: value };\n            }\n        }\n        throw new Error('Cannot find field hash ' + wireHash);\n    }\n    get name() {\n        const fields = this._fields.map(([key, type]) => key + ':' + type.name);\n        return `variant {${fields.join('; ')}}`;\n    }\n    display() {\n        const fields = this._fields.map(([key, type]) => key + (type.name === 'null' ? '' : `:${type.display()}`));\n        return `variant {${fields.join('; ')}}`;\n    }\n    valueToString(x) {\n        for (const [name, type] of this._fields) {\n            // eslint-disable-next-line\n            if (x.hasOwnProperty(name)) {\n                const value = type.valueToString(x[name]);\n                if (value === 'null') {\n                    return `variant {${name}}`;\n                }\n                else {\n                    return `variant {${name}=${value}}`;\n                }\n            }\n        }\n        throw new Error('Variant has no data: ' + x);\n    }\n}\n/**\n * Represents a reference to an IDL type, used for defining recursive data\n * types.\n */\nexport class RecClass extends ConstructType {\n    constructor() {\n        super(...arguments);\n        this._id = RecClass._counter++;\n        this._type = undefined;\n    }\n    accept(v, d) {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        return v.visitRec(this, this._type, d);\n    }\n    fill(t) {\n        this._type = t;\n    }\n    getType() {\n        return this._type;\n    }\n    covariant(x) {\n        if (this._type ? this._type.covariant(x) : false)\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        return this._type.encodeValue(x);\n    }\n    _buildTypeTableImpl(typeTable) {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        typeTable.add(this, new Uint8Array([]));\n        this._type.buildTypeTable(typeTable);\n        typeTable.merge(this, this._type.name);\n    }\n    decodeValue(b, t) {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        return this._type.decodeValue(b, t);\n    }\n    get name() {\n        return `rec_${this._id}`;\n    }\n    display() {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        return `μ${this.name}.${this._type.name}`;\n    }\n    valueToString(x) {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        return this._type.valueToString(x);\n    }\n}\nRecClass._counter = 0;\nfunction decodePrincipalId(b) {\n    const x = safeReadUint8(b);\n    if (x !== 1) {\n        throw new Error('Cannot decode principal');\n    }\n    const len = Number(lebDecode(b));\n    return PrincipalId.fromUint8Array(new Uint8Array(safeRead(b, len)));\n}\n/**\n * Represents an IDL principal reference\n */\nexport class PrincipalClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitPrincipal(this, d);\n    }\n    covariant(x) {\n        if (x && x._isPrincipal)\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        const buf = x.toUint8Array();\n        const len = lebEncode(buf.byteLength);\n        return concat(new Uint8Array([1]), len, buf);\n    }\n    encodeType() {\n        return slebEncode(-24 /* IDLTypeIds.Principal */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        return decodePrincipalId(b);\n    }\n    get name() {\n        return 'principal';\n    }\n    valueToString(x) {\n        return `${this.name} \"${x.toText()}\"`;\n    }\n}\n/**\n * Represents an IDL function reference.\n * @param argTypes Argument types.\n * @param retTypes Return types.\n * @param annotations Function annotations.\n */\nexport class FuncClass extends ConstructType {\n    constructor(argTypes, retTypes, annotations = []) {\n        super();\n        this.argTypes = argTypes;\n        this.retTypes = retTypes;\n        this.annotations = annotations;\n    }\n    static argsToString(types, v) {\n        if (types.length !== v.length) {\n            throw new Error('arity mismatch');\n        }\n        return '(' + types.map((t, i) => t.valueToString(v[i])).join(', ') + ')';\n    }\n    accept(v, d) {\n        return v.visitFunc(this, d);\n    }\n    covariant(x) {\n        if (Array.isArray(x) && x.length === 2 && x[0] && x[0]._isPrincipal && typeof x[1] === 'string')\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue([principal, methodName]) {\n        const buf = principal.toUint8Array();\n        const len = lebEncode(buf.byteLength);\n        const canister = concat(new Uint8Array([1]), len, buf);\n        const method = new TextEncoder().encode(methodName);\n        const methodLen = lebEncode(method.byteLength);\n        return concat(new Uint8Array([1]), canister, methodLen, method);\n    }\n    _buildTypeTableImpl(T) {\n        this.argTypes.forEach(arg => arg.buildTypeTable(T));\n        this.retTypes.forEach(arg => arg.buildTypeTable(T));\n        const opCode = slebEncode(-22 /* IDLTypeIds.Func */);\n        const argLen = lebEncode(this.argTypes.length);\n        const args = concat(...this.argTypes.map(arg => arg.encodeType(T)));\n        const retLen = lebEncode(this.retTypes.length);\n        const rets = concat(...this.retTypes.map(arg => arg.encodeType(T)));\n        const annLen = lebEncode(this.annotations.length);\n        const anns = concat(...this.annotations.map(a => this.encodeAnnotation(a)));\n        T.add(this, concat(opCode, argLen, args, retLen, rets, annLen, anns));\n    }\n    decodeValue(b) {\n        const x = safeReadUint8(b);\n        if (x !== 1) {\n            throw new Error('Cannot decode function reference');\n        }\n        const canister = decodePrincipalId(b);\n        const mLen = Number(lebDecode(b));\n        const buf = safeRead(b, mLen);\n        const decoder = new TextDecoder('utf8', { fatal: true });\n        const method = decoder.decode(buf);\n        return [canister, method];\n    }\n    get name() {\n        const args = this.argTypes.map(arg => arg.name).join(', ');\n        const rets = this.retTypes.map(arg => arg.name).join(', ');\n        const annon = ' ' + this.annotations.join(' ');\n        return `(${args}) -> (${rets})${annon}`;\n    }\n    valueToString([principal, str]) {\n        return `func \"${principal.toText()}\".${str}`;\n    }\n    display() {\n        const args = this.argTypes.map(arg => arg.display()).join(', ');\n        const rets = this.retTypes.map(arg => arg.display()).join(', ');\n        const annon = ' ' + this.annotations.join(' ');\n        return `(${args}) → (${rets})${annon}`;\n    }\n    encodeAnnotation(ann) {\n        if (ann === 'query') {\n            return new Uint8Array([1]);\n        }\n        else if (ann === 'oneway') {\n            return new Uint8Array([2]);\n        }\n        else if (ann === 'composite_query') {\n            return new Uint8Array([3]);\n        }\n        else {\n            throw new Error('Illegal function annotation');\n        }\n    }\n}\nexport class ServiceClass extends ConstructType {\n    constructor(fields) {\n        super();\n        this._fields = Object.entries(fields).sort((a, b) => idlLabelToId(a[0]) - idlLabelToId(b[0]));\n    }\n    accept(v, d) {\n        return v.visitService(this, d);\n    }\n    covariant(x) {\n        if (x && x._isPrincipal)\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        const buf = x.toUint8Array();\n        const len = lebEncode(buf.length);\n        return concat(new Uint8Array([1]), len, buf);\n    }\n    _buildTypeTableImpl(T) {\n        this._fields.forEach(([_, func]) => func.buildTypeTable(T));\n        const opCode = slebEncode(-23 /* IDLTypeIds.Service */);\n        const len = lebEncode(this._fields.length);\n        const meths = this._fields.map(([label, func]) => {\n            const labelBuf = new TextEncoder().encode(label);\n            const labelLen = lebEncode(labelBuf.length);\n            return concat(labelLen, labelBuf, func.encodeType(T));\n        });\n        T.add(this, concat(opCode, len, ...meths));\n    }\n    decodeValue(b) {\n        return decodePrincipalId(b);\n    }\n    get name() {\n        const fields = this._fields.map(([key, value]) => key + ':' + value.name);\n        return `service {${fields.join('; ')}}`;\n    }\n    valueToString(x) {\n        return `service \"${x.toText()}\"`;\n    }\n}\n/**\n *\n * @param x\n * @returns {string}\n */\nfunction toReadableString(x) {\n    const str = JSON.stringify(x, (_key, value) => typeof value === 'bigint' ? `BigInt(${value})` : value);\n    return str && str.length > toReadableString_max\n        ? str.substring(0, toReadableString_max - 3) + '...'\n        : str;\n}\n/**\n * Encode a array of values\n * @param argTypes\n * @param args\n * @returns {Buffer} serialised value\n */\nexport function encode(argTypes, args) {\n    if (args.length < argTypes.length) {\n        throw Error('Wrong number of message arguments');\n    }\n    const typeTable = new TypeTable();\n    argTypes.forEach(t => t.buildTypeTable(typeTable));\n    const magic = new TextEncoder().encode(magicNumber);\n    const table = typeTable.encode();\n    const len = lebEncode(args.length);\n    const typs = concat(...argTypes.map(t => t.encodeType(typeTable)));\n    const vals = concat(...zipWith(argTypes, args, (t, x) => {\n        try {\n            t.covariant(x);\n        }\n        catch (e) {\n            const err = new Error(e.message + '\\n\\n');\n            throw err;\n        }\n        return t.encodeValue(x);\n    }));\n    return concat(magic, table, len, typs, vals);\n}\n/**\n * Decode a binary value\n * @param retTypes - Types expected in the buffer.\n * @param bytes - hex-encoded string, or buffer.\n * @returns Value deserialised to JS type\n */\nexport function decode(retTypes, bytes) {\n    const b = new Pipe(bytes);\n    if (bytes.byteLength < magicNumber.length) {\n        throw new Error('Message length smaller than magic number');\n    }\n    const magicBuffer = safeRead(b, magicNumber.length);\n    const magic = new TextDecoder().decode(magicBuffer);\n    if (magic !== magicNumber) {\n        throw new Error('Wrong magic number: ' + JSON.stringify(magic));\n    }\n    function readTypeTable(pipe) {\n        const typeTable = [];\n        const len = Number(lebDecode(pipe));\n        for (let i = 0; i < len; i++) {\n            const ty = Number(slebDecode(pipe));\n            switch (ty) {\n                case -18 /* IDLTypeIds.Opt */:\n                case -19 /* IDLTypeIds.Vector */: {\n                    const t = Number(slebDecode(pipe));\n                    typeTable.push([ty, t]);\n                    break;\n                }\n                case -20 /* IDLTypeIds.Record */:\n                case -21 /* IDLTypeIds.Variant */: {\n                    const fields = [];\n                    let objectLength = Number(lebDecode(pipe));\n                    let prevHash;\n                    while (objectLength--) {\n                        const hash = Number(lebDecode(pipe));\n                        if (hash >= Math.pow(2, 32)) {\n                            throw new Error('field id out of 32-bit range');\n                        }\n                        if (typeof prevHash === 'number' && prevHash >= hash) {\n                            throw new Error('field id collision or not sorted');\n                        }\n                        prevHash = hash;\n                        const t = Number(slebDecode(pipe));\n                        fields.push([hash, t]);\n                    }\n                    typeTable.push([ty, fields]);\n                    break;\n                }\n                case -22 /* IDLTypeIds.Func */: {\n                    const args = [];\n                    let argLength = Number(lebDecode(pipe));\n                    while (argLength--) {\n                        args.push(Number(slebDecode(pipe)));\n                    }\n                    const returnValues = [];\n                    let returnValuesLength = Number(lebDecode(pipe));\n                    while (returnValuesLength--) {\n                        returnValues.push(Number(slebDecode(pipe)));\n                    }\n                    const annotations = [];\n                    let annotationLength = Number(lebDecode(pipe));\n                    while (annotationLength--) {\n                        const annotation = Number(lebDecode(pipe));\n                        switch (annotation) {\n                            case 1: {\n                                annotations.push('query');\n                                break;\n                            }\n                            case 2: {\n                                annotations.push('oneway');\n                                break;\n                            }\n                            case 3: {\n                                annotations.push('composite_query');\n                                break;\n                            }\n                            default:\n                                throw new Error('unknown annotation');\n                        }\n                    }\n                    typeTable.push([ty, [args, returnValues, annotations]]);\n                    break;\n                }\n                case -23 /* IDLTypeIds.Service */: {\n                    let servLength = Number(lebDecode(pipe));\n                    const methods = [];\n                    while (servLength--) {\n                        const nameLength = Number(lebDecode(pipe));\n                        const funcName = new TextDecoder().decode(safeRead(pipe, nameLength));\n                        const funcType = slebDecode(pipe);\n                        methods.push([funcName, funcType]);\n                    }\n                    typeTable.push([ty, methods]);\n                    break;\n                }\n                default:\n                    throw new Error('Illegal op_code: ' + ty);\n            }\n        }\n        const rawList = [];\n        const length = Number(lebDecode(pipe));\n        for (let i = 0; i < length; i++) {\n            rawList.push(Number(slebDecode(pipe)));\n        }\n        return [typeTable, rawList];\n    }\n    const [rawTable, rawTypes] = readTypeTable(b);\n    if (rawTypes.length < retTypes.length) {\n        throw new Error('Wrong number of return values');\n    }\n    const table = rawTable.map(_ => Rec());\n    function getType(t) {\n        if (t < -24) {\n            throw new Error('future value not supported');\n        }\n        if (t < 0) {\n            switch (t) {\n                case -1:\n                    return Null;\n                case -2:\n                    return Bool;\n                case -3:\n                    return Nat;\n                case -4:\n                    return Int;\n                case -5:\n                    return Nat8;\n                case -6:\n                    return Nat16;\n                case -7:\n                    return Nat32;\n                case -8:\n                    return Nat64;\n                case -9:\n                    return Int8;\n                case -10:\n                    return Int16;\n                case -11:\n                    return Int32;\n                case -12:\n                    return Int64;\n                case -13:\n                    return Float32;\n                case -14:\n                    return Float64;\n                case -15:\n                    return Text;\n                case -16:\n                    return Reserved;\n                case -17:\n                    return Empty;\n                case -24:\n                    return Principal;\n                default:\n                    throw new Error('Illegal op_code: ' + t);\n            }\n        }\n        if (t >= rawTable.length) {\n            throw new Error('type index out of range');\n        }\n        return table[t];\n    }\n    function buildType(entry) {\n        switch (entry[0]) {\n            case -19 /* IDLTypeIds.Vector */: {\n                const ty = getType(entry[1]);\n                return Vec(ty);\n            }\n            case -18 /* IDLTypeIds.Opt */: {\n                const ty = getType(entry[1]);\n                return Opt(ty);\n            }\n            case -20 /* IDLTypeIds.Record */: {\n                const fields = {};\n                for (const [hash, ty] of entry[1]) {\n                    const name = `_${hash}_`;\n                    fields[name] = getType(ty);\n                }\n                const record = Record(fields);\n                const tuple = record.tryAsTuple();\n                if (Array.isArray(tuple)) {\n                    return Tuple(...tuple);\n                }\n                else {\n                    return record;\n                }\n            }\n            case -21 /* IDLTypeIds.Variant */: {\n                const fields = {};\n                for (const [hash, ty] of entry[1]) {\n                    const name = `_${hash}_`;\n                    fields[name] = getType(ty);\n                }\n                return Variant(fields);\n            }\n            case -22 /* IDLTypeIds.Func */: {\n                const [args, returnValues, annotations] = entry[1];\n                return Func(args.map((t) => getType(t)), returnValues.map((t) => getType(t)), annotations);\n            }\n            case -23 /* IDLTypeIds.Service */: {\n                const rec = {};\n                const methods = entry[1];\n                for (const [name, typeRef] of methods) {\n                    let type = getType(typeRef);\n                    if (type instanceof RecClass) {\n                        // unpack reference type\n                        type = type.getType();\n                    }\n                    if (!(type instanceof FuncClass)) {\n                        throw new Error('Illegal service definition: services can only contain functions');\n                    }\n                    rec[name] = type;\n                }\n                return Service(rec);\n            }\n            default:\n                throw new Error('Illegal op_code: ' + entry[0]);\n        }\n    }\n    rawTable.forEach((entry, i) => {\n        // Process function type first, so that we can construct the correct service type\n        if (entry[0] === -22 /* IDLTypeIds.Func */) {\n            const t = buildType(entry);\n            table[i].fill(t);\n        }\n    });\n    rawTable.forEach((entry, i) => {\n        if (entry[0] !== -22 /* IDLTypeIds.Func */) {\n            const t = buildType(entry);\n            table[i].fill(t);\n        }\n    });\n    const types = rawTypes.map(t => getType(t));\n    const output = retTypes.map((t, i) => {\n        return t.decodeValue(b, types[i]);\n    });\n    // skip unused values\n    for (let ind = retTypes.length; ind < types.length; ind++) {\n        types[ind].decodeValue(b, types[ind]);\n    }\n    if (b.byteLength > 0) {\n        throw new Error('decode: Left-over bytes');\n    }\n    return output;\n}\n// Export Types instances.\nexport const Empty = new EmptyClass();\nexport const Reserved = new ReservedClass();\n/**\n * Client-only type for deserializing unknown data. Not supported by Candid, and its use is discouraged.\n */\nexport const Unknown = new UnknownClass();\nexport const Bool = new BoolClass();\nexport const Null = new NullClass();\nexport const Text = new TextClass();\nexport const Int = new IntClass();\nexport const Nat = new NatClass();\nexport const Float32 = new FloatClass(32);\nexport const Float64 = new FloatClass(64);\nexport const Int8 = new FixedIntClass(8);\nexport const Int16 = new FixedIntClass(16);\nexport const Int32 = new FixedIntClass(32);\nexport const Int64 = new FixedIntClass(64);\nexport const Nat8 = new FixedNatClass(8);\nexport const Nat16 = new FixedNatClass(16);\nexport const Nat32 = new FixedNatClass(32);\nexport const Nat64 = new FixedNatClass(64);\nexport const Principal = new PrincipalClass();\n/**\n *\n * @param types array of any types\n * @returns TupleClass from those types\n */\nexport function Tuple(...types) {\n    return new TupleClass(types);\n}\n/**\n *\n * @param t IDL Type\n * @returns VecClass from that type\n */\nexport function Vec(t) {\n    return new VecClass(t);\n}\n/**\n *\n * @param t IDL Type\n * @returns OptClass of Type\n */\nexport function Opt(t) {\n    return new OptClass(t);\n}\n/**\n *\n * @param t Record of string and IDL Type\n * @returns RecordClass of string and Type\n */\nexport function Record(t) {\n    return new RecordClass(t);\n}\n/**\n *\n * @param fields Record of string and IDL Type\n * @returns VariantClass\n */\nexport function Variant(fields) {\n    return new VariantClass(fields);\n}\n/**\n *\n * @returns new RecClass\n */\nexport function Rec() {\n    return new RecClass();\n}\n/**\n *\n * @param args array of IDL Types\n * @param ret array of IDL Types\n * @param annotations array of strings, [] by default\n * @returns new FuncClass\n */\nexport function Func(args, ret, annotations = []) {\n    return new FuncClass(args, ret, annotations);\n}\n/**\n *\n * @param t Record of string and FuncClass\n * @returns ServiceClass\n */\nexport function Service(t) {\n    return new ServiceClass(t);\n}\n//# sourceMappingURL=idl.js.map","// tslint:disable:no-bitwise\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz234567';\n// Build a lookup table for decoding.\nconst lookupTable = Object.create(null);\nfor (let i = 0; i < alphabet.length; i++) {\n    lookupTable[alphabet[i]] = i;\n}\n// Add aliases for rfc4648.\nlookupTable['0'] = lookupTable.o;\nlookupTable['1'] = lookupTable.i;\n/**\n * @param input The input array to encode.\n * @returns A Base32 string encoding the input.\n */\nexport function encode(input) {\n    // How many bits will we skip from the first byte.\n    let skip = 0;\n    // 5 high bits, carry from one byte to the next.\n    let bits = 0;\n    // The output string in base32.\n    let output = '';\n    function encodeByte(byte) {\n        if (skip < 0) {\n            // we have a carry from the previous byte\n            bits |= byte >> -skip;\n        }\n        else {\n            // no carry\n            bits = (byte << skip) & 248;\n        }\n        if (skip > 3) {\n            // Not enough data to produce a character, get us another one\n            skip -= 8;\n            return 1;\n        }\n        if (skip < 4) {\n            // produce a character\n            output += alphabet[bits >> 3];\n            skip += 5;\n        }\n        return 0;\n    }\n    for (let i = 0; i < input.length;) {\n        i += encodeByte(input[i]);\n    }\n    return output + (skip < 0 ? alphabet[bits >> 3] : '');\n}\n/**\n * @param input The base32 encoded string to decode.\n */\nexport function decode(input) {\n    // how many bits we have from the previous character.\n    let skip = 0;\n    // current byte we're producing.\n    let byte = 0;\n    const output = new Uint8Array(((input.length * 4) / 3) | 0);\n    let o = 0;\n    function decodeChar(char) {\n        // Consume a character from the stream, store\n        // the output in this.output. As before, better\n        // to use update().\n        let val = lookupTable[char.toLowerCase()];\n        if (val === undefined) {\n            throw new Error(`Invalid character: ${JSON.stringify(char)}`);\n        }\n        // move to the high bits\n        val <<= 3;\n        byte |= val >>> skip;\n        skip += 5;\n        if (skip >= 8) {\n            // We have enough bytes to produce an output\n            output[o++] = byte;\n            skip -= 8;\n            if (skip > 0) {\n                byte = (val << (5 - skip)) & 255;\n            }\n            else {\n                byte = 0;\n            }\n        }\n    }\n    for (const c of input) {\n        decodeChar(c);\n    }\n    return output.slice(0, o);\n}\n//# sourceMappingURL=base32.js.map","// tslint:disable:no-bitwise\n// This file is translated to JavaScript from\n// https://lxp32.github.io/docs/a-simple-example-crc32-calculation/\nconst lookUpTable = new Uint32Array([\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n    0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n    0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n    0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n    0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n    0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n    0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n    0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n    0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n    0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n    0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n    0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n    0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n    0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n    0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n    0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n    0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n    0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\n]);\n/**\n * Calculate the CRC32 of an ArrayBufferLike.\n * @param buf The BufferLike to calculate the CRC32 of.\n */\nexport function getCrc32(buf) {\n    const b = new Uint8Array(buf);\n    let crc = -1;\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < b.length; i++) {\n        const byte = b[i];\n        const t = (byte ^ crc) & 0xff;\n        crc = lookUpTable[t] ^ (crc >>> 8);\n    }\n    return (crc ^ -1) >>> 0;\n}\n//# sourceMappingURL=getCrc.js.map","import { decode, encode } from './utils/base32';\nimport { getCrc32 } from './utils/getCrc';\nimport { sha224 } from './utils/sha224';\nconst SELF_AUTHENTICATING_SUFFIX = 2;\nconst ANONYMOUS_SUFFIX = 4;\nconst MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR = 'aaaaa-aa';\nconst fromHexString = (hexString) => { var _a; return new Uint8Array(((_a = hexString.match(/.{1,2}/g)) !== null && _a !== void 0 ? _a : []).map(byte => parseInt(byte, 16))); };\nconst toHexString = (bytes) => bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\nexport class Principal {\n    constructor(_arr) {\n        this._arr = _arr;\n        this._isPrincipal = true;\n    }\n    static anonymous() {\n        return new this(new Uint8Array([ANONYMOUS_SUFFIX]));\n    }\n    /**\n     * Utility method, returning the principal representing the management canister, decoded from the hex string `'aaaaa-aa'`\n     * @returns {Principal} principal of the management canister\n     */\n    static managementCanister() {\n        return this.fromHex(MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR);\n    }\n    static selfAuthenticating(publicKey) {\n        const sha = sha224(publicKey);\n        return new this(new Uint8Array([...sha, SELF_AUTHENTICATING_SUFFIX]));\n    }\n    static from(other) {\n        if (typeof other === 'string') {\n            return Principal.fromText(other);\n        }\n        else if (typeof other === 'object' &&\n            other !== null &&\n            other._isPrincipal === true) {\n            return new Principal(other._arr);\n        }\n        throw new Error(`Impossible to convert ${JSON.stringify(other)} to Principal.`);\n    }\n    static fromHex(hex) {\n        return new this(fromHexString(hex));\n    }\n    static fromText(text) {\n        const canisterIdNoDash = text.toLowerCase().replace(/-/g, '');\n        let arr = decode(canisterIdNoDash);\n        arr = arr.slice(4, arr.length);\n        const principal = new this(arr);\n        if (principal.toText() !== text) {\n            throw new Error(`Principal \"${principal.toText()}\" does not have a valid checksum (original value \"${text}\" may not be a valid Principal ID).`);\n        }\n        return principal;\n    }\n    static fromUint8Array(arr) {\n        return new this(arr);\n    }\n    isAnonymous() {\n        return this._arr.byteLength === 1 && this._arr[0] === ANONYMOUS_SUFFIX;\n    }\n    toUint8Array() {\n        return this._arr;\n    }\n    toHex() {\n        return toHexString(this._arr).toUpperCase();\n    }\n    toText() {\n        const checksumArrayBuf = new ArrayBuffer(4);\n        const view = new DataView(checksumArrayBuf);\n        view.setUint32(0, getCrc32(this._arr));\n        const checksum = new Uint8Array(checksumArrayBuf);\n        const bytes = Uint8Array.from(this._arr);\n        const array = new Uint8Array([...checksum, ...bytes]);\n        const result = encode(array);\n        const matches = result.match(/.{1,5}/g);\n        if (!matches) {\n            // This should only happen if there's no character, which is unreachable.\n            throw new Error();\n        }\n        return matches.join('-');\n    }\n    toString() {\n        return this.toText();\n    }\n    /**\n     * Utility method taking a Principal to compare against. Used for determining canister ranges in certificate verification\n     * @param {Principal} other - a {@link Principal} to compare\n     * @returns {'lt' | 'eq' | 'gt'} `'lt' | 'eq' | 'gt'` a string, representing less than, equal to, or greater than\n     */\n    compareTo(other) {\n        for (let i = 0; i < Math.min(this._arr.length, other._arr.length); i++) {\n            if (this._arr[i] < other._arr[i])\n                return 'lt';\n            else if (this._arr[i] > other._arr[i])\n                return 'gt';\n        }\n        // Here, at least one principal is a prefix of the other principal (they could be the same)\n        if (this._arr.length < other._arr.length)\n            return 'lt';\n        if (this._arr.length > other._arr.length)\n            return 'gt';\n        return 'eq';\n    }\n    /**\n     * Utility method checking whether a provided Principal is less than or equal to the current one using the {@link Principal.compareTo} method\n     * @param other a {@link Principal} to compare\n     * @returns {boolean} boolean\n     */\n    ltEq(other) {\n        const cmp = this.compareTo(other);\n        return cmp == 'lt' || cmp == 'eq';\n    }\n    /**\n     * Utility method checking whether a provided Principal is greater than or equal to the current one using the {@link Principal.compareTo} method\n     * @param other a {@link Principal} to compare\n     * @returns {boolean} boolean\n     */\n    gtEq(other) {\n        const cmp = this.compareTo(other);\n        return cmp == 'gt' || cmp == 'eq';\n    }\n}\n//# sourceMappingURL=index.js.map","import { sha224 as jsSha224 } from '@noble/hashes/sha256';\n/**\n * Returns the SHA224 hash of the buffer.\n * @param data Arraybuffer to encode\n */\nexport function sha224(data) {\n    return jsSha224.create().update(new Uint8Array(data)).digest();\n}\n//# sourceMappingURL=sha224.js.map","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.0.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2021 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","'use strict'\n\nconst Bignumber = require('bignumber.js').BigNumber\n\nexports.MT = {\n  POS_INT: 0,\n  NEG_INT: 1,\n  BYTE_STRING: 2,\n  UTF8_STRING: 3,\n  ARRAY: 4,\n  MAP: 5,\n  TAG: 6,\n  SIMPLE_FLOAT: 7\n}\n\nexports.TAG = {\n  DATE_STRING: 0,\n  DATE_EPOCH: 1,\n  POS_BIGINT: 2,\n  NEG_BIGINT: 3,\n  DECIMAL_FRAC: 4,\n  BIGFLOAT: 5,\n  BASE64URL_EXPECTED: 21,\n  BASE64_EXPECTED: 22,\n  BASE16_EXPECTED: 23,\n  CBOR: 24,\n  URI: 32,\n  BASE64URL: 33,\n  BASE64: 34,\n  REGEXP: 35,\n  MIME: 36\n}\n\nexports.NUMBYTES = {\n  ZERO: 0,\n  ONE: 24,\n  TWO: 25,\n  FOUR: 26,\n  EIGHT: 27,\n  INDEFINITE: 31\n}\n\nexports.SIMPLE = {\n  FALSE: 20,\n  TRUE: 21,\n  NULL: 22,\n  UNDEFINED: 23\n}\n\nexports.SYMS = {\n  NULL: Symbol('null'),\n  UNDEFINED: Symbol('undef'),\n  PARENT: Symbol('parent'),\n  BREAK: Symbol('break'),\n  STREAM: Symbol('stream')\n}\n\nexports.SHIFT32 = Math.pow(2, 32)\nexports.SHIFT16 = Math.pow(2, 16)\n\nexports.MAX_SAFE_HIGH = 0x1fffff\nexports.NEG_ONE = new Bignumber(-1)\nexports.TEN = new Bignumber(10)\nexports.TWO = new Bignumber(2)\n\nexports.PARENT = {\n  ARRAY: 0,\n  OBJECT: 1,\n  MAP: 2,\n  TAG: 3,\n  BYTE_STRING: 4,\n  UTF8_STRING: 5\n}\n","/* eslint-disable */\n\nmodule.exports = function decodeAsm (stdlib, foreign, buffer) {\n  'use asm'\n\n  // -- Imports\n\n  var heap = new stdlib.Uint8Array(buffer)\n  // var log = foreign.log\n  var pushInt = foreign.pushInt\n  var pushInt32 = foreign.pushInt32\n  var pushInt32Neg = foreign.pushInt32Neg\n  var pushInt64 = foreign.pushInt64\n  var pushInt64Neg = foreign.pushInt64Neg\n  var pushFloat = foreign.pushFloat\n  var pushFloatSingle = foreign.pushFloatSingle\n  var pushFloatDouble = foreign.pushFloatDouble\n  var pushTrue = foreign.pushTrue\n  var pushFalse = foreign.pushFalse\n  var pushUndefined = foreign.pushUndefined\n  var pushNull = foreign.pushNull\n  var pushInfinity = foreign.pushInfinity\n  var pushInfinityNeg = foreign.pushInfinityNeg\n  var pushNaN = foreign.pushNaN\n  var pushNaNNeg = foreign.pushNaNNeg\n\n  var pushArrayStart = foreign.pushArrayStart\n  var pushArrayStartFixed = foreign.pushArrayStartFixed\n  var pushArrayStartFixed32 = foreign.pushArrayStartFixed32\n  var pushArrayStartFixed64 = foreign.pushArrayStartFixed64\n  var pushObjectStart = foreign.pushObjectStart\n  var pushObjectStartFixed = foreign.pushObjectStartFixed\n  var pushObjectStartFixed32 = foreign.pushObjectStartFixed32\n  var pushObjectStartFixed64 = foreign.pushObjectStartFixed64\n\n  var pushByteString = foreign.pushByteString\n  var pushByteStringStart = foreign.pushByteStringStart\n  var pushUtf8String = foreign.pushUtf8String\n  var pushUtf8StringStart = foreign.pushUtf8StringStart\n\n  var pushSimpleUnassigned = foreign.pushSimpleUnassigned\n\n  var pushTagStart = foreign.pushTagStart\n  var pushTagStart4 = foreign.pushTagStart4\n  var pushTagStart8 = foreign.pushTagStart8\n  var pushTagUnassigned = foreign.pushTagUnassigned\n\n  var pushBreak = foreign.pushBreak\n\n  var pow = stdlib.Math.pow\n\n  // -- Constants\n\n\n  // -- Mutable Variables\n\n  var offset = 0\n  var inputLength = 0\n  var code = 0\n\n  // Decode a cbor string represented as Uint8Array\n  // which is allocated on the heap from 0 to inputLength\n  //\n  // input - Int\n  //\n  // Returns Code - Int,\n  // Success = 0\n  // Error > 0\n  function parse (input) {\n    input = input | 0\n\n    offset = 0\n    inputLength = input\n\n    while ((offset | 0) < (inputLength | 0)) {\n      code = jumpTable[heap[offset] & 255](heap[offset] | 0) | 0\n\n      if ((code | 0) > 0) {\n        break\n      }\n    }\n\n    return code | 0\n  }\n\n  // -- Helper Function\n\n  function checkOffset (n) {\n    n = n | 0\n\n    if ((((offset | 0) + (n | 0)) | 0) < (inputLength | 0)) {\n      return 0\n    }\n\n    return 1\n  }\n\n  function readUInt16 (n) {\n    n = n | 0\n\n    return (\n      (heap[n | 0] << 8) | heap[(n + 1) | 0]\n    ) | 0\n  }\n\n  function readUInt32 (n) {\n    n = n | 0\n\n    return (\n      (heap[n | 0] << 24) | (heap[(n + 1) | 0] << 16) | (heap[(n + 2) | 0] << 8) | heap[(n + 3) | 0]\n    ) | 0\n  }\n\n  // -- Initial Byte Handlers\n\n  function INT_P (octet) {\n    octet = octet | 0\n\n    pushInt(octet | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function UINT_P_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushInt(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function UINT_P_16 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushInt(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function UINT_P_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushInt32(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function UINT_P_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushInt64(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function INT_N (octet) {\n    octet = octet | 0\n\n    pushInt((-1 - ((octet - 32) | 0)) | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function UINT_N_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushInt(\n      (-1 - (heap[(offset + 1) | 0] | 0)) | 0\n    )\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function UINT_N_16 (octet) {\n    octet = octet | 0\n\n    var val = 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    val = readUInt16((offset + 1) | 0) | 0\n    pushInt((-1 - (val | 0)) | 0)\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function UINT_N_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushInt32Neg(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function UINT_N_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushInt64Neg(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function BYTE_STRING (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var step = 0\n\n    step = (octet - 64) | 0\n    if (checkOffset(step | 0) | 0) {\n      return 1\n    }\n\n    start = (offset + 1) | 0\n    end = (((offset + 1) | 0) + (step | 0)) | 0\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_8 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    length = heap[(offset + 1) | 0] | 0\n    start = (offset + 2) | 0\n    end = (((offset + 2) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 1) | 0) | 0) {\n      return 1\n    }\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_16 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    length = readUInt16((offset + 1) | 0) | 0\n    start = (offset + 3) | 0\n    end = (((offset + 3) | 0) + (length | 0)) | 0\n\n\n    if (checkOffset((length + 2) | 0) | 0) {\n      return 1\n    }\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_32 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    length = readUInt32((offset + 1) | 0) | 0\n    start = (offset + 5) | 0\n    end = (((offset + 5) | 0) + (length | 0)) | 0\n\n\n    if (checkOffset((length + 4) | 0) | 0) {\n      return 1\n    }\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_64 (octet) {\n    // NOT IMPLEMENTED\n    octet = octet | 0\n\n    return 1\n  }\n\n  function BYTE_STRING_BREAK (octet) {\n    octet = octet | 0\n\n    pushByteStringStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function UTF8_STRING (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var step = 0\n\n    step = (octet - 96) | 0\n\n    if (checkOffset(step | 0) | 0) {\n      return 1\n    }\n\n    start = (offset + 1) | 0\n    end = (((offset + 1) | 0) + (step | 0)) | 0\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_8 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    length = heap[(offset + 1) | 0] | 0\n    start = (offset + 2) | 0\n    end = (((offset + 2) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 1) | 0) | 0) {\n      return 1\n    }\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_16 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    length = readUInt16((offset + 1) | 0) | 0\n    start = (offset + 3) | 0\n    end = (((offset + 3) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 2) | 0) | 0) {\n      return 1\n    }\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_32 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    length = readUInt32((offset + 1) | 0) | 0\n    start = (offset + 5) | 0\n    end = (((offset + 5) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 4) | 0) | 0) {\n      return 1\n    }\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_64 (octet) {\n    // NOT IMPLEMENTED\n    octet = octet | 0\n\n    return 1\n  }\n\n  function UTF8_STRING_BREAK (octet) {\n    octet = octet | 0\n\n    pushUtf8StringStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function ARRAY (octet) {\n    octet = octet | 0\n\n    pushArrayStartFixed((octet - 128) | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function ARRAY_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function ARRAY_16 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function ARRAY_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed32(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function ARRAY_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed64(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function ARRAY_BREAK (octet) {\n    octet = octet | 0\n\n    pushArrayStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function MAP (octet) {\n    octet = octet | 0\n\n    var step = 0\n\n    step = (octet - 160) | 0\n\n    if (checkOffset(step | 0) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed(step | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function MAP_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function MAP_16 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function MAP_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed32(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function MAP_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed64(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function MAP_BREAK (octet) {\n    octet = octet | 0\n\n    pushObjectStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function TAG_KNOWN (octet) {\n    octet = octet | 0\n\n    pushTagStart((octet - 192| 0) | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BIGNUM_POS (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BIGNUM_NEG (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_FRAC (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BIGNUM_FLOAT (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_UNASSIGNED (octet) {\n    octet = octet | 0\n\n    pushTagStart((octet - 192| 0) | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BASE64_URL (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BASE64 (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BASE16 (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_1 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushTagStart(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_2 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushTagStart(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_4 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushTagStart4(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushTagStart8(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9 | 0)\n\n    return 0\n  }\n\n  function SIMPLE_UNASSIGNED (octet) {\n    octet = octet | 0\n\n    pushSimpleUnassigned(((octet | 0) - 224) | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_FALSE (octet) {\n    octet = octet | 0\n\n    pushFalse()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_TRUE (octet) {\n    octet = octet | 0\n\n    pushTrue()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_NULL (octet) {\n    octet = octet | 0\n\n    pushNull()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_UNDEFINED (octet) {\n    octet = octet | 0\n\n    pushUndefined()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_BYTE (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushSimpleUnassigned(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2)  | 0\n\n    return 0\n  }\n\n  function SIMPLE_FLOAT_HALF (octet) {\n    octet = octet | 0\n\n    var f = 0\n    var g = 0\n    var sign = 1.0\n    var exp = 0.0\n    var mant = 0.0\n    var r = 0.0\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    f = heap[(offset + 1) | 0] | 0\n    g = heap[(offset + 2) | 0] | 0\n\n    if ((f | 0) & 0x80) {\n      sign = -1.0\n    }\n\n    exp = +(((f | 0) & 0x7C) >> 2)\n    mant = +((((f | 0) & 0x03) << 8) | g)\n\n    if (+exp == 0.0) {\n      pushFloat(+(\n        (+sign) * +5.9604644775390625e-8 * (+mant)\n      ))\n    } else if (+exp == 31.0) {\n      if (+sign == 1.0) {\n        if (+mant > 0.0) {\n          pushNaN()\n        } else {\n          pushInfinity()\n        }\n      } else {\n        if (+mant > 0.0) {\n          pushNaNNeg()\n        } else {\n          pushInfinityNeg()\n        }\n      }\n    } else {\n      pushFloat(+(\n        +sign * pow(+2, +(+exp - 25.0)) * +(1024.0 + mant)\n      ))\n    }\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function SIMPLE_FLOAT_SINGLE (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushFloatSingle(\n      heap[(offset + 1) | 0] | 0,\n      heap[(offset + 2) | 0] | 0,\n      heap[(offset + 3) | 0] | 0,\n      heap[(offset + 4) | 0] | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function SIMPLE_FLOAT_DOUBLE (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushFloatDouble(\n      heap[(offset + 1) | 0] | 0,\n      heap[(offset + 2) | 0] | 0,\n      heap[(offset + 3) | 0] | 0,\n      heap[(offset + 4) | 0] | 0,\n      heap[(offset + 5) | 0] | 0,\n      heap[(offset + 6) | 0] | 0,\n      heap[(offset + 7) | 0] | 0,\n      heap[(offset + 8) | 0] | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function ERROR (octet) {\n    octet = octet | 0\n\n    return 1\n  }\n\n  function BREAK (octet) {\n    octet = octet | 0\n\n    pushBreak()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  // -- Jump Table\n\n  var jumpTable = [\n    // Integer 0x00..0x17 (0..23)\n    INT_P, // 0x00\n    INT_P, // 0x01\n    INT_P, // 0x02\n    INT_P, // 0x03\n    INT_P, // 0x04\n    INT_P, // 0x05\n    INT_P, // 0x06\n    INT_P, // 0x07\n    INT_P, // 0x08\n    INT_P, // 0x09\n    INT_P, // 0x0A\n    INT_P, // 0x0B\n    INT_P, // 0x0C\n    INT_P, // 0x0D\n    INT_P, // 0x0E\n    INT_P, // 0x0F\n    INT_P, // 0x10\n    INT_P, // 0x11\n    INT_P, // 0x12\n    INT_P, // 0x13\n    INT_P, // 0x14\n    INT_P, // 0x15\n    INT_P, // 0x16\n    INT_P, // 0x17\n    // Unsigned integer (one-byte uint8_t follows)\n    UINT_P_8, // 0x18\n    // Unsigned integer (two-byte uint16_t follows)\n    UINT_P_16, // 0x19\n    // Unsigned integer (four-byte uint32_t follows)\n    UINT_P_32, // 0x1a\n    // Unsigned integer (eight-byte uint64_t follows)\n    UINT_P_64, // 0x1b\n    ERROR, // 0x1c\n    ERROR, // 0x1d\n    ERROR, // 0x1e\n    ERROR, // 0x1f\n    // Negative integer -1-0x00..-1-0x17 (-1..-24)\n    INT_N, // 0x20\n    INT_N, // 0x21\n    INT_N, // 0x22\n    INT_N, // 0x23\n    INT_N, // 0x24\n    INT_N, // 0x25\n    INT_N, // 0x26\n    INT_N, // 0x27\n    INT_N, // 0x28\n    INT_N, // 0x29\n    INT_N, // 0x2A\n    INT_N, // 0x2B\n    INT_N, // 0x2C\n    INT_N, // 0x2D\n    INT_N, // 0x2E\n    INT_N, // 0x2F\n    INT_N, // 0x30\n    INT_N, // 0x31\n    INT_N, // 0x32\n    INT_N, // 0x33\n    INT_N, // 0x34\n    INT_N, // 0x35\n    INT_N, // 0x36\n    INT_N, // 0x37\n    // Negative integer -1-n (one-byte uint8_t for n follows)\n    UINT_N_8, // 0x38\n    // Negative integer -1-n (two-byte uint16_t for n follows)\n    UINT_N_16, // 0x39\n    // Negative integer -1-n (four-byte uint32_t for nfollows)\n    UINT_N_32, // 0x3a\n    // Negative integer -1-n (eight-byte uint64_t for n follows)\n    UINT_N_64, // 0x3b\n    ERROR, // 0x3c\n    ERROR, // 0x3d\n    ERROR, // 0x3e\n    ERROR, // 0x3f\n    // byte string (0x00..0x17 bytes follow)\n    BYTE_STRING, // 0x40\n    BYTE_STRING, // 0x41\n    BYTE_STRING, // 0x42\n    BYTE_STRING, // 0x43\n    BYTE_STRING, // 0x44\n    BYTE_STRING, // 0x45\n    BYTE_STRING, // 0x46\n    BYTE_STRING, // 0x47\n    BYTE_STRING, // 0x48\n    BYTE_STRING, // 0x49\n    BYTE_STRING, // 0x4A\n    BYTE_STRING, // 0x4B\n    BYTE_STRING, // 0x4C\n    BYTE_STRING, // 0x4D\n    BYTE_STRING, // 0x4E\n    BYTE_STRING, // 0x4F\n    BYTE_STRING, // 0x50\n    BYTE_STRING, // 0x51\n    BYTE_STRING, // 0x52\n    BYTE_STRING, // 0x53\n    BYTE_STRING, // 0x54\n    BYTE_STRING, // 0x55\n    BYTE_STRING, // 0x56\n    BYTE_STRING, // 0x57\n    // byte string (one-byte uint8_t for n, and then n bytes follow)\n    BYTE_STRING_8, // 0x58\n    // byte string (two-byte uint16_t for n, and then n bytes follow)\n    BYTE_STRING_16, // 0x59\n    // byte string (four-byte uint32_t for n, and then n bytes follow)\n    BYTE_STRING_32, // 0x5a\n    // byte string (eight-byte uint64_t for n, and then n bytes follow)\n    BYTE_STRING_64, // 0x5b\n    ERROR, // 0x5c\n    ERROR, // 0x5d\n    ERROR, // 0x5e\n    // byte string, byte strings follow, terminated by \"break\"\n    BYTE_STRING_BREAK, // 0x5f\n    // UTF-8 string (0x00..0x17 bytes follow)\n    UTF8_STRING, // 0x60\n    UTF8_STRING, // 0x61\n    UTF8_STRING, // 0x62\n    UTF8_STRING, // 0x63\n    UTF8_STRING, // 0x64\n    UTF8_STRING, // 0x65\n    UTF8_STRING, // 0x66\n    UTF8_STRING, // 0x67\n    UTF8_STRING, // 0x68\n    UTF8_STRING, // 0x69\n    UTF8_STRING, // 0x6A\n    UTF8_STRING, // 0x6B\n    UTF8_STRING, // 0x6C\n    UTF8_STRING, // 0x6D\n    UTF8_STRING, // 0x6E\n    UTF8_STRING, // 0x6F\n    UTF8_STRING, // 0x70\n    UTF8_STRING, // 0x71\n    UTF8_STRING, // 0x72\n    UTF8_STRING, // 0x73\n    UTF8_STRING, // 0x74\n    UTF8_STRING, // 0x75\n    UTF8_STRING, // 0x76\n    UTF8_STRING, // 0x77\n    // UTF-8 string (one-byte uint8_t for n, and then n bytes follow)\n    UTF8_STRING_8, // 0x78\n    // UTF-8 string (two-byte uint16_t for n, and then n bytes follow)\n    UTF8_STRING_16, // 0x79\n    // UTF-8 string (four-byte uint32_t for n, and then n bytes follow)\n    UTF8_STRING_32, // 0x7a\n    // UTF-8 string (eight-byte uint64_t for n, and then n bytes follow)\n    UTF8_STRING_64, // 0x7b\n    // UTF-8 string, UTF-8 strings follow, terminated by \"break\"\n    ERROR, // 0x7c\n    ERROR, // 0x7d\n    ERROR, // 0x7e\n    UTF8_STRING_BREAK, // 0x7f\n    // array (0x00..0x17 data items follow)\n    ARRAY, // 0x80\n    ARRAY, // 0x81\n    ARRAY, // 0x82\n    ARRAY, // 0x83\n    ARRAY, // 0x84\n    ARRAY, // 0x85\n    ARRAY, // 0x86\n    ARRAY, // 0x87\n    ARRAY, // 0x88\n    ARRAY, // 0x89\n    ARRAY, // 0x8A\n    ARRAY, // 0x8B\n    ARRAY, // 0x8C\n    ARRAY, // 0x8D\n    ARRAY, // 0x8E\n    ARRAY, // 0x8F\n    ARRAY, // 0x90\n    ARRAY, // 0x91\n    ARRAY, // 0x92\n    ARRAY, // 0x93\n    ARRAY, // 0x94\n    ARRAY, // 0x95\n    ARRAY, // 0x96\n    ARRAY, // 0x97\n    // array (one-byte uint8_t fo, and then n data items follow)\n    ARRAY_8, // 0x98\n    // array (two-byte uint16_t for n, and then n data items follow)\n    ARRAY_16, // 0x99\n    // array (four-byte uint32_t for n, and then n data items follow)\n    ARRAY_32, // 0x9a\n    // array (eight-byte uint64_t for n, and then n data items follow)\n    ARRAY_64, // 0x9b\n    // array, data items follow, terminated by \"break\"\n    ERROR, // 0x9c\n    ERROR, // 0x9d\n    ERROR, // 0x9e\n    ARRAY_BREAK, // 0x9f\n    // map (0x00..0x17 pairs of data items follow)\n    MAP, // 0xa0\n    MAP, // 0xa1\n    MAP, // 0xa2\n    MAP, // 0xa3\n    MAP, // 0xa4\n    MAP, // 0xa5\n    MAP, // 0xa6\n    MAP, // 0xa7\n    MAP, // 0xa8\n    MAP, // 0xa9\n    MAP, // 0xaA\n    MAP, // 0xaB\n    MAP, // 0xaC\n    MAP, // 0xaD\n    MAP, // 0xaE\n    MAP, // 0xaF\n    MAP, // 0xb0\n    MAP, // 0xb1\n    MAP, // 0xb2\n    MAP, // 0xb3\n    MAP, // 0xb4\n    MAP, // 0xb5\n    MAP, // 0xb6\n    MAP, // 0xb7\n    // map (one-byte uint8_t for n, and then n pairs of data items follow)\n    MAP_8, // 0xb8\n    // map (two-byte uint16_t for n, and then n pairs of data items follow)\n    MAP_16, // 0xb9\n    // map (four-byte uint32_t for n, and then n pairs of data items follow)\n    MAP_32, // 0xba\n    // map (eight-byte uint64_t for n, and then n pairs of data items follow)\n    MAP_64, // 0xbb\n    ERROR, // 0xbc\n    ERROR, // 0xbd\n    ERROR, // 0xbe\n    // map, pairs of data items follow, terminated by \"break\"\n    MAP_BREAK, // 0xbf\n    // Text-based date/time (data item follows; see Section 2.4.1)\n    TAG_KNOWN, // 0xc0\n    // Epoch-based date/time (data item follows; see Section 2.4.1)\n    TAG_KNOWN, // 0xc1\n    // Positive bignum (data item \"byte string\" follows)\n    TAG_KNOWN, // 0xc2\n    // Negative bignum (data item \"byte string\" follows)\n    TAG_KNOWN, // 0xc3\n    // Decimal Fraction (data item \"array\" follows; see Section 2.4.3)\n    TAG_KNOWN, // 0xc4\n    // Bigfloat (data item \"array\" follows; see Section 2.4.3)\n    TAG_KNOWN, // 0xc5\n    // (tagged item)\n    TAG_UNASSIGNED, // 0xc6\n    TAG_UNASSIGNED, // 0xc7\n    TAG_UNASSIGNED, // 0xc8\n    TAG_UNASSIGNED, // 0xc9\n    TAG_UNASSIGNED, // 0xca\n    TAG_UNASSIGNED, // 0xcb\n    TAG_UNASSIGNED, // 0xcc\n    TAG_UNASSIGNED, // 0xcd\n    TAG_UNASSIGNED, // 0xce\n    TAG_UNASSIGNED, // 0xcf\n    TAG_UNASSIGNED, // 0xd0\n    TAG_UNASSIGNED, // 0xd1\n    TAG_UNASSIGNED, // 0xd2\n    TAG_UNASSIGNED, // 0xd3\n    TAG_UNASSIGNED, // 0xd4\n    // Expected Conversion (data item follows; see Section 2.4.4.2)\n    TAG_UNASSIGNED, // 0xd5\n    TAG_UNASSIGNED, // 0xd6\n    TAG_UNASSIGNED, // 0xd7\n    // (more tagged items, 1/2/4/8 bytes and then a data item follow)\n    TAG_MORE_1, // 0xd8\n    TAG_MORE_2, // 0xd9\n    TAG_MORE_4, // 0xda\n    TAG_MORE_8, // 0xdb\n    ERROR, // 0xdc\n    ERROR, // 0xdd\n    ERROR, // 0xde\n    ERROR, // 0xdf\n    // (simple value)\n    SIMPLE_UNASSIGNED, // 0xe0\n    SIMPLE_UNASSIGNED, // 0xe1\n    SIMPLE_UNASSIGNED, // 0xe2\n    SIMPLE_UNASSIGNED, // 0xe3\n    SIMPLE_UNASSIGNED, // 0xe4\n    SIMPLE_UNASSIGNED, // 0xe5\n    SIMPLE_UNASSIGNED, // 0xe6\n    SIMPLE_UNASSIGNED, // 0xe7\n    SIMPLE_UNASSIGNED, // 0xe8\n    SIMPLE_UNASSIGNED, // 0xe9\n    SIMPLE_UNASSIGNED, // 0xea\n    SIMPLE_UNASSIGNED, // 0xeb\n    SIMPLE_UNASSIGNED, // 0xec\n    SIMPLE_UNASSIGNED, // 0xed\n    SIMPLE_UNASSIGNED, // 0xee\n    SIMPLE_UNASSIGNED, // 0xef\n    SIMPLE_UNASSIGNED, // 0xf0\n    SIMPLE_UNASSIGNED, // 0xf1\n    SIMPLE_UNASSIGNED, // 0xf2\n    SIMPLE_UNASSIGNED, // 0xf3\n    // False\n    SIMPLE_FALSE, // 0xf4\n    // True\n    SIMPLE_TRUE, // 0xf5\n    // Null\n    SIMPLE_NULL, // 0xf6\n    // Undefined\n    SIMPLE_UNDEFINED, // 0xf7\n    // (simple value, one byte follows)\n    SIMPLE_BYTE, // 0xf8\n    // Half-Precision Float (two-byte IEEE 754)\n    SIMPLE_FLOAT_HALF, // 0xf9\n    // Single-Precision Float (four-byte IEEE 754)\n    SIMPLE_FLOAT_SINGLE, // 0xfa\n    // Double-Precision Float (eight-byte IEEE 754)\n    SIMPLE_FLOAT_DOUBLE, // 0xfb\n    ERROR, // 0xfc\n    ERROR, // 0xfd\n    ERROR, // 0xfe\n    // \"break\" stop code\n    BREAK // 0xff\n  ]\n\n  // --\n\n  return {\n    parse: parse\n  }\n}\n","'use strict'\n\nconst { Buffer } = require('buffer')\nconst ieee754 = require('ieee754')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst parser = require('./decoder.asm')\nconst utils = require('./utils')\nconst c = require('./constants')\nconst Simple = require('./simple')\nconst Tagged = require('./tagged')\nconst { URL } = require('iso-url')\n\n/**\n * Transform binary cbor data into JavaScript objects.\n */\nclass Decoder {\n  /**\n   * @param {Object} [opts={}]\n   * @param {number} [opts.size=65536] - Size of the allocated heap.\n   */\n  constructor (opts) {\n    opts = opts || {}\n\n    if (!opts.size || opts.size < 0x10000) {\n      opts.size = 0x10000\n    } else {\n      // Ensure the size is a power of 2\n      opts.size = utils.nextPowerOf2(opts.size)\n    }\n\n    // Heap use to share the input with the parser\n    this._heap = new ArrayBuffer(opts.size)\n    this._heap8 = new Uint8Array(this._heap)\n    this._buffer = Buffer.from(this._heap)\n\n    this._reset()\n\n    // Known tags\n    this._knownTags = Object.assign({\n      0: (val) => new Date(val),\n      1: (val) => new Date(val * 1000),\n      2: (val) => utils.arrayBufferToBignumber(val),\n      3: (val) => c.NEG_ONE.minus(utils.arrayBufferToBignumber(val)),\n      4: (v) => {\n        // const v = new Uint8Array(val)\n        return c.TEN.pow(v[0]).times(v[1])\n      },\n      5: (v) => {\n        // const v = new Uint8Array(val)\n        return c.TWO.pow(v[0]).times(v[1])\n      },\n      32: (val) => new URL(val),\n      35: (val) => new RegExp(val)\n    }, opts.tags)\n\n    // Initialize asm based parser\n    this.parser = parser(global, {\n      // eslint-disable-next-line no-console\n      log: console.log.bind(console),\n      pushInt: this.pushInt.bind(this),\n      pushInt32: this.pushInt32.bind(this),\n      pushInt32Neg: this.pushInt32Neg.bind(this),\n      pushInt64: this.pushInt64.bind(this),\n      pushInt64Neg: this.pushInt64Neg.bind(this),\n      pushFloat: this.pushFloat.bind(this),\n      pushFloatSingle: this.pushFloatSingle.bind(this),\n      pushFloatDouble: this.pushFloatDouble.bind(this),\n      pushTrue: this.pushTrue.bind(this),\n      pushFalse: this.pushFalse.bind(this),\n      pushUndefined: this.pushUndefined.bind(this),\n      pushNull: this.pushNull.bind(this),\n      pushInfinity: this.pushInfinity.bind(this),\n      pushInfinityNeg: this.pushInfinityNeg.bind(this),\n      pushNaN: this.pushNaN.bind(this),\n      pushNaNNeg: this.pushNaNNeg.bind(this),\n      pushArrayStart: this.pushArrayStart.bind(this),\n      pushArrayStartFixed: this.pushArrayStartFixed.bind(this),\n      pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this),\n      pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this),\n      pushObjectStart: this.pushObjectStart.bind(this),\n      pushObjectStartFixed: this.pushObjectStartFixed.bind(this),\n      pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this),\n      pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this),\n      pushByteString: this.pushByteString.bind(this),\n      pushByteStringStart: this.pushByteStringStart.bind(this),\n      pushUtf8String: this.pushUtf8String.bind(this),\n      pushUtf8StringStart: this.pushUtf8StringStart.bind(this),\n      pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this),\n      pushTagUnassigned: this.pushTagUnassigned.bind(this),\n      pushTagStart: this.pushTagStart.bind(this),\n      pushTagStart4: this.pushTagStart4.bind(this),\n      pushTagStart8: this.pushTagStart8.bind(this),\n      pushBreak: this.pushBreak.bind(this)\n    }, this._heap)\n  }\n\n  get _depth () {\n    return this._parents.length\n  }\n\n  get _currentParent () {\n    return this._parents[this._depth - 1]\n  }\n\n  get _ref () {\n    return this._currentParent.ref\n  }\n\n  // Finish the current parent\n  _closeParent () {\n    var p = this._parents.pop()\n\n    if (p.length > 0) {\n      throw new Error(`Missing ${p.length} elements`)\n    }\n\n    switch (p.type) {\n      case c.PARENT.TAG:\n        this._push(\n          this.createTag(p.ref[0], p.ref[1])\n        )\n        break\n      case c.PARENT.BYTE_STRING:\n        this._push(this.createByteString(p.ref, p.length))\n        break\n      case c.PARENT.UTF8_STRING:\n        this._push(this.createUtf8String(p.ref, p.length))\n        break\n      case c.PARENT.MAP:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map')\n        }\n        this._push(this.createMap(p.ref, p.length))\n        break\n      case c.PARENT.OBJECT:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map')\n        }\n        this._push(this.createObject(p.ref, p.length))\n        break\n      case c.PARENT.ARRAY:\n        this._push(this.createArray(p.ref, p.length))\n        break\n      default:\n        break\n    }\n\n    if (this._currentParent && this._currentParent.type === c.PARENT.TAG) {\n      this._dec()\n    }\n  }\n\n  // Reduce the expected length of the current parent by one\n  _dec () {\n    const p = this._currentParent\n    // The current parent does not know the epxected child length\n\n    if (p.length < 0) {\n      return\n    }\n\n    p.length--\n\n    // All children were seen, we can close the current parent\n    if (p.length === 0) {\n      this._closeParent()\n    }\n  }\n\n  // Push any value to the current parent\n  _push (val, hasChildren) {\n    const p = this._currentParent\n    p.values++\n\n    switch (p.type) {\n      case c.PARENT.ARRAY:\n      case c.PARENT.BYTE_STRING:\n      case c.PARENT.UTF8_STRING:\n        if (p.length > -1) {\n          this._ref[this._ref.length - p.length] = val\n        } else {\n          this._ref.push(val)\n        }\n        this._dec()\n        break\n      case c.PARENT.OBJECT:\n        if (p.tmpKey != null) {\n          this._ref[p.tmpKey] = val\n          p.tmpKey = null\n          this._dec()\n        } else {\n          p.tmpKey = val\n\n          if (typeof p.tmpKey !== 'string') {\n            // too bad, convert to a Map\n            p.type = c.PARENT.MAP\n            p.ref = utils.buildMap(p.ref)\n          }\n        }\n        break\n      case c.PARENT.MAP:\n        if (p.tmpKey != null) {\n          this._ref.set(p.tmpKey, val)\n          p.tmpKey = null\n          this._dec()\n        } else {\n          p.tmpKey = val\n        }\n        break\n      case c.PARENT.TAG:\n        this._ref.push(val)\n        if (!hasChildren) {\n          this._dec()\n        }\n        break\n      default:\n        throw new Error('Unknown parent type')\n    }\n  }\n\n  // Create a new parent in the parents list\n  _createParent (obj, type, len) {\n    this._parents[this._depth] = {\n      type: type,\n      length: len,\n      ref: obj,\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  // Reset all state back to the beginning, also used for initiatlization\n  _reset () {\n    this._res = []\n    this._parents = [{\n      type: c.PARENT.ARRAY,\n      length: -1,\n      ref: this._res,\n      values: 0,\n      tmpKey: null\n    }]\n  }\n\n  // -- Interface to customize deoding behaviour\n  createTag (tagNumber, value) {\n    const typ = this._knownTags[tagNumber]\n\n    if (!typ) {\n      return new Tagged(tagNumber, value)\n    }\n\n    return typ(value)\n  }\n\n  createMap (obj, len) {\n    return obj\n  }\n\n  createObject (obj, len) {\n    return obj\n  }\n\n  createArray (arr, len) {\n    return arr\n  }\n\n  createByteString (raw, len) {\n    return Buffer.concat(raw)\n  }\n\n  createByteStringFromHeap (start, end) {\n    if (start === end) {\n      return Buffer.alloc(0)\n    }\n\n    return Buffer.from(this._heap.slice(start, end))\n  }\n\n  createInt (val) {\n    return val\n  }\n\n  createInt32 (f, g) {\n    return utils.buildInt32(f, g)\n  }\n\n  createInt64 (f1, f2, g1, g2) {\n    return utils.buildInt64(f1, f2, g1, g2)\n  }\n\n  createFloat (val) {\n    return val\n  }\n\n  createFloatSingle (a, b, c, d) {\n    return ieee754.read([a, b, c, d], 0, false, 23, 4)\n  }\n\n  createFloatDouble (a, b, c, d, e, f, g, h) {\n    return ieee754.read([a, b, c, d, e, f, g, h], 0, false, 52, 8)\n  }\n\n  createInt32Neg (f, g) {\n    return -1 - utils.buildInt32(f, g)\n  }\n\n  createInt64Neg (f1, f2, g1, g2) {\n    const f = utils.buildInt32(f1, f2)\n    const g = utils.buildInt32(g1, g2)\n\n    if (f > c.MAX_SAFE_HIGH) {\n      return c.NEG_ONE.minus(new Bignumber(f).times(c.SHIFT32).plus(g))\n    }\n\n    return -1 - ((f * c.SHIFT32) + g)\n  }\n\n  createTrue () {\n    return true\n  }\n\n  createFalse () {\n    return false\n  }\n\n  createNull () {\n    return null\n  }\n\n  createUndefined () {\n    return undefined\n  }\n\n  createInfinity () {\n    return Infinity\n  }\n\n  createInfinityNeg () {\n    return -Infinity\n  }\n\n  createNaN () {\n    return NaN\n  }\n\n  createNaNNeg () {\n    return -NaN\n  }\n\n  createUtf8String (raw, len) {\n    return raw.join('')\n  }\n\n  createUtf8StringFromHeap (start, end) {\n    if (start === end) {\n      return ''\n    }\n\n    return this._buffer.toString('utf8', start, end)\n  }\n\n  createSimpleUnassigned (val) {\n    return new Simple(val)\n  }\n\n  // -- Interface for decoder.asm.js\n\n  pushInt (val) {\n    this._push(this.createInt(val))\n  }\n\n  pushInt32 (f, g) {\n    this._push(this.createInt32(f, g))\n  }\n\n  pushInt64 (f1, f2, g1, g2) {\n    this._push(this.createInt64(f1, f2, g1, g2))\n  }\n\n  pushFloat (val) {\n    this._push(this.createFloat(val))\n  }\n\n  pushFloatSingle (a, b, c, d) {\n    this._push(this.createFloatSingle(a, b, c, d))\n  }\n\n  pushFloatDouble (a, b, c, d, e, f, g, h) {\n    this._push(this.createFloatDouble(a, b, c, d, e, f, g, h))\n  }\n\n  pushInt32Neg (f, g) {\n    this._push(this.createInt32Neg(f, g))\n  }\n\n  pushInt64Neg (f1, f2, g1, g2) {\n    this._push(this.createInt64Neg(f1, f2, g1, g2))\n  }\n\n  pushTrue () {\n    this._push(this.createTrue())\n  }\n\n  pushFalse () {\n    this._push(this.createFalse())\n  }\n\n  pushNull () {\n    this._push(this.createNull())\n  }\n\n  pushUndefined () {\n    this._push(this.createUndefined())\n  }\n\n  pushInfinity () {\n    this._push(this.createInfinity())\n  }\n\n  pushInfinityNeg () {\n    this._push(this.createInfinityNeg())\n  }\n\n  pushNaN () {\n    this._push(this.createNaN())\n  }\n\n  pushNaNNeg () {\n    this._push(this.createNaNNeg())\n  }\n\n  pushArrayStart () {\n    this._createParent([], c.PARENT.ARRAY, -1)\n  }\n\n  pushArrayStartFixed (len) {\n    this._createArrayStartFixed(len)\n  }\n\n  pushArrayStartFixed32 (len1, len2) {\n    const len = utils.buildInt32(len1, len2)\n    this._createArrayStartFixed(len)\n  }\n\n  pushArrayStartFixed64 (len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4)\n    this._createArrayStartFixed(len)\n  }\n\n  pushObjectStart () {\n    this._createObjectStartFixed(-1)\n  }\n\n  pushObjectStartFixed (len) {\n    this._createObjectStartFixed(len)\n  }\n\n  pushObjectStartFixed32 (len1, len2) {\n    const len = utils.buildInt32(len1, len2)\n    this._createObjectStartFixed(len)\n  }\n\n  pushObjectStartFixed64 (len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4)\n    this._createObjectStartFixed(len)\n  }\n\n  pushByteStringStart () {\n    this._parents[this._depth] = {\n      type: c.PARENT.BYTE_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  pushByteString (start, end) {\n    this._push(this.createByteStringFromHeap(start, end))\n  }\n\n  pushUtf8StringStart () {\n    this._parents[this._depth] = {\n      type: c.PARENT.UTF8_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  pushUtf8String (start, end) {\n    this._push(this.createUtf8StringFromHeap(start, end))\n  }\n\n  pushSimpleUnassigned (val) {\n    this._push(this.createSimpleUnassigned(val))\n  }\n\n  pushTagStart (tag) {\n    this._parents[this._depth] = {\n      type: c.PARENT.TAG,\n      length: 1,\n      ref: [tag]\n    }\n  }\n\n  pushTagStart4 (f, g) {\n    this.pushTagStart(utils.buildInt32(f, g))\n  }\n\n  pushTagStart8 (f1, f2, g1, g2) {\n    this.pushTagStart(utils.buildInt64(f1, f2, g1, g2))\n  }\n\n  pushTagUnassigned (tagNumber) {\n    this._push(this.createTag(tagNumber))\n  }\n\n  pushBreak () {\n    if (this._currentParent.length > -1) {\n      throw new Error('Unexpected break')\n    }\n\n    this._closeParent()\n  }\n\n  _createObjectStartFixed (len) {\n    if (len === 0) {\n      this._push(this.createObject({}))\n      return\n    }\n\n    this._createParent({}, c.PARENT.OBJECT, len)\n  }\n\n  _createArrayStartFixed (len) {\n    if (len === 0) {\n      this._push(this.createArray([]))\n      return\n    }\n\n    this._createParent(new Array(len), c.PARENT.ARRAY, len)\n  }\n\n  _decode (input) {\n    if (input.byteLength === 0) {\n      throw new Error('Input too short')\n    }\n\n    this._reset()\n    this._heap8.set(input)\n    const code = this.parser.parse(input.byteLength)\n\n    if (this._depth > 1) {\n      while (this._currentParent.length === 0) {\n        this._closeParent()\n      }\n      if (this._depth > 1) {\n        throw new Error('Undeterminated nesting')\n      }\n    }\n\n    if (code > 0) {\n      throw new Error('Failed to parse')\n    }\n\n    if (this._res.length === 0) {\n      throw new Error('No valid result')\n    }\n  }\n\n  // -- Public Interface\n\n  decodeFirst (input) {\n    this._decode(input)\n\n    return this._res[0]\n  }\n\n  decodeAll (input) {\n    this._decode(input)\n\n    return this._res\n  }\n\n  /**\n   * Decode the first cbor object.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {*}\n   */\n  static decode (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Decoder({ size: input.length })\n    return dec.decodeFirst(input)\n  }\n\n  /**\n   * Decode all cbor objects.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {Array<*>}\n   */\n  static decodeAll (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Decoder({ size: input.length })\n    return dec.decodeAll(input)\n  }\n}\n\nDecoder.decodeFirst = Decoder.decode\n\nmodule.exports = Decoder\n","'use strict'\n\nconst { Buffer } = require('buffer')\nconst Decoder = require('./decoder')\nconst utils = require('./utils')\n\n/**\n * Output the diagnostic format from a stream of CBOR bytes.\n *\n */\nclass Diagnose extends Decoder {\n  createTag (tagNumber, value) {\n    return `${tagNumber}(${value})`\n  }\n\n  createInt (val) {\n    return super.createInt(val).toString()\n  }\n\n  createInt32 (f, g) {\n    return super.createInt32(f, g).toString()\n  }\n\n  createInt64 (f1, f2, g1, g2) {\n    return super.createInt64(f1, f2, g1, g2).toString()\n  }\n\n  createInt32Neg (f, g) {\n    return super.createInt32Neg(f, g).toString()\n  }\n\n  createInt64Neg (f1, f2, g1, g2) {\n    return super.createInt64Neg(f1, f2, g1, g2).toString()\n  }\n\n  createTrue () {\n    return 'true'\n  }\n\n  createFalse () {\n    return 'false'\n  }\n\n  createFloat (val) {\n    const fl = super.createFloat(val)\n    if (utils.isNegativeZero(val)) {\n      return '-0_1'\n    }\n\n    return `${fl}_1`\n  }\n\n  createFloatSingle (a, b, c, d) {\n    const fl = super.createFloatSingle(a, b, c, d)\n    return `${fl}_2`\n  }\n\n  createFloatDouble (a, b, c, d, e, f, g, h) {\n    const fl = super.createFloatDouble(a, b, c, d, e, f, g, h)\n    return `${fl}_3`\n  }\n\n  createByteString (raw, len) {\n    const val = raw.join(', ')\n\n    if (len === -1) {\n      return `(_ ${val})`\n    }\n    return `h'${val}`\n  }\n\n  createByteStringFromHeap (start, end) {\n    const val = (Buffer.from(\n      super.createByteStringFromHeap(start, end)\n    )).toString('hex')\n\n    return `h'${val}'`\n  }\n\n  createInfinity () {\n    return 'Infinity_1'\n  }\n\n  createInfinityNeg () {\n    return '-Infinity_1'\n  }\n\n  createNaN () {\n    return 'NaN_1'\n  }\n\n  createNaNNeg () {\n    return '-NaN_1'\n  }\n\n  createNull () {\n    return 'null'\n  }\n\n  createUndefined () {\n    return 'undefined'\n  }\n\n  createSimpleUnassigned (val) {\n    return `simple(${val})`\n  }\n\n  createArray (arr, len) {\n    const val = super.createArray(arr, len)\n\n    if (len === -1) {\n      // indefinite\n      return `[_ ${val.join(', ')}]`\n    }\n\n    return `[${val.join(', ')}]`\n  }\n\n  createMap (map, len) {\n    const val = super.createMap(map)\n    const list = Array.from(val.keys())\n      .reduce(collectObject(val), '')\n\n    if (len === -1) {\n      return `{_ ${list}}`\n    }\n\n    return `{${list}}`\n  }\n\n  createObject (obj, len) {\n    const val = super.createObject(obj)\n    const map = Object.keys(val)\n      .reduce(collectObject(val), '')\n\n    if (len === -1) {\n      return `{_ ${map}}`\n    }\n\n    return `{${map}}`\n  }\n\n  createUtf8String (raw, len) {\n    const val = raw.join(', ')\n\n    if (len === -1) {\n      return `(_ ${val})`\n    }\n\n    return `\"${val}\"`\n  }\n\n  createUtf8StringFromHeap (start, end) {\n    const val = (Buffer.from(\n      super.createUtf8StringFromHeap(start, end)\n    )).toString('utf8')\n\n    return `\"${val}\"`\n  }\n\n  static diagnose (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Diagnose()\n    return dec.decodeFirst(input)\n  }\n}\n\nmodule.exports = Diagnose\n\nfunction collectObject (val) {\n  return (acc, key) => {\n    if (acc) {\n      return `${acc}, ${key}: ${val[key]}`\n    }\n    return `${key}: ${val[key]}`\n  }\n}\n","'use strict'\n\nconst { Buffer } = require('buffer')\nconst { URL } = require('iso-url')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst utils = require('./utils')\nconst constants = require('./constants')\nconst MT = constants.MT\nconst NUMBYTES = constants.NUMBYTES\nconst SHIFT32 = constants.SHIFT32\nconst SYMS = constants.SYMS\nconst TAG = constants.TAG\nconst HALF = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.TWO\nconst FLOAT = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.FOUR\nconst DOUBLE = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.EIGHT\nconst TRUE = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.TRUE\nconst FALSE = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.FALSE\nconst UNDEFINED = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.UNDEFINED\nconst NULL = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.NULL\n\nconst MAXINT_BN = new Bignumber('0x20000000000000')\nconst BUF_NAN = Buffer.from('f97e00', 'hex')\nconst BUF_INF_NEG = Buffer.from('f9fc00', 'hex')\nconst BUF_INF_POS = Buffer.from('f97c00', 'hex')\n\nfunction toType (obj) {\n  // [object Type]\n  // --------8---1\n  return ({}).toString.call(obj).slice(8, -1)\n}\n\n/**\n * Transform JavaScript values into CBOR bytes\n *\n */\nclass Encoder {\n  /**\n   * @param {Object} [options={}]\n   * @param {function(Buffer)} options.stream\n   */\n  constructor (options) {\n    options = options || {}\n\n    this.streaming = typeof options.stream === 'function'\n    this.onData = options.stream\n\n    this.semanticTypes = [\n      [URL, this._pushUrl],\n      [Bignumber, this._pushBigNumber]\n    ]\n\n    const addTypes = options.genTypes || []\n    const len = addTypes.length\n    for (let i = 0; i < len; i++) {\n      this.addSemanticType(\n        addTypes[i][0],\n        addTypes[i][1]\n      )\n    }\n\n    this._reset()\n  }\n\n  addSemanticType (type, fun) {\n    const len = this.semanticTypes.length\n    for (let i = 0; i < len; i++) {\n      const typ = this.semanticTypes[i][0]\n      if (typ === type) {\n        const old = this.semanticTypes[i][1]\n        this.semanticTypes[i][1] = fun\n        return old\n      }\n    }\n    this.semanticTypes.push([type, fun])\n    return null\n  }\n\n  push (val) {\n    if (!val) {\n      return true\n    }\n\n    this.result[this.offset] = val\n    this.resultMethod[this.offset] = 0\n    this.resultLength[this.offset] = val.length\n    this.offset++\n\n    if (this.streaming) {\n      this.onData(this.finalize())\n    }\n\n    return true\n  }\n\n  pushWrite (val, method, len) {\n    this.result[this.offset] = val\n    this.resultMethod[this.offset] = method\n    this.resultLength[this.offset] = len\n    this.offset++\n\n    if (this.streaming) {\n      this.onData(this.finalize())\n    }\n\n    return true\n  }\n\n  _pushUInt8 (val) {\n    return this.pushWrite(val, 1, 1)\n  }\n\n  _pushUInt16BE (val) {\n    return this.pushWrite(val, 2, 2)\n  }\n\n  _pushUInt32BE (val) {\n    return this.pushWrite(val, 3, 4)\n  }\n\n  _pushDoubleBE (val) {\n    return this.pushWrite(val, 4, 8)\n  }\n\n  _pushNaN () {\n    return this.push(BUF_NAN)\n  }\n\n  _pushInfinity (obj) {\n    const half = (obj < 0) ? BUF_INF_NEG : BUF_INF_POS\n    return this.push(half)\n  }\n\n  _pushFloat (obj) {\n    const b2 = Buffer.allocUnsafe(2)\n\n    if (utils.writeHalf(b2, obj)) {\n      if (utils.parseHalf(b2) === obj) {\n        return this._pushUInt8(HALF) && this.push(b2)\n      }\n    }\n\n    const b4 = Buffer.allocUnsafe(4)\n    b4.writeFloatBE(obj, 0)\n    if (b4.readFloatBE(0) === obj) {\n      return this._pushUInt8(FLOAT) && this.push(b4)\n    }\n\n    return this._pushUInt8(DOUBLE) && this._pushDoubleBE(obj)\n  }\n\n  _pushInt (obj, mt, orig) {\n    const m = mt << 5\n    if (obj < 24) {\n      return this._pushUInt8(m | obj)\n    }\n\n    if (obj <= 0xff) {\n      return this._pushUInt8(m | NUMBYTES.ONE) && this._pushUInt8(obj)\n    }\n\n    if (obj <= 0xffff) {\n      return this._pushUInt8(m | NUMBYTES.TWO) && this._pushUInt16BE(obj)\n    }\n\n    if (obj <= 0xffffffff) {\n      return this._pushUInt8(m | NUMBYTES.FOUR) && this._pushUInt32BE(obj)\n    }\n\n    if (obj <= Number.MAX_SAFE_INTEGER) {\n      return this._pushUInt8(m | NUMBYTES.EIGHT) &&\n        this._pushUInt32BE(Math.floor(obj / SHIFT32)) &&\n        this._pushUInt32BE(obj % SHIFT32)\n    }\n\n    if (mt === MT.NEG_INT) {\n      return this._pushFloat(orig)\n    }\n\n    return this._pushFloat(obj)\n  }\n\n  _pushIntNum (obj) {\n    if (obj < 0) {\n      return this._pushInt(-obj - 1, MT.NEG_INT, obj)\n    } else {\n      return this._pushInt(obj, MT.POS_INT)\n    }\n  }\n\n  _pushNumber (obj) {\n    switch (false) {\n      case (obj === obj): // eslint-disable-line\n        return this._pushNaN(obj)\n      case isFinite(obj):\n        return this._pushInfinity(obj)\n      case ((obj % 1) !== 0):\n        return this._pushIntNum(obj)\n      default:\n        return this._pushFloat(obj)\n    }\n  }\n\n  _pushString (obj) {\n    const len = Buffer.byteLength(obj, 'utf8')\n    return this._pushInt(len, MT.UTF8_STRING) && this.pushWrite(obj, 5, len)\n  }\n\n  _pushBoolean (obj) {\n    return this._pushUInt8(obj ? TRUE : FALSE)\n  }\n\n  _pushUndefined (obj) {\n    return this._pushUInt8(UNDEFINED)\n  }\n\n  _pushArray (gen, obj) {\n    const len = obj.length\n    if (!gen._pushInt(len, MT.ARRAY)) {\n      return false\n    }\n    for (let j = 0; j < len; j++) {\n      if (!gen.pushAny(obj[j])) {\n        return false\n      }\n    }\n    return true\n  }\n\n  _pushTag (tag) {\n    return this._pushInt(tag, MT.TAG)\n  }\n\n  _pushDate (gen, obj) {\n    // Round date, to get seconds since 1970-01-01 00:00:00 as defined in\n    // Sec. 2.4.1 and get a possibly more compact encoding. Note that it is\n    // still allowed to encode fractions of seconds which can be achieved by\n    // changing overwriting the encode function for Date objects.\n    return gen._pushTag(TAG.DATE_EPOCH) && gen.pushAny(Math.round(obj / 1000))\n  }\n\n  _pushBuffer (gen, obj) {\n    return gen._pushInt(obj.length, MT.BYTE_STRING) && gen.push(obj)\n  }\n\n  _pushNoFilter (gen, obj) {\n    return gen._pushBuffer(gen, obj.slice())\n  }\n\n  _pushRegexp (gen, obj) {\n    return gen._pushTag(TAG.REGEXP) && gen.pushAny(obj.source)\n  }\n\n  _pushSet (gen, obj) {\n    if (!gen._pushInt(obj.size, MT.ARRAY)) {\n      return false\n    }\n    for (const x of obj) {\n      if (!gen.pushAny(x)) {\n        return false\n      }\n    }\n    return true\n  }\n\n  _pushUrl (gen, obj) {\n    return gen._pushTag(TAG.URI) && gen.pushAny(obj.format())\n  }\n\n  _pushBigint (obj) {\n    let tag = TAG.POS_BIGINT\n    if (obj.isNegative()) {\n      obj = obj.negated().minus(1)\n      tag = TAG.NEG_BIGINT\n    }\n    let str = obj.toString(16)\n    if (str.length % 2) {\n      str = '0' + str\n    }\n    const buf = Buffer.from(str, 'hex')\n    return this._pushTag(tag) && this._pushBuffer(this, buf)\n  }\n\n  _pushBigNumber (gen, obj) {\n    if (obj.isNaN()) {\n      return gen._pushNaN()\n    }\n    if (!obj.isFinite()) {\n      return gen._pushInfinity(obj.isNegative() ? -Infinity : Infinity)\n    }\n    if (obj.isInteger()) {\n      return gen._pushBigint(obj)\n    }\n    if (!(gen._pushTag(TAG.DECIMAL_FRAC) &&\n      gen._pushInt(2, MT.ARRAY))) {\n      return false\n    }\n\n    const dec = obj.decimalPlaces()\n    const slide = obj.multipliedBy(new Bignumber(10).pow(dec))\n    if (!gen._pushIntNum(-dec)) {\n      return false\n    }\n    if (slide.abs().isLessThan(MAXINT_BN)) {\n      return gen._pushIntNum(slide.toNumber())\n    } else {\n      return gen._pushBigint(slide)\n    }\n  }\n\n  _pushMap (gen, obj) {\n    if (!gen._pushInt(obj.size, MT.MAP)) {\n      return false\n    }\n\n    return this._pushRawMap(\n      obj.size,\n      Array.from(obj)\n    )\n  }\n\n  _pushObject (obj) {\n    if (!obj) {\n      return this._pushUInt8(NULL)\n    }\n\n    var len = this.semanticTypes.length\n    for (var i = 0; i < len; i++) {\n      if (obj instanceof this.semanticTypes[i][0]) {\n        return this.semanticTypes[i][1].call(obj, this, obj)\n      }\n    }\n\n    var f = obj.encodeCBOR\n    if (typeof f === 'function') {\n      return f.call(obj, this)\n    }\n\n    var keys = Object.keys(obj)\n    var keyLength = keys.length\n    if (!this._pushInt(keyLength, MT.MAP)) {\n      return false\n    }\n\n    return this._pushRawMap(\n      keyLength,\n      keys.map((k) => [k, obj[k]])\n    )\n  }\n\n  _pushRawMap (len, map) {\n    // Sort keys for canoncialization\n    // 1. encode key\n    // 2. shorter key comes before longer key\n    // 3. same length keys are sorted with lower\n    //    byte value before higher\n\n    map = map.map(function (a) {\n      a[0] = Encoder.encode(a[0])\n      return a\n    }).sort(utils.keySorter)\n\n    for (var j = 0; j < len; j++) {\n      if (!this.push(map[j][0])) {\n        return false\n      }\n\n      if (!this.pushAny(map[j][1])) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  /**\n   * Alias for `.pushAny`\n   *\n   * @param {*} obj\n   * @returns {boolean} true on success\n   */\n  write (obj) {\n    return this.pushAny(obj)\n  }\n\n  /**\n   * Push any supported type onto the encoded stream\n   *\n   * @param {any} obj\n   * @returns {boolean} true on success\n   */\n  pushAny (obj) {\n    var typ = toType(obj)\n\n    switch (typ) {\n      case 'Number':\n        return this._pushNumber(obj)\n      case 'String':\n        return this._pushString(obj)\n      case 'Boolean':\n        return this._pushBoolean(obj)\n      case 'Object':\n        return this._pushObject(obj)\n      case 'Array':\n        return this._pushArray(this, obj)\n      case 'Uint8Array':\n        return this._pushBuffer(this, Buffer.isBuffer(obj) ? obj : Buffer.from(obj))\n      case 'Null':\n        return this._pushUInt8(NULL)\n      case 'Undefined':\n        return this._pushUndefined(obj)\n      case 'Map':\n        return this._pushMap(this, obj)\n      case 'Set':\n        return this._pushSet(this, obj)\n      case 'URL':\n        return this._pushUrl(this, obj)\n      case 'BigNumber':\n        return this._pushBigNumber(this, obj)\n      case 'Date':\n        return this._pushDate(this, obj)\n      case 'RegExp':\n        return this._pushRegexp(this, obj)\n      case 'Symbol':\n        switch (obj) {\n          case SYMS.NULL:\n            return this._pushObject(null)\n          case SYMS.UNDEFINED:\n            return this._pushUndefined(undefined)\n          // TODO: Add pluggable support for other symbols\n          default:\n            throw new Error('Unknown symbol: ' + obj.toString())\n        }\n      default:\n        throw new Error('Unknown type: ' + typeof obj + ', ' + (obj ? obj.toString() : ''))\n    }\n  }\n\n  finalize () {\n    if (this.offset === 0) {\n      return null\n    }\n\n    var result = this.result\n    var resultLength = this.resultLength\n    var resultMethod = this.resultMethod\n    var offset = this.offset\n\n    // Determine the size of the buffer\n    var size = 0\n    var i = 0\n\n    for (; i < offset; i++) {\n      size += resultLength[i]\n    }\n\n    var res = Buffer.allocUnsafe(size)\n    var index = 0\n    var length = 0\n\n    // Write the content into the result buffer\n    for (i = 0; i < offset; i++) {\n      length = resultLength[i]\n\n      switch (resultMethod[i]) {\n        case 0:\n          result[i].copy(res, index)\n          break\n        case 1:\n          res.writeUInt8(result[i], index, true)\n          break\n        case 2:\n          res.writeUInt16BE(result[i], index, true)\n          break\n        case 3:\n          res.writeUInt32BE(result[i], index, true)\n          break\n        case 4:\n          res.writeDoubleBE(result[i], index, true)\n          break\n        case 5:\n          res.write(result[i], index, length, 'utf8')\n          break\n        default:\n          throw new Error('unkown method')\n      }\n\n      index += length\n    }\n\n    var tmp = res\n\n    this._reset()\n\n    return tmp\n  }\n\n  _reset () {\n    this.result = []\n    this.resultMethod = []\n    this.resultLength = []\n    this.offset = 0\n  }\n\n  /**\n   * Encode the given value\n   * @param {*} o\n   * @returns {Buffer}\n   */\n  static encode (o) {\n    const enc = new Encoder()\n    const ret = enc.pushAny(o)\n    if (!ret) {\n      throw new Error('Failed to encode input')\n    }\n\n    return enc.finalize()\n  }\n}\n\nmodule.exports = Encoder\n","'use strict'\n\n// exports.Commented = require('./commented')\nexports.Diagnose = require('./diagnose')\nexports.Decoder = require('./decoder')\nexports.Encoder = require('./encoder')\nexports.Simple = require('./simple')\nexports.Tagged = require('./tagged')\n\n// exports.comment = exports.Commented.comment\nexports.decodeAll = exports.Decoder.decodeAll\nexports.decodeFirst = exports.Decoder.decodeFirst\nexports.diagnose = exports.Diagnose.diagnose\nexports.encode = exports.Encoder.encode\nexports.decode = exports.Decoder.decode\n\nexports.leveldb = {\n  decode: exports.Decoder.decodeAll,\n  encode: exports.Encoder.encode,\n  buffer: true,\n  name: 'cbor'\n}\n","'use strict'\n\nconst constants = require('./constants')\nconst MT = constants.MT\nconst SIMPLE = constants.SIMPLE\nconst SYMS = constants.SYMS\n\n/**\n * A CBOR Simple Value that does not map onto a known constant.\n */\nclass Simple {\n  /**\n   * Creates an instance of Simple.\n   *\n   * @param {integer} value - the simple value's integer value\n   */\n  constructor (value) {\n    if (typeof value !== 'number') {\n      throw new Error('Invalid Simple type: ' + (typeof value))\n    }\n    if ((value < 0) || (value > 255) || ((value | 0) !== value)) {\n      throw new Error('value must be a small positive integer: ' + value)\n    }\n    this.value = value\n  }\n\n  /**\n   * Debug string for simple value\n   *\n   * @returns {string} simple(value)\n   */\n  toString () {\n    return 'simple(' + this.value + ')'\n  }\n\n  /**\n   * Debug string for simple value\n   *\n   * @returns {string} simple(value)\n   */\n  inspect () {\n    return 'simple(' + this.value + ')'\n  }\n\n  /**\n   * Push the simple value onto the CBOR stream\n   *\n   * @param {cbor.Encoder} gen The generator to push onto\n   * @returns {number}\n   */\n  encodeCBOR (gen) {\n    return gen._pushInt(this.value, MT.SIMPLE_FLOAT)\n  }\n\n  /**\n   * Is the given object a Simple?\n   *\n   * @param {any} obj - object to test\n   * @returns {bool} - is it Simple?\n   */\n  static isSimple (obj) {\n    return obj instanceof Simple\n  }\n\n  /**\n   * Decode from the CBOR additional information into a JavaScript value.\n   * If the CBOR item has no parent, return a \"safe\" symbol instead of\n   * `null` or `undefined`, so that the value can be passed through a\n   * stream in object mode.\n   *\n   * @param {Number} val - the CBOR additional info to convert\n   * @param {bool} hasParent - Does the CBOR item have a parent?\n   * @returns {(null|undefined|Boolean|Symbol)} - the decoded value\n   */\n  static decode (val, hasParent) {\n    if (hasParent == null) {\n      hasParent = true\n    }\n    switch (val) {\n      case SIMPLE.FALSE:\n        return false\n      case SIMPLE.TRUE:\n        return true\n      case SIMPLE.NULL:\n        if (hasParent) {\n          return null\n        } else {\n          return SYMS.NULL\n        }\n      case SIMPLE.UNDEFINED:\n        if (hasParent) {\n          return undefined\n        } else {\n          return SYMS.UNDEFINED\n        }\n      case -1:\n        if (!hasParent) {\n          throw new Error('Invalid BREAK')\n        }\n        return SYMS.BREAK\n      default:\n        return new Simple(val)\n    }\n  }\n}\n\nmodule.exports = Simple\n","'use strict'\n\n/**\n * A CBOR tagged item, where the tag does not have semantics specified at the\n * moment, or those semantics threw an error during parsing. Typically this will\n * be an extension point you're not yet expecting.\n */\nclass Tagged {\n  /**\n   * Creates an instance of Tagged.\n   *\n   * @param {Number} tag - the number of the tag\n   * @param {any} value - the value inside the tag\n   * @param {Error} err - the error that was thrown parsing the tag, or null\n   */\n  constructor (tag, value, err) {\n    this.tag = tag\n    this.value = value\n    this.err = err\n    if (typeof this.tag !== 'number') {\n      throw new Error('Invalid tag type (' + (typeof this.tag) + ')')\n    }\n    if ((this.tag < 0) || ((this.tag | 0) !== this.tag)) {\n      throw new Error('Tag must be a positive integer: ' + this.tag)\n    }\n  }\n\n  /**\n   * Convert to a String\n   *\n   * @returns {String} string of the form '1(2)'\n   */\n  toString () {\n    return `${this.tag}(${JSON.stringify(this.value)})`\n  }\n\n  /**\n   * Push the simple value onto the CBOR stream\n   *\n   * @param {cbor.Encoder} gen The generator to push onto\n   * @returns {number}\n   */\n  encodeCBOR (gen) {\n    gen._pushTag(this.tag)\n    return gen.pushAny(this.value)\n  }\n\n  /**\n   * If we have a converter for this type, do the conversion.  Some converters\n   * are built-in.  Additional ones can be passed in.  If you want to remove\n   * a built-in converter, pass a converter in whose value is 'null' instead\n   * of a function.\n   *\n   * @param {Object} converters - keys in the object are a tag number, the value\n   *   is a function that takes the decoded CBOR and returns a JavaScript value\n   *   of the appropriate type.  Throw an exception in the function on errors.\n   * @returns {any} - the converted item\n   */\n  convert (converters) {\n    var er, f\n    f = converters != null ? converters[this.tag] : undefined\n    if (typeof f !== 'function') {\n      f = Tagged['_tag' + this.tag]\n      if (typeof f !== 'function') {\n        return this\n      }\n    }\n    try {\n      return f.call(Tagged, this.value)\n    } catch (error) {\n      er = error\n      this.err = er\n      return this\n    }\n  }\n}\n\nmodule.exports = Tagged\n","'use strict'\n\nconst { Buffer } = require('buffer')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst constants = require('./constants')\nconst SHIFT32 = constants.SHIFT32\nconst SHIFT16 = constants.SHIFT16\nconst MAX_SAFE_HIGH = 0x1fffff\n\nexports.parseHalf = function parseHalf (buf) {\n  var exp, mant, sign\n  sign = buf[0] & 0x80 ? -1 : 1\n  exp = (buf[0] & 0x7C) >> 2\n  mant = ((buf[0] & 0x03) << 8) | buf[1]\n  if (!exp) {\n    return sign * 5.9604644775390625e-8 * mant\n  } else if (exp === 0x1f) {\n    return sign * (mant ? 0 / 0 : 2e308)\n  } else {\n    return sign * Math.pow(2, exp - 25) * (1024 + mant)\n  }\n}\n\nfunction toHex (n) {\n  if (n < 16) {\n    return '0' + n.toString(16)\n  }\n\n  return n.toString(16)\n}\n\nexports.arrayBufferToBignumber = function (buf) {\n  const len = buf.byteLength\n  let res = ''\n  for (let i = 0; i < len; i++) {\n    res += toHex(buf[i])\n  }\n\n  return new Bignumber(res, 16)\n}\n\n// convert an Object into a Map\nexports.buildMap = (obj) => {\n  const res = new Map()\n  const keys = Object.keys(obj)\n  const length = keys.length\n  for (let i = 0; i < length; i++) {\n    res.set(keys[i], obj[keys[i]])\n  }\n  return res\n}\n\nexports.buildInt32 = (f, g) => {\n  return f * SHIFT16 + g\n}\n\nexports.buildInt64 = (f1, f2, g1, g2) => {\n  const f = exports.buildInt32(f1, f2)\n  const g = exports.buildInt32(g1, g2)\n\n  if (f > MAX_SAFE_HIGH) {\n    return new Bignumber(f).times(SHIFT32).plus(g)\n  } else {\n    return (f * SHIFT32) + g\n  }\n}\n\nexports.writeHalf = function writeHalf (buf, half) {\n  // assume 0, -0, NaN, Infinity, and -Infinity have already been caught\n\n  // HACK: everyone settle in.  This isn't going to be pretty.\n  // Translate cn-cbor's C code (from Carsten Borman):\n\n  // uint32_t be32;\n  // uint16_t be16, u16;\n  // union {\n  //   float f;\n  //   uint32_t u;\n  // } u32;\n  // u32.f = float_val;\n\n  const u32 = Buffer.allocUnsafe(4)\n  u32.writeFloatBE(half, 0)\n  const u = u32.readUInt32BE(0)\n\n  // if ((u32.u & 0x1FFF) == 0) { /* worth trying half */\n\n  // hildjj: If the lower 13 bits are 0, we won't lose anything in the conversion\n  if ((u & 0x1FFF) !== 0) {\n    return false\n  }\n\n  //   int s16 = (u32.u >> 16) & 0x8000;\n  //   int exp = (u32.u >> 23) & 0xff;\n  //   int mant = u32.u & 0x7fffff;\n\n  var s16 = (u >> 16) & 0x8000 // top bit is sign\n  const exp = (u >> 23) & 0xff // then 5 bits of exponent\n  const mant = u & 0x7fffff\n\n  //   if (exp == 0 && mant == 0)\n  //     ;              /* 0.0, -0.0 */\n\n  // hildjj: zeros already handled.  Assert if you don't believe me.\n\n  //   else if (exp >= 113 && exp <= 142) /* normalized */\n  //     s16 += ((exp - 112) << 10) + (mant >> 13);\n  if ((exp >= 113) && (exp <= 142)) {\n    s16 += ((exp - 112) << 10) + (mant >> 13)\n\n  //   else if (exp >= 103 && exp < 113) { /* denorm, exp16 = 0 */\n  //     if (mant & ((1 << (126 - exp)) - 1))\n  //       goto float32;         /* loss of precision */\n  //     s16 += ((mant + 0x800000) >> (126 - exp));\n  } else if ((exp >= 103) && (exp < 113)) {\n    if (mant & ((1 << (126 - exp)) - 1)) {\n      return false\n    }\n    s16 += ((mant + 0x800000) >> (126 - exp))\n\n    //   } else if (exp == 255 && mant == 0) { /* Inf */\n    //     s16 += 0x7c00;\n\n    // hildjj: Infinity already handled\n\n  //   } else\n  //     goto float32;           /* loss of range */\n  } else {\n    return false\n  }\n\n  //   ensure_writable(3);\n  //   u16 = s16;\n  //   be16 = hton16p((const uint8_t*)&u16);\n  buf.writeUInt16BE(s16, 0)\n  return true\n}\n\nexports.keySorter = function (a, b) {\n  var lenA = a[0].byteLength\n  var lenB = b[0].byteLength\n\n  if (lenA > lenB) {\n    return 1\n  }\n\n  if (lenB > lenA) {\n    return -1\n  }\n\n  return a[0].compare(b[0])\n}\n\n// Adapted from http://www.2ality.com/2012/03/signedzero.html\nexports.isNegativeZero = (x) => {\n  return x === 0 && (1 / x < 0)\n}\n\nexports.nextPowerOf2 = (n) => {\n  let count = 0\n  // First n in the below condition is for\n  // the case where n is 0\n  if (n && !(n & (n - 1))) {\n    return n\n  }\n\n  while (n !== 0) {\n    n >>= 1\n    count += 1\n  }\n\n  return 1 << count\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nconst {\n    URLWithLegacySupport,\n    format,\n    URLSearchParams,\n    defaultBase\n} = require('./src/url');\nconst relative = require('./src/relative');\n\nmodule.exports = {\n    URL: URLWithLegacySupport,\n    URLSearchParams,\n    format,\n    relative,\n    defaultBase\n};\n","'use strict';\n\nconst { URLWithLegacySupport, format } = require('./url');\n\nmodule.exports = (url, location = {}, protocolMap = {}, defaultProtocol) => {\n    let protocol = location.protocol ?\n        location.protocol.replace(':', '') :\n        'http';\n\n    // Check protocol map\n    protocol = (protocolMap[protocol] || defaultProtocol || protocol) + ':';\n    let urlParsed;\n\n    try {\n        urlParsed = new URLWithLegacySupport(url);\n    } catch (err) {\n        urlParsed = {};\n    }\n\n    const base = Object.assign({}, location, {\n        protocol: protocol || urlParsed.protocol,\n        host: location.host || urlParsed.host\n    });\n\n    return new URLWithLegacySupport(url, format(base)).toString();\n};\n","'use strict';\n\nconst defaultBase = self.location ?\n    self.location.protocol + '//' + self.location.host :\n    '';\nconst URL = self.URL;\n\nclass URLWithLegacySupport {\n    constructor(url = '', base = defaultBase) {\n        this.super = new URL(url, base);\n        this.path = this.pathname + this.search;\n        this.auth =\n            this.username && this.password ?\n                this.username + ':' + this.password :\n                null;\n\n        this.query =\n            this.search && this.search.startsWith('?') ?\n                this.search.slice(1) :\n                null;\n    }\n\n    get hash() {\n        return this.super.hash;\n    }\n    get host() {\n        return this.super.host;\n    }\n    get hostname() {\n        return this.super.hostname;\n    }\n    get href() {\n        return this.super.href;\n    }\n    get origin() {\n        return this.super.origin;\n    }\n    get password() {\n        return this.super.password;\n    }\n    get pathname() {\n        return this.super.pathname;\n    }\n    get port() {\n        return this.super.port;\n    }\n    get protocol() {\n        return this.super.protocol;\n    }\n    get search() {\n        return this.super.search;\n    }\n    get searchParams() {\n        return this.super.searchParams;\n    }\n    get username() {\n        return this.super.username;\n    }\n\n    set hash(hash) {\n        this.super.hash = hash;\n    }\n    set host(host) {\n        this.super.host = host;\n    }\n    set hostname(hostname) {\n        this.super.hostname = hostname;\n    }\n    set href(href) {\n        this.super.href = href;\n    }\n    set origin(origin) {\n        this.super.origin = origin;\n    }\n    set password(password) {\n        this.super.password = password;\n    }\n    set pathname(pathname) {\n        this.super.pathname = pathname;\n    }\n    set port(port) {\n        this.super.port = port;\n    }\n    set protocol(protocol) {\n        this.super.protocol = protocol;\n    }\n    set search(search) {\n        this.super.search = search;\n    }\n    set searchParams(searchParams) {\n        this.super.searchParams = searchParams;\n    }\n    set username(username) {\n        this.super.username = username;\n    }\n\n    createObjectURL(o) {\n        return this.super.createObjectURL(o);\n    }\n    revokeObjectURL(o) {\n        this.super.revokeObjectURL(o);\n    }\n    toJSON() {\n        return this.super.toJSON();\n    }\n    toString() {\n        return this.super.toString();\n    }\n    format() {\n        return this.toString();\n    }\n}\n\nfunction format(obj) {\n    if (typeof obj === 'string') {\n        const url = new URL(obj);\n\n        return url.toString();\n    }\n\n    if (!(obj instanceof URL)) {\n        const userPass =\n            obj.username && obj.password ?\n                `${obj.username}:${obj.password}@` :\n                '';\n        const auth = obj.auth ? obj.auth + '@' : '';\n        const port = obj.port ? ':' + obj.port : '';\n        const protocol = obj.protocol ? obj.protocol + '//' : '';\n        const host = obj.host || '';\n        const hostname = obj.hostname || '';\n        const search = obj.search || (obj.query ? '?' + obj.query : '');\n        const hash = obj.hash || '';\n        const pathname = obj.pathname || '';\n        const path = obj.path || pathname + search;\n\n        return `${protocol}${userPass || auth}${host ||\n            hostname + port}${path}${hash}`;\n    }\n}\n\nmodule.exports = {\n    URLWithLegacySupport,\n    URLSearchParams: self.URLSearchParams,\n    defaultBase,\n    format\n};\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./serializer\"));\nconst value = __importStar(require(\"./value\"));\nexports.value = value;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cbor = __importStar(require(\"./value\"));\nconst BufferClasses = [\n    ArrayBuffer,\n    Uint8Array,\n    Uint16Array,\n    Uint32Array,\n    Int8Array,\n    Int16Array,\n    Int32Array,\n    Float32Array,\n    Float64Array,\n];\nclass JsonDefaultCborEncoder {\n    // @param _serializer The CBOR Serializer to use.\n    // @param _stable Whether or not keys from objects should be sorted (stable). This is\n    //     particularly useful when testing encodings between JSON objects.\n    constructor(_serializer, _stable = false) {\n        this._serializer = _serializer;\n        this._stable = _stable;\n        this.name = \"jsonDefault\";\n        this.priority = -100;\n    }\n    match(value) {\n        return [\"undefined\", \"boolean\", \"number\", \"string\", \"object\"].indexOf(typeof value) != -1;\n    }\n    encode(value) {\n        switch (typeof value) {\n            case \"undefined\":\n                return cbor.undefined_();\n            case \"boolean\":\n                return cbor.bool(value);\n            case \"number\":\n                if (Math.floor(value) === value) {\n                    return cbor.number(value);\n                }\n                else {\n                    return cbor.doubleFloat(value);\n                }\n            case \"string\":\n                return cbor.string(value);\n            case \"object\":\n                if (value === null) {\n                    return cbor.null_();\n                }\n                else if (Array.isArray(value)) {\n                    return cbor.array(value.map((x) => this._serializer.serializeValue(x)));\n                }\n                else if (BufferClasses.find((x) => value instanceof x)) {\n                    return cbor.bytes(value.buffer);\n                }\n                else if (Object.getOwnPropertyNames(value).indexOf(\"toJSON\") !== -1) {\n                    return this.encode(value.toJSON());\n                }\n                else if (value instanceof Map) {\n                    const m = new Map();\n                    for (const [key, item] of value.entries()) {\n                        m.set(key, this._serializer.serializeValue(item));\n                    }\n                    return cbor.map(m, this._stable);\n                }\n                else {\n                    const m = new Map();\n                    for (const [key, item] of Object.entries(value)) {\n                        m.set(key, this._serializer.serializeValue(item));\n                    }\n                    return cbor.map(m, this._stable);\n                }\n            default:\n                throw new Error(\"Invalid value.\");\n        }\n    }\n}\nexports.JsonDefaultCborEncoder = JsonDefaultCborEncoder;\nclass ToCborEncoder {\n    constructor() {\n        this.name = \"cborEncoder\";\n        this.priority = -90;\n    }\n    match(value) {\n        return typeof value == \"object\" && typeof value[\"toCBOR\"] == \"function\";\n    }\n    encode(value) {\n        return value.toCBOR();\n    }\n}\nexports.ToCborEncoder = ToCborEncoder;\nclass CborSerializer {\n    constructor() {\n        this._encoders = new Set();\n    }\n    static withDefaultEncoders(stable = false) {\n        const s = new this();\n        s.addEncoder(new JsonDefaultCborEncoder(s, stable));\n        s.addEncoder(new ToCborEncoder());\n        return s;\n    }\n    removeEncoder(name) {\n        // Has to make an extra call to values() to ensure it doesn't break on iteration.\n        for (const encoder of this._encoders.values()) {\n            if (encoder.name == name) {\n                this._encoders.delete(encoder);\n            }\n        }\n    }\n    addEncoder(encoder) {\n        this._encoders.add(encoder);\n    }\n    getEncoderFor(value) {\n        let chosenEncoder = null;\n        for (const encoder of this._encoders) {\n            if (!chosenEncoder || encoder.priority > chosenEncoder.priority) {\n                if (encoder.match(value)) {\n                    chosenEncoder = encoder;\n                }\n            }\n        }\n        if (chosenEncoder === null) {\n            throw new Error(\"Could not find an encoder for value.\");\n        }\n        return chosenEncoder;\n    }\n    serializeValue(value) {\n        return this.getEncoderFor(value).encode(value);\n    }\n    serialize(value) {\n        return this.serializeValue(value);\n    }\n}\nexports.CborSerializer = CborSerializer;\nclass SelfDescribeCborSerializer extends CborSerializer {\n    serialize(value) {\n        return cbor.raw(new Uint8Array([\n            // Self describe CBOR.\n            ...new Uint8Array([0xd9, 0xd9, 0xf7]),\n            ...new Uint8Array(super.serializeValue(value)),\n        ]));\n    }\n}\nexports.SelfDescribeCborSerializer = SelfDescribeCborSerializer;\n//# sourceMappingURL=serializer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MAX_U64_NUMBER = 0x20000000000000;\nfunction _concat(a, ...args) {\n    const newBuffer = new Uint8Array(a.byteLength + args.reduce((acc, b) => acc + b.byteLength, 0));\n    newBuffer.set(new Uint8Array(a), 0);\n    let i = a.byteLength;\n    for (const b of args) {\n        newBuffer.set(new Uint8Array(b), i);\n        i += b.byteLength;\n    }\n    return newBuffer.buffer;\n}\nfunction _serializeValue(major, minor, value) {\n    // Remove everything that's not an hexadecimal character. These are not\n    // considered errors since the value was already validated and they might\n    // be number decimals or sign.\n    value = value.replace(/[^0-9a-fA-F]/g, \"\");\n    // Create the buffer from the value with left padding with 0.\n    const length = 2 ** (minor - 24 /* Int8 */);\n    value = value.slice(-length * 2).padStart(length * 2, \"0\");\n    const bytes = [(major << 5) + minor].concat(value.match(/../g).map((byte) => parseInt(byte, 16)));\n    return new Uint8Array(bytes).buffer;\n}\nfunction _serializeNumber(major, value) {\n    if (value < 24) {\n        return new Uint8Array([(major << 5) + value]).buffer;\n    }\n    else {\n        const minor = value <= 0xff\n            ? 24 /* Int8 */\n            : value <= 0xffff\n                ? 25 /* Int16 */\n                : value <= 0xffffffff\n                    ? 26 /* Int32 */\n                    : 27 /* Int64 */;\n        return _serializeValue(major, minor, value.toString(16));\n    }\n}\nfunction _serializeString(str) {\n    const utf8 = [];\n    for (let i = 0; i < str.length; i++) {\n        let charcode = str.charCodeAt(i);\n        if (charcode < 0x80) {\n            utf8.push(charcode);\n        }\n        else if (charcode < 0x800) {\n            utf8.push(0xc0 | (charcode >> 6), 0x80 | (charcode & 0x3f));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n            utf8.push(0xe0 | (charcode >> 12), 0x80 | ((charcode >> 6) & 0x3f), 0x80 | (charcode & 0x3f));\n        }\n        else {\n            // Surrogate pair\n            i++;\n            charcode = ((charcode & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff);\n            utf8.push(0xf0 | (charcode >> 18), 0x80 | ((charcode >> 12) & 0x3f), 0x80 | ((charcode >> 6) & 0x3f), 0x80 | (charcode & 0x3f));\n        }\n    }\n    return _concat(new Uint8Array(_serializeNumber(3 /* TextString */, str.length)), new Uint8Array(utf8));\n}\n/**\n * Tag a value.\n */\nfunction tagged(tag, value) {\n    if (tag == 0xd9d9f7) {\n        return _concat(new Uint8Array([0xd9, 0xd9, 0xf7]), value);\n    }\n    if (tag < 24) {\n        return _concat(new Uint8Array([(6 /* Tag */ << 5) + tag]), value);\n    }\n    else {\n        const minor = tag <= 0xff\n            ? 24 /* Int8 */\n            : tag <= 0xffff\n                ? 25 /* Int16 */\n                : tag <= 0xffffffff\n                    ? 26 /* Int32 */\n                    : 27 /* Int64 */;\n        const length = 2 ** (minor - 24 /* Int8 */);\n        const value = tag\n            .toString(16)\n            .slice(-length * 2)\n            .padStart(length * 2, \"0\");\n        const bytes = [(6 /* Tag */ << 5) + minor].concat(value.match(/../g).map((byte) => parseInt(byte, 16)));\n        return new Uint8Array(bytes).buffer;\n    }\n}\nexports.tagged = tagged;\n/**\n * Set the raw bytes contained by this value. This should only be used with another\n * CborValue, or if you are implementing extensions to CBOR.\n * @param bytes A buffer containing the value.\n */\nfunction raw(bytes) {\n    return new Uint8Array(bytes).buffer;\n}\nexports.raw = raw;\n/**\n * Encode a number that is between [0, 23].\n * @param n\n */\nfunction uSmall(n) {\n    if (isNaN(n)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    n = Math.min(Math.max(0, n), 23); // Clamp it.\n    const bytes = [(0 /* UnsignedInteger */ << 5) + n];\n    return new Uint8Array(bytes).buffer;\n}\nexports.uSmall = uSmall;\nfunction u8(u8, radix) {\n    // Force u8 into a number, and validate it.\n    u8 = parseInt(\"\" + u8, radix);\n    if (isNaN(u8)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    u8 = Math.min(Math.max(0, u8), 0xff); // Clamp it.\n    u8 = u8.toString(16);\n    return _serializeValue(0 /* UnsignedInteger */, 24 /* Int8 */, u8);\n}\nexports.u8 = u8;\nfunction u16(u16, radix) {\n    // Force u16 into a number, and validate it.\n    u16 = parseInt(\"\" + u16, radix);\n    if (isNaN(u16)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    u16 = Math.min(Math.max(0, u16), 0xffff); // Clamp it.\n    u16 = u16.toString(16);\n    return _serializeValue(0 /* UnsignedInteger */, 25 /* Int16 */, u16);\n}\nexports.u16 = u16;\nfunction u32(u32, radix) {\n    // Force u32 into a number, and validate it.\n    u32 = parseInt(\"\" + u32, radix);\n    if (isNaN(u32)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    u32 = Math.min(Math.max(0, u32), 0xffffffff); // Clamp it.\n    u32 = u32.toString(16);\n    return _serializeValue(0 /* UnsignedInteger */, 26 /* Int32 */, u32);\n}\nexports.u32 = u32;\nfunction u64(u64, radix) {\n    // Special consideration for numbers that might be larger than expected.\n    if (typeof u64 == \"string\" && radix == 16) {\n        // This is the only case where we guarantee we'll encode the number directly.\n        // Validate it's all hexadecimal first.\n        if (u64.match(/[^0-9a-fA-F]/)) {\n            throw new RangeError(\"Invalid number.\");\n        }\n        return _serializeValue(0 /* UnsignedInteger */, 27 /* Int64 */, u64);\n    }\n    // Force u64 into a number, and validate it.\n    u64 = parseInt(\"\" + u64, radix);\n    if (isNaN(u64)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    u64 = Math.min(Math.max(0, u64), MAX_U64_NUMBER); // Clamp it to actual limit.\n    u64 = u64.toString(16);\n    return _serializeValue(0 /* UnsignedInteger */, 27 /* Int64 */, u64);\n}\nexports.u64 = u64;\n/**\n * Encode a negative number that is between [-24, -1].\n */\nfunction iSmall(n) {\n    if (isNaN(n)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    if (n === 0) {\n        return uSmall(0);\n    }\n    // Negative n, clamped to [1, 24], minus 1 (there's no negative 0).\n    n = Math.min(Math.max(0, -n), 24) - 1;\n    const bytes = [(1 /* SignedInteger */ << 5) + n];\n    return new Uint8Array(bytes).buffer;\n}\nexports.iSmall = iSmall;\nfunction i8(i8, radix) {\n    // Force i8 into a number, and validate it.\n    i8 = parseInt(\"\" + i8, radix);\n    if (isNaN(i8)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    // Negative n, clamped, minus 1 (there's no negative 0).\n    i8 = Math.min(Math.max(0, -i8 - 1), 0xff);\n    i8 = i8.toString(16);\n    return _serializeValue(1 /* SignedInteger */, 24 /* Int8 */, i8);\n}\nexports.i8 = i8;\nfunction i16(i16, radix) {\n    // Force i16 into a number, and validate it.\n    i16 = parseInt(\"\" + i16, radix);\n    if (isNaN(i16)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    // Negative n, clamped, minus 1 (there's no negative 0).\n    i16 = Math.min(Math.max(0, -i16 - 1), 0xffff);\n    i16 = i16.toString(16);\n    return _serializeValue(1 /* SignedInteger */, 25 /* Int16 */, i16);\n}\nexports.i16 = i16;\nfunction i32(i32, radix) {\n    // Force i32 into a number, and validate it.\n    i32 = parseInt(\"\" + i32, radix);\n    if (isNaN(i32)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    // Negative n, clamped, minus 1 (there's no negative 0).\n    i32 = Math.min(Math.max(0, -i32 - 1), 0xffffffff);\n    i32 = i32.toString(16);\n    return _serializeValue(1 /* SignedInteger */, 26 /* Int32 */, i32);\n}\nexports.i32 = i32;\nfunction i64(i64, radix) {\n    // Special consideration for numbers that might be larger than expected.\n    if (typeof i64 == \"string\" && radix == 16) {\n        if (i64.startsWith(\"-\")) {\n            i64 = i64.slice(1);\n        }\n        else {\n            // Clamp it.\n            i64 = \"0\";\n        }\n        // This is the only case where we guarantee we'll encode the number directly.\n        // Validate it's all hexadecimal first.\n        if (i64.match(/[^0-9a-fA-F]/) || i64.length > 16) {\n            throw new RangeError(\"Invalid number.\");\n        }\n        // We need to do -1 to the number.\n        let done = false;\n        let newI64 = i64.split(\"\").reduceRight((acc, x) => {\n            if (done) {\n                return x + acc;\n            }\n            let n = parseInt(x, 16) - 1;\n            if (n >= 0) {\n                done = true;\n                return n.toString(16) + acc;\n            }\n            else {\n                return \"f\" + acc;\n            }\n        }, \"\");\n        if (!done) {\n            // This number was 0.\n            return u64(0);\n        }\n        return _serializeValue(1 /* SignedInteger */, 27 /* Int64 */, newI64);\n    }\n    // Force i64 into a number, and validate it.\n    i64 = parseInt(\"\" + i64, radix);\n    if (isNaN(i64)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    i64 = Math.min(Math.max(0, -i64 - 1), 0x20000000000000); // Clamp it to actual.\n    i64 = i64.toString(16);\n    return _serializeValue(1 /* SignedInteger */, 27 /* Int64 */, i64);\n}\nexports.i64 = i64;\n/**\n * Encode a number using the smallest amount of bytes, by calling the methods\n * above. e.g. If the number fits in a u8, it will use that.\n */\nfunction number(n) {\n    if (n >= 0) {\n        if (n < 24) {\n            return uSmall(n);\n        }\n        else if (n <= 0xff) {\n            return u8(n);\n        }\n        else if (n <= 0xffff) {\n            return u16(n);\n        }\n        else if (n <= 0xffffffff) {\n            return u32(n);\n        }\n        else {\n            return u64(n);\n        }\n    }\n    else {\n        if (n >= -24) {\n            return iSmall(n);\n        }\n        else if (n >= -0xff) {\n            return i8(n);\n        }\n        else if (n >= -0xffff) {\n            return i16(n);\n        }\n        else if (n >= -0xffffffff) {\n            return i32(n);\n        }\n        else {\n            return i64(n);\n        }\n    }\n}\nexports.number = number;\n/**\n * Encode a byte array. This is different than the `raw()` method.\n */\nfunction bytes(bytes) {\n    return _concat(_serializeNumber(2 /* ByteString */, bytes.byteLength), bytes);\n}\nexports.bytes = bytes;\n/**\n * Encode a JavaScript string.\n */\nfunction string(str) {\n    return _serializeString(str);\n}\nexports.string = string;\n/**\n * Encode an array of cbor values.\n */\nfunction array(items) {\n    return _concat(_serializeNumber(4 /* Array */, items.length), ...items);\n}\nexports.array = array;\n/**\n * Encode a map of key-value pairs. The keys are string, and the values are CBOR\n * encoded.\n */\nfunction map(items, stable = false) {\n    if (!(items instanceof Map)) {\n        items = new Map(Object.entries(items));\n    }\n    let entries = Array.from(items.entries());\n    if (stable) {\n        entries = entries.sort(([keyA], [keyB]) => keyA.localeCompare(keyB));\n    }\n    return _concat(_serializeNumber(5 /* Map */, items.size), ...entries.map(([k, v]) => _concat(_serializeString(k), v)));\n}\nexports.map = map;\n/**\n * Encode a single (32 bits) precision floating point number.\n */\nfunction singleFloat(f) {\n    const single = new Float32Array([f]);\n    return _concat(new Uint8Array([(7 /* SimpleValue */ << 5) + 26]), new Uint8Array(single.buffer));\n}\nexports.singleFloat = singleFloat;\n/**\n * Encode a double (64 bits) precision floating point number.\n */\nfunction doubleFloat(f) {\n    const single = new Float64Array([f]);\n    return _concat(new Uint8Array([(7 /* SimpleValue */ << 5) + 27]), new Uint8Array(single.buffer));\n}\nexports.doubleFloat = doubleFloat;\nfunction bool(v) {\n    return v ? true_() : false_();\n}\nexports.bool = bool;\n/**\n * Encode the boolean true.\n */\nfunction true_() {\n    return raw(new Uint8Array([(7 /* SimpleValue */ << 5) + 21]));\n}\nexports.true_ = true_;\n/**\n * Encode the boolean false.\n */\nfunction false_() {\n    return raw(new Uint8Array([(7 /* SimpleValue */ << 5) + 20]));\n}\nexports.false_ = false_;\n/**\n * Encode the constant null.\n */\nfunction null_() {\n    return raw(new Uint8Array([(7 /* SimpleValue */ << 5) + 22]));\n}\nexports.null_ = null_;\n/**\n * Encode the constant undefined.\n */\nfunction undefined_() {\n    return raw(new Uint8Array([(7 /* SimpleValue */ << 5) + 23]));\n}\nexports.undefined_ = undefined_;\n//# sourceMappingURL=value.js.map","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n//# sourceMappingURL=_assert.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.b = self.location + \"\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t670: 1\n};\n\n// no chunk install function needed\n// no chunk loading\n\n// no HMR\n\n// no HMR manifest","export var ServiceWorkerEvents;\n(function (ServiceWorkerEvents) {\n    ServiceWorkerEvents[\"SaveICHostInfo\"] = \"SaveICHostInfo\";\n    ServiceWorkerEvents[\"ResetServiceWorker\"] = \"ResetServiceWorker\";\n})(ServiceWorkerEvents || (ServiceWorkerEvents = {}));\n","/**\n * Codes used by the replica for rejecting a message.\n * See {@link https://sdk.dfinity.org/docs/interface-spec/#reject-codes | the interface spec}.\n */\nexport var ReplicaRejectCode;\n(function (ReplicaRejectCode) {\n    ReplicaRejectCode[ReplicaRejectCode[\"SysFatal\"] = 1] = \"SysFatal\";\n    ReplicaRejectCode[ReplicaRejectCode[\"SysTransient\"] = 2] = \"SysTransient\";\n    ReplicaRejectCode[ReplicaRejectCode[\"DestinationInvalid\"] = 3] = \"DestinationInvalid\";\n    ReplicaRejectCode[ReplicaRejectCode[\"CanisterReject\"] = 4] = \"CanisterReject\";\n    ReplicaRejectCode[ReplicaRejectCode[\"CanisterError\"] = 5] = \"CanisterError\";\n})(ReplicaRejectCode || (ReplicaRejectCode = {}));\n//# sourceMappingURL=api.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Principal } from '@dfinity/principal';\nimport { requestIdOf } from './request_id';\nimport { concat, toHex } from './utils/buffer';\nconst domainSeparator = new TextEncoder().encode('\\x0Aic-request');\n/**\n * An Identity that can sign blobs.\n */\nexport class SignIdentity {\n    /**\n     * Get the principal represented by this identity. Normally should be a\n     * `Principal.selfAuthenticating()`.\n     */\n    getPrincipal() {\n        if (!this._principal) {\n            this._principal = Principal.selfAuthenticating(new Uint8Array(this.getPublicKey().toDer()));\n        }\n        return this._principal;\n    }\n    /**\n     * Transform a request into a signed version of the request. This is done last\n     * after the transforms on the body of a request. The returned object can be\n     * anything, but must be serializable to CBOR.\n     * @param request - internet computer request to transform\n     */\n    async transformRequest(request) {\n        const { body } = request, fields = __rest(request, [\"body\"]);\n        const requestId = await requestIdOf(body);\n        return Object.assign(Object.assign({}, fields), { body: {\n                content: body,\n                sender_pubkey: this.getPublicKey().toDer(),\n                sender_sig: await this.sign(concat(domainSeparator, requestId)),\n            } });\n    }\n}\nexport class AnonymousIdentity {\n    getPrincipal() {\n        return Principal.anonymous();\n    }\n    async transformRequest(request) {\n        return Object.assign(Object.assign({}, request), { body: { content: request.body } });\n    }\n}\n/**\n * Create an IdentityDescriptor from a @dfinity/identity Identity\n * @param identity - identity describe in returned descriptor\n */\nexport function createIdentityDescriptor(identity) {\n    const identityIndicator = 'getPublicKey' in identity\n        ? { type: 'PublicKeyIdentity', publicKey: toHex(identity.getPublicKey().toDer()) }\n        : { type: 'AnonymousIdentity' };\n    return identityIndicator;\n}\n//# sourceMappingURL=auth.js.map","/**\n * Generates a random unsigned 32-bit integer between 0 and 0xffffffff\n * @returns {number} a random number\n */\nexport const randomNumber = () => {\n    // determine whether browser crypto is available\n    if (typeof window !== 'undefined' && !!window.crypto && !!window.crypto.getRandomValues) {\n        const array = new Uint32Array(1);\n        window.crypto.getRandomValues(array);\n        return array[0];\n    }\n    // A second check for webcrypto, in case it is loaded under global instead of window\n    if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\n        const array = new Uint32Array(1);\n        crypto.getRandomValues(array);\n        return array[0];\n    }\n    // determine whether node crypto is available\n    if (typeof crypto !== 'undefined' && crypto.randomInt) {\n        return crypto.randomInt(0, 0xffffffff);\n    }\n    // fall back to Math.random\n    return Math.floor(Math.random() * 0xffffffff);\n};\n//# sourceMappingURL=random.js.map","import { randomNumber } from '../../utils/random';\n// tslint:enable:camel-case\n// The types of values allowed in the `request_type` field for submit requests.\nexport var SubmitRequestType;\n(function (SubmitRequestType) {\n    SubmitRequestType[\"Call\"] = \"call\";\n})(SubmitRequestType || (SubmitRequestType = {}));\n/**\n * Create a random Nonce, based on random values\n */\nexport function makeNonce() {\n    // Encode 128 bits.\n    const buffer = new ArrayBuffer(16);\n    const view = new DataView(buffer);\n    const rand1 = randomNumber();\n    const rand2 = randomNumber();\n    const rand3 = randomNumber();\n    const rand4 = randomNumber();\n    view.setUint32(0, rand1);\n    view.setUint32(4, rand2);\n    view.setUint32(8, rand3);\n    view.setUint32(12, rand4);\n    return buffer;\n}\n//# sourceMappingURL=types.js.map","import { lebEncode } from '@dfinity/candid';\nimport * as cbor from 'simple-cbor';\nimport { makeNonce, } from './types';\nconst NANOSECONDS_PER_MILLISECONDS = BigInt(1000000);\nconst REPLICA_PERMITTED_DRIFT_MILLISECONDS = BigInt(60 * 1000);\nexport class Expiry {\n    constructor(deltaInMSec) {\n        // Use bigint because it can overflow the maximum number allowed in a double float.\n        this._value =\n            (BigInt(Date.now()) + BigInt(deltaInMSec) - REPLICA_PERMITTED_DRIFT_MILLISECONDS) *\n                NANOSECONDS_PER_MILLISECONDS;\n    }\n    toCBOR() {\n        // TODO: change this to take the minimum amount of space (it always takes 8 bytes now).\n        return cbor.value.u64(this._value.toString(16), 16);\n    }\n    toHash() {\n        return lebEncode(this._value);\n    }\n}\n/**\n * Create a Nonce transform, which takes a function that returns a Buffer, and adds it\n * as the nonce to every call requests.\n * @param nonceFn A function that returns a buffer. By default uses a semi-random method.\n */\nexport function makeNonceTransform(nonceFn = makeNonce) {\n    return async (request) => {\n        const nonce = nonceFn();\n        // Nonce needs to be inserted into the header for all requests, to enable logs to be correlated with requests.\n        const headers = request.request.headers;\n        // TODO: uncomment this when the http proxy supports it.\n        // headers.set('X-IC-Request-ID', toHex(new Uint8Array(nonce)));\n        request.request.headers = headers;\n        // Nonce only needs to be inserted into the body for async calls, to prevent replay attacks.\n        if (request.endpoint === \"call\" /* Endpoint.Call */) {\n            request.body.nonce = nonceFn();\n        }\n    };\n}\n/**\n * Create a transform that adds a delay (by default 5 minutes) to the expiry.\n *\n * @param delayInMilliseconds The delay to add to the call time, in milliseconds.\n */\nexport function makeExpiryTransform(delayInMilliseconds) {\n    return async (request) => {\n        request.body.ingress_expiry = new Expiry(delayInMilliseconds);\n    };\n}\n/**\n * Maps the default fetch headers field to the serializable HttpHeaderField.\n *\n * @param headers Fetch definition of the headers type\n * @returns array of header fields\n */\nexport function httpHeadersTransform(headers) {\n    const headerFields = [];\n    headers.forEach((value, key) => {\n        headerFields.push([key, value]);\n    });\n    return headerFields;\n}\n//# sourceMappingURL=transforms.js.map","export class AgentHTTPResponseError extends Error {\n    constructor(message, response) {\n        super(message);\n        this.response = response;\n        this.name = this.constructor.name;\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\n//# sourceMappingURL=errors.js.map","import { Principal } from '@dfinity/principal';\nimport { AgentError } from '../../errors';\nimport { AnonymousIdentity } from '../../auth';\nimport * as cbor from '../../cbor';\nimport { requestIdOf } from '../../request_id';\nimport { fromHex } from '../../utils/buffer';\nimport { Expiry, httpHeadersTransform, makeNonceTransform } from './transforms';\nimport { makeNonce, SubmitRequestType, } from './types';\nimport { AgentHTTPResponseError } from './errors';\nexport * from './transforms';\nexport { makeNonce } from './types';\nexport var RequestStatusResponseStatus;\n(function (RequestStatusResponseStatus) {\n    RequestStatusResponseStatus[\"Received\"] = \"received\";\n    RequestStatusResponseStatus[\"Processing\"] = \"processing\";\n    RequestStatusResponseStatus[\"Replied\"] = \"replied\";\n    RequestStatusResponseStatus[\"Rejected\"] = \"rejected\";\n    RequestStatusResponseStatus[\"Unknown\"] = \"unknown\";\n    RequestStatusResponseStatus[\"Done\"] = \"done\";\n})(RequestStatusResponseStatus || (RequestStatusResponseStatus = {}));\n// Default delta for ingress expiry is 5 minutes.\nconst DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS = 5 * 60 * 1000;\n// Root public key for the IC, encoded as hex\nconst IC_ROOT_KEY = '308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100814' +\n    'c0e6ec71fab583b08bd81373c255c3c371b2e84863c98a4f1e08b74235d14fb5d9c0cd546d968' +\n    '5f913a0c0b2cc5341583bf4b4392e467db96d65b9bb4cb717112f8472e0d5a4d14505ffd7484' +\n    'b01291091c5f87b98883463f98091a0baaae';\n// IC0 domain info\nconst IC0_DOMAIN = 'ic0.app';\nconst IC0_SUB_DOMAIN = '.ic0.app';\nconst ICP0_DOMAIN = 'icp0.io';\nconst ICP0_SUB_DOMAIN = '.icp0.io';\nconst ICP_API_DOMAIN = 'icp-api.io';\nconst ICP_API_SUB_DOMAIN = '.icp-api.io';\nclass HttpDefaultFetchError extends AgentError {\n    constructor(message) {\n        super(message);\n        this.message = message;\n    }\n}\nexport class IdentityInvalidError extends AgentError {\n    constructor(message) {\n        super(message);\n        this.message = message;\n    }\n}\nfunction getDefaultFetch() {\n    let defaultFetch;\n    if (typeof window !== 'undefined') {\n        // Browser context\n        if (window.fetch) {\n            defaultFetch = window.fetch.bind(window);\n        }\n        else {\n            throw new HttpDefaultFetchError('Fetch implementation was not available. You appear to be in a browser context, but window.fetch was not present.');\n        }\n    }\n    else if (typeof global !== 'undefined') {\n        // Node context\n        if (global.fetch) {\n            defaultFetch = global.fetch.bind(global);\n        }\n        else {\n            throw new HttpDefaultFetchError('Fetch implementation was not available. You appear to be in a Node.js context, but global.fetch was not available.');\n        }\n    }\n    else if (typeof self !== 'undefined') {\n        if (self.fetch) {\n            defaultFetch = self.fetch.bind(self);\n        }\n    }\n    if (defaultFetch) {\n        return defaultFetch;\n    }\n    throw new HttpDefaultFetchError('Fetch implementation was not available. Please provide fetch to the HttpAgent constructor, or ensure it is available in the window or global context.');\n}\n// A HTTP agent allows users to interact with a client of the internet computer\n// using the available methods. It exposes an API that closely follows the\n// public view of the internet computer, and is not intended to be exposed\n// directly to the majority of users due to its low-level interface.\n//\n// There is a pipeline to apply transformations to the request before sending\n// it to the client. This is to decouple signature, nonce generation and\n// other computations so that this class can stay as simple as possible while\n// allowing extensions.\nexport class HttpAgent {\n    constructor(options = {}) {\n        this.rootKey = fromHex(IC_ROOT_KEY);\n        this._pipeline = [];\n        this._timeDiffMsecs = 0;\n        this._rootKeyFetched = false;\n        this._isAgent = true;\n        if (options.source) {\n            if (!(options.source instanceof HttpAgent)) {\n                throw new Error(\"An Agent's source can only be another HttpAgent\");\n            }\n            this._pipeline = [...options.source._pipeline];\n            this._identity = options.source._identity;\n            this._fetch = options.source._fetch;\n            this._host = options.source._host;\n            this._credentials = options.source._credentials;\n        }\n        else {\n            this._fetch = options.fetch || getDefaultFetch() || fetch.bind(global);\n            this._fetchOptions = options.fetchOptions;\n            this._callOptions = options.callOptions;\n        }\n        if (options.host !== undefined) {\n            if (!options.host.match(/^[a-z]+:/) && typeof window !== 'undefined') {\n                this._host = new URL(window.location.protocol + '//' + options.host);\n            }\n            else {\n                this._host = new URL(options.host);\n            }\n        }\n        else if (options.source !== undefined) {\n            // Safe to ignore here.\n            this._host = options.source._host;\n        }\n        else {\n            const location = typeof window !== 'undefined' ? window.location : undefined;\n            if (!location) {\n                this._host = new URL('https://icp-api.io');\n                console.warn('Could not infer host from window.location, defaulting to mainnet gateway of https://icp-api.io. Please provide a host to the HttpAgent constructor to avoid this warning.');\n            }\n            this._host = new URL(location + '');\n        }\n        // Default is 3, only set from option if greater or equal to 0\n        this._retryTimes =\n            options.retryTimes !== undefined && options.retryTimes >= 0 ? options.retryTimes : 3;\n        // Rewrite to avoid redirects\n        if (this._host.hostname.endsWith(IC0_SUB_DOMAIN)) {\n            this._host.hostname = IC0_DOMAIN;\n        }\n        else if (this._host.hostname.endsWith(ICP0_SUB_DOMAIN)) {\n            this._host.hostname = ICP0_DOMAIN;\n        }\n        else if (this._host.hostname.endsWith(ICP_API_SUB_DOMAIN)) {\n            this._host.hostname = ICP_API_DOMAIN;\n        }\n        if (options.credentials) {\n            const { name, password } = options.credentials;\n            this._credentials = `${name}${password ? ':' + password : ''}`;\n        }\n        this._identity = Promise.resolve(options.identity || new AnonymousIdentity());\n        // Add a nonce transform to ensure calls are unique\n        if (!options.disableNonce) {\n            this.addTransform(makeNonceTransform(makeNonce));\n        }\n    }\n    isLocal() {\n        const hostname = this._host.hostname;\n        return hostname === '127.0.0.1' || hostname.endsWith('localhost');\n    }\n    addTransform(fn, priority = fn.priority || 0) {\n        // Keep the pipeline sorted at all time, by priority.\n        const i = this._pipeline.findIndex(x => (x.priority || 0) < priority);\n        this._pipeline.splice(i >= 0 ? i : this._pipeline.length, 0, Object.assign(fn, { priority }));\n    }\n    async getPrincipal() {\n        if (!this._identity) {\n            throw new IdentityInvalidError(\"This identity has expired due this application's security policy. Please refresh your authentication.\");\n        }\n        return (await this._identity).getPrincipal();\n    }\n    async call(canisterId, options, identity) {\n        const id = await (identity !== undefined ? await identity : await this._identity);\n        if (!id) {\n            throw new IdentityInvalidError(\"This identity has expired due this application's security policy. Please refresh your authentication.\");\n        }\n        const canister = Principal.from(canisterId);\n        const ecid = options.effectiveCanisterId\n            ? Principal.from(options.effectiveCanisterId)\n            : canister;\n        const sender = id.getPrincipal() || Principal.anonymous();\n        let ingress_expiry = new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS);\n        // If the value is off by more than 30 seconds, reconcile system time with the network\n        if (Math.abs(this._timeDiffMsecs) > 1000 * 30) {\n            ingress_expiry = new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS + this._timeDiffMsecs);\n        }\n        const submit = {\n            request_type: SubmitRequestType.Call,\n            canister_id: canister,\n            method_name: options.methodName,\n            arg: options.arg,\n            sender,\n            ingress_expiry,\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let transformedRequest = (await this._transform({\n            request: {\n                body: null,\n                method: 'POST',\n                headers: Object.assign({ 'Content-Type': 'application/cbor' }, (this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {})),\n            },\n            endpoint: \"call\" /* Endpoint.Call */,\n            body: submit,\n        }));\n        // Apply transform for identity.\n        transformedRequest = await id.transformRequest(transformedRequest);\n        const body = cbor.encode(transformedRequest.body);\n        // Run both in parallel. The fetch is quite expensive, so we have plenty of time to\n        // calculate the requestId locally.\n        const request = this._requestAndRetry(() => this._fetch('' + new URL(`/api/v2/canister/${ecid.toText()}/call`, this._host), Object.assign(Object.assign(Object.assign({}, this._callOptions), transformedRequest.request), { body })));\n        const [response, requestId] = await Promise.all([request, requestIdOf(submit)]);\n        const responseBuffer = await response.arrayBuffer();\n        const responseBody = (response.status === 200 && responseBuffer.byteLength > 0 ? cbor.decode(responseBuffer) : null);\n        return {\n            requestId,\n            response: {\n                ok: response.ok,\n                status: response.status,\n                statusText: response.statusText,\n                body: responseBody,\n                headers: httpHeadersTransform(response.headers),\n            },\n        };\n    }\n    async _requestAndRetry(request, tries = 0) {\n        const response = await request();\n        if (response.ok) {\n            return response;\n        }\n        const responseText = await response.clone().text();\n        const errorMessage = `Server returned an error:\\n` +\n            `  Code: ${response.status} (${response.statusText})\\n` +\n            `  Body: ${responseText}\\n`;\n        if (this._retryTimes > tries) {\n            console.warn(errorMessage + `  Retrying request.`);\n            return await this._requestAndRetry(request, tries + 1);\n        }\n        throw new AgentHTTPResponseError(errorMessage, {\n            ok: response.ok,\n            status: response.status,\n            statusText: response.statusText,\n            headers: httpHeadersTransform(response.headers),\n        });\n    }\n    async query(canisterId, fields, identity) {\n        const id = await (identity !== undefined ? await identity : await this._identity);\n        if (!id) {\n            throw new IdentityInvalidError(\"This identity has expired due this application's security policy. Please refresh your authentication.\");\n        }\n        const canister = typeof canisterId === 'string' ? Principal.fromText(canisterId) : canisterId;\n        const sender = (id === null || id === void 0 ? void 0 : id.getPrincipal()) || Principal.anonymous();\n        const request = {\n            request_type: \"query\" /* ReadRequestType.Query */,\n            canister_id: canister,\n            method_name: fields.methodName,\n            arg: fields.arg,\n            sender,\n            ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),\n        };\n        // TODO: remove this any. This can be a Signed or UnSigned request.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let transformedRequest = await this._transform({\n            request: {\n                method: 'POST',\n                headers: Object.assign({ 'Content-Type': 'application/cbor' }, (this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {})),\n            },\n            endpoint: \"read\" /* Endpoint.Query */,\n            body: request,\n        });\n        // Apply transform for identity.\n        transformedRequest = await (id === null || id === void 0 ? void 0 : id.transformRequest(transformedRequest));\n        const body = cbor.encode(transformedRequest.body);\n        const response = await this._requestAndRetry(() => this._fetch('' + new URL(`/api/v2/canister/${canister.toText()}/query`, this._host), Object.assign(Object.assign(Object.assign({}, this._fetchOptions), transformedRequest.request), { body })));\n        const queryResponse = cbor.decode(await response.arrayBuffer());\n        return Object.assign(Object.assign({}, queryResponse), { httpDetails: {\n                ok: response.ok,\n                status: response.status,\n                statusText: response.statusText,\n                headers: httpHeadersTransform(response.headers),\n            } });\n    }\n    async createReadStateRequest(fields, identity) {\n        const id = await (identity !== undefined ? await identity : await this._identity);\n        if (!id) {\n            throw new IdentityInvalidError(\"This identity has expired due this application's security policy. Please refresh your authentication.\");\n        }\n        const sender = (id === null || id === void 0 ? void 0 : id.getPrincipal()) || Principal.anonymous();\n        // TODO: remove this any. This can be a Signed or UnSigned request.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const transformedRequest = await this._transform({\n            request: {\n                method: 'POST',\n                headers: Object.assign({ 'Content-Type': 'application/cbor' }, (this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {})),\n            },\n            endpoint: \"read_state\" /* Endpoint.ReadState */,\n            body: {\n                request_type: \"read_state\" /* ReadRequestType.ReadState */,\n                paths: fields.paths,\n                sender,\n                ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),\n            },\n        });\n        // Apply transform for identity.\n        return id === null || id === void 0 ? void 0 : id.transformRequest(transformedRequest);\n    }\n    async readState(canisterId, fields, identity, \n    // eslint-disable-next-line\n    request) {\n        const canister = typeof canisterId === 'string' ? Principal.fromText(canisterId) : canisterId;\n        const transformedRequest = request !== null && request !== void 0 ? request : (await this.createReadStateRequest(fields, identity));\n        const body = cbor.encode(transformedRequest.body);\n        // TODO - https://dfinity.atlassian.net/browse/SDK-1092\n        const response = await this._requestAndRetry(() => this._fetch('' + new URL(`/api/v2/canister/${canister}/read_state`, this._host), Object.assign(Object.assign(Object.assign({}, this._fetchOptions), transformedRequest.request), { body })));\n        if (!response.ok) {\n            throw new Error(`Server returned an error:\\n` +\n                `  Code: ${response.status} (${response.statusText})\\n` +\n                `  Body: ${await response.text()}\\n`);\n        }\n        return cbor.decode(await response.arrayBuffer());\n    }\n    /**\n     * Allows agent to sync its time with the network. Can be called during intialization or mid-lifecycle if the device's clock has drifted away from the network time. This is necessary to set the Expiry for a request\n     * @param {Principal} canisterId - Pass a canister ID if you need to sync the time with a particular replica. Uses the management canister by default\n     */\n    async syncTime(canisterId) {\n        const CanisterStatus = await import('../../canisterStatus');\n        const callTime = Date.now();\n        try {\n            if (!canisterId) {\n                console.log('Syncing time with the IC. No canisterId provided, so falling back to ryjl3-tyaaa-aaaaa-aaaba-cai');\n            }\n            const status = await CanisterStatus.request({\n                // Fall back with canisterId of the ICP Ledger\n                canisterId: canisterId !== null && canisterId !== void 0 ? canisterId : Principal.from('ryjl3-tyaaa-aaaaa-aaaba-cai'),\n                agent: this,\n                paths: ['time'],\n            });\n            const replicaTime = status.get('time');\n            if (replicaTime) {\n                this._timeDiffMsecs = Number(replicaTime) - Number(callTime);\n            }\n        }\n        catch (error) {\n            console.error('Caught exception while attempting to sync time:', error);\n        }\n    }\n    async status() {\n        const headers = this._credentials\n            ? {\n                Authorization: 'Basic ' + btoa(this._credentials),\n            }\n            : {};\n        const response = await this._requestAndRetry(() => this._fetch('' + new URL(`/api/v2/status`, this._host), Object.assign({ headers }, this._fetchOptions)));\n        return cbor.decode(await response.arrayBuffer());\n    }\n    async fetchRootKey() {\n        if (!this._rootKeyFetched) {\n            // Hex-encoded version of the replica root key\n            this.rootKey = (await this.status()).root_key;\n            this._rootKeyFetched = true;\n        }\n        return this.rootKey;\n    }\n    invalidateIdentity() {\n        this._identity = null;\n    }\n    replaceIdentity(identity) {\n        this._identity = Promise.resolve(identity);\n    }\n    _transform(request) {\n        let p = Promise.resolve(request);\n        for (const fn of this._pipeline) {\n            p = p.then(r => fn(r).then(r2 => r2 || r));\n        }\n        return p;\n    }\n}\n//# sourceMappingURL=index.js.map","import { Principal } from '@dfinity/principal';\nexport var ProxyMessageKind;\n(function (ProxyMessageKind) {\n    ProxyMessageKind[\"Error\"] = \"err\";\n    ProxyMessageKind[\"GetPrincipal\"] = \"gp\";\n    ProxyMessageKind[\"GetPrincipalResponse\"] = \"gpr\";\n    ProxyMessageKind[\"Query\"] = \"q\";\n    ProxyMessageKind[\"QueryResponse\"] = \"qr\";\n    ProxyMessageKind[\"Call\"] = \"c\";\n    ProxyMessageKind[\"CallResponse\"] = \"cr\";\n    ProxyMessageKind[\"ReadState\"] = \"rs\";\n    ProxyMessageKind[\"ReadStateResponse\"] = \"rsr\";\n    ProxyMessageKind[\"Status\"] = \"s\";\n    ProxyMessageKind[\"StatusResponse\"] = \"sr\";\n})(ProxyMessageKind || (ProxyMessageKind = {}));\n// A Stub Agent that forwards calls to another Agent implementation.\nexport class ProxyStubAgent {\n    constructor(_frontend, _agent) {\n        this._frontend = _frontend;\n        this._agent = _agent;\n    }\n    onmessage(msg) {\n        switch (msg.type) {\n            case ProxyMessageKind.GetPrincipal:\n                this._agent.getPrincipal().then(response => {\n                    this._frontend({\n                        id: msg.id,\n                        type: ProxyMessageKind.GetPrincipalResponse,\n                        response: response.toText(),\n                    });\n                });\n                break;\n            case ProxyMessageKind.Query:\n                this._agent.query(...msg.args).then(response => {\n                    this._frontend({\n                        id: msg.id,\n                        type: ProxyMessageKind.QueryResponse,\n                        response,\n                    });\n                });\n                break;\n            case ProxyMessageKind.Call:\n                this._agent.call(...msg.args).then(response => {\n                    this._frontend({\n                        id: msg.id,\n                        type: ProxyMessageKind.CallResponse,\n                        response,\n                    });\n                });\n                break;\n            case ProxyMessageKind.ReadState:\n                this._agent.readState(...msg.args).then(response => {\n                    this._frontend({\n                        id: msg.id,\n                        type: ProxyMessageKind.ReadStateResponse,\n                        response,\n                    });\n                });\n                break;\n            case ProxyMessageKind.Status:\n                this._agent.status().then(response => {\n                    this._frontend({\n                        id: msg.id,\n                        type: ProxyMessageKind.StatusResponse,\n                        response,\n                    });\n                });\n                break;\n            default:\n                throw new Error(`Invalid message received: ${JSON.stringify(msg)}`);\n        }\n    }\n}\n// An Agent that forwards calls to a backend. The calls are serialized\nexport class ProxyAgent {\n    constructor(_backend) {\n        this._backend = _backend;\n        this._nextId = 0;\n        this._pendingCalls = new Map();\n        this.rootKey = null;\n    }\n    onmessage(msg) {\n        const id = msg.id;\n        const maybePromise = this._pendingCalls.get(id);\n        if (!maybePromise) {\n            throw new Error('A proxy get the same message twice...');\n        }\n        this._pendingCalls.delete(id);\n        const [resolve, reject] = maybePromise;\n        switch (msg.type) {\n            case ProxyMessageKind.Error:\n                return reject(msg.error);\n            case ProxyMessageKind.GetPrincipalResponse:\n            case ProxyMessageKind.CallResponse:\n            case ProxyMessageKind.QueryResponse:\n            case ProxyMessageKind.ReadStateResponse:\n            case ProxyMessageKind.StatusResponse:\n                return resolve(msg.response);\n            default:\n                throw new Error(`Invalid message being sent to ProxyAgent: ${JSON.stringify(msg)}`);\n        }\n    }\n    async getPrincipal() {\n        return this._sendAndWait({\n            id: this._nextId++,\n            type: ProxyMessageKind.GetPrincipal,\n        }).then(principal => {\n            if (typeof principal !== 'string') {\n                throw new Error('Invalid principal received.');\n            }\n            return Principal.fromText(principal);\n        });\n    }\n    readState(canisterId, fields) {\n        return this._sendAndWait({\n            id: this._nextId++,\n            type: ProxyMessageKind.ReadState,\n            args: [canisterId.toString(), fields],\n        });\n    }\n    call(canisterId, fields) {\n        return this._sendAndWait({\n            id: this._nextId++,\n            type: ProxyMessageKind.Call,\n            args: [canisterId.toString(), fields],\n        });\n    }\n    status() {\n        return this._sendAndWait({\n            id: this._nextId++,\n            type: ProxyMessageKind.Status,\n        });\n    }\n    query(canisterId, fields) {\n        return this._sendAndWait({\n            id: this._nextId++,\n            type: ProxyMessageKind.Query,\n            args: [canisterId.toString(), fields],\n        });\n    }\n    async _sendAndWait(msg) {\n        return new Promise((resolve, reject) => {\n            this._pendingCalls.set(msg.id, [resolve, reject]);\n            this._backend(msg);\n        });\n    }\n    async fetchRootKey() {\n        // Hex-encoded version of the replica root key\n        const rootKey = (await this.status()).root_key;\n        this.rootKey = rootKey;\n        return rootKey;\n    }\n}\n//# sourceMappingURL=proxy.js.map","export * from './api';\nexport * from './http';\nexport * from './proxy';\nexport function getDefaultAgent() {\n    const agent = typeof window === 'undefined'\n        ? typeof global === 'undefined'\n            ? typeof self === 'undefined'\n                ? undefined\n                : self.ic.agent\n            : global.ic.agent\n        : window.ic.agent;\n    if (!agent) {\n        throw new Error('No Agent could be found.');\n    }\n    return agent;\n}\n//# sourceMappingURL=index.js.map","import { RequestStatusResponseStatus } from '../agent';\nimport { Certificate } from '../certificate';\nimport { toHex } from '../utils/buffer';\nexport * as strategy from './strategy';\nexport { defaultStrategy } from './strategy';\n/**\n * Polls the IC to check the status of the given request then\n * returns the response bytes once the request has been processed.\n * @param agent The agent to use to poll read_state.\n * @param canisterId The effective canister ID.\n * @param requestId The Request ID to poll status for.\n * @param strategy A polling strategy.\n * @param request Request for the readState call.\n */\nexport async function pollForResponse(agent, canisterId, requestId, strategy, \n// eslint-disable-next-line\nrequest, blsVerify) {\n    var _a;\n    const path = [new TextEncoder().encode('request_status'), requestId];\n    const currentRequest = request !== null && request !== void 0 ? request : (await ((_a = agent.createReadStateRequest) === null || _a === void 0 ? void 0 : _a.call(agent, { paths: [path] })));\n    const state = await agent.readState(canisterId, { paths: [path] }, undefined, currentRequest);\n    if (agent.rootKey == null)\n        throw new Error('Agent root key not initialized before polling');\n    const cert = await Certificate.create({\n        certificate: state.certificate,\n        rootKey: agent.rootKey,\n        canisterId: canisterId,\n        blsVerify,\n    });\n    const maybeBuf = cert.lookup([...path, new TextEncoder().encode('status')]);\n    let status;\n    if (typeof maybeBuf === 'undefined') {\n        // Missing requestId means we need to wait\n        status = RequestStatusResponseStatus.Unknown;\n    }\n    else {\n        status = new TextDecoder().decode(maybeBuf);\n    }\n    switch (status) {\n        case RequestStatusResponseStatus.Replied: {\n            return cert.lookup([...path, 'reply']);\n        }\n        case RequestStatusResponseStatus.Received:\n        case RequestStatusResponseStatus.Unknown:\n        case RequestStatusResponseStatus.Processing:\n            // Execute the polling strategy, then retry.\n            await strategy(canisterId, requestId, status);\n            return pollForResponse(agent, canisterId, requestId, strategy, currentRequest);\n        case RequestStatusResponseStatus.Rejected: {\n            const rejectCode = new Uint8Array(cert.lookup([...path, 'reject_code']))[0];\n            const rejectMessage = new TextDecoder().decode(cert.lookup([...path, 'reject_message']));\n            throw new Error(`Call was rejected:\\n` +\n                `  Request ID: ${toHex(requestId)}\\n` +\n                `  Reject code: ${rejectCode}\\n` +\n                `  Reject text: ${rejectMessage}\\n`);\n        }\n        case RequestStatusResponseStatus.Done:\n            // This is _technically_ not an error, but we still didn't see the `Replied` status so\n            // we don't know the result and cannot decode it.\n            throw new Error(`Call was marked as done but we never saw the reply:\\n` +\n                `  Request ID: ${toHex(requestId)}\\n`);\n    }\n    throw new Error('unreachable');\n}\n//# sourceMappingURL=index.js.map","/**\n * This file is generated from the candid for asset management.\n */\n/* tslint:disable */\n// @ts-ignore\nexport default ({ IDL }) => {\n    const canister_id = IDL.Principal;\n    const definite_canister_settings = IDL.Record({\n        controllers: IDL.Vec(IDL.Principal),\n        freezing_threshold: IDL.Nat,\n        memory_allocation: IDL.Nat,\n        compute_allocation: IDL.Nat,\n    });\n    const canister_settings = IDL.Record({\n        controllers: IDL.Opt(IDL.Vec(IDL.Principal)),\n        freezing_threshold: IDL.Opt(IDL.Nat),\n        memory_allocation: IDL.Opt(IDL.Nat),\n        compute_allocation: IDL.Opt(IDL.Nat),\n    });\n    const wasm_module = IDL.Vec(IDL.Nat8);\n    return IDL.Service({\n        canister_status: IDL.Func([IDL.Record({ canister_id: canister_id })], [\n            IDL.Record({\n                status: IDL.Variant({\n                    stopped: IDL.Null,\n                    stopping: IDL.Null,\n                    running: IDL.Null,\n                }),\n                memory_size: IDL.Nat,\n                cycles: IDL.Nat,\n                settings: definite_canister_settings,\n                module_hash: IDL.Opt(IDL.Vec(IDL.Nat8)),\n            }),\n        ], []),\n        create_canister: IDL.Func([IDL.Record({ settings: IDL.Opt(canister_settings) })], [IDL.Record({ canister_id: canister_id })], []),\n        delete_canister: IDL.Func([IDL.Record({ canister_id: canister_id })], [], []),\n        deposit_cycles: IDL.Func([IDL.Record({ canister_id: canister_id })], [], []),\n        install_code: IDL.Func([\n            IDL.Record({\n                arg: IDL.Vec(IDL.Nat8),\n                wasm_module: wasm_module,\n                mode: IDL.Variant({\n                    reinstall: IDL.Null,\n                    upgrade: IDL.Null,\n                    install: IDL.Null,\n                }),\n                canister_id: canister_id,\n            }),\n        ], [], []),\n        provisional_create_canister_with_cycles: IDL.Func([\n            IDL.Record({\n                settings: IDL.Opt(canister_settings),\n                amount: IDL.Opt(IDL.Nat),\n            }),\n        ], [IDL.Record({ canister_id: canister_id })], []),\n        provisional_top_up_canister: IDL.Func([IDL.Record({ canister_id: canister_id, amount: IDL.Nat })], [], []),\n        raw_rand: IDL.Func([], [IDL.Vec(IDL.Nat8)], []),\n        start_canister: IDL.Func([IDL.Record({ canister_id: canister_id })], [], []),\n        stop_canister: IDL.Func([IDL.Record({ canister_id: canister_id })], [], []),\n        uninstall_code: IDL.Func([IDL.Record({ canister_id: canister_id })], [], []),\n        update_settings: IDL.Func([\n            IDL.Record({\n                canister_id: IDL.Principal,\n                settings: canister_settings,\n            }),\n        ], [], []),\n    });\n};\n//# sourceMappingURL=management_idl.js.map","import { Buffer } from 'buffer/';\nimport { getDefaultAgent, ReplicaRejectCode, } from './agent';\nimport { AgentError } from './errors';\nimport { IDL } from '@dfinity/candid';\nimport { pollForResponse, strategy } from './polling';\nimport { Principal } from '@dfinity/principal';\nimport { toHex } from './utils/buffer';\nimport managementCanisterIdl from './canisters/management_idl';\nexport class ActorCallError extends AgentError {\n    constructor(canisterId, methodName, type, props) {\n        super([\n            `Call failed:`,\n            `  Canister: ${canisterId.toText()}`,\n            `  Method: ${methodName} (${type})`,\n            ...Object.getOwnPropertyNames(props).map(n => `  \"${n}\": ${JSON.stringify(props[n])}`),\n        ].join('\\n'));\n        this.canisterId = canisterId;\n        this.methodName = methodName;\n        this.type = type;\n        this.props = props;\n    }\n}\nexport class QueryCallRejectedError extends ActorCallError {\n    constructor(canisterId, methodName, result) {\n        var _a;\n        super(canisterId, methodName, 'query', {\n            Status: result.status,\n            Code: (_a = ReplicaRejectCode[result.reject_code]) !== null && _a !== void 0 ? _a : `Unknown Code \"${result.reject_code}\"`,\n            Message: result.reject_message,\n        });\n        this.result = result;\n    }\n}\nexport class UpdateCallRejectedError extends ActorCallError {\n    constructor(canisterId, methodName, requestId, response) {\n        super(canisterId, methodName, 'update', Object.assign({ 'Request ID': toHex(requestId) }, (response.body\n            ? Object.assign(Object.assign({}, (response.body.error_code\n                ? {\n                    'Error code': response.body.error_code,\n                }\n                : {})), { 'Reject code': String(response.body.reject_code), 'Reject message': response.body.reject_message }) : {\n            'HTTP status code': response.status.toString(),\n            'HTTP status text': response.statusText,\n        })));\n        this.requestId = requestId;\n        this.response = response;\n    }\n}\n/**\n * The mode used when installing a canister.\n */\nexport var CanisterInstallMode;\n(function (CanisterInstallMode) {\n    CanisterInstallMode[\"Install\"] = \"install\";\n    CanisterInstallMode[\"Reinstall\"] = \"reinstall\";\n    CanisterInstallMode[\"Upgrade\"] = \"upgrade\";\n})(CanisterInstallMode || (CanisterInstallMode = {}));\nconst metadataSymbol = Symbol.for('ic-agent-metadata');\n/**\n * An actor base class. An actor is an object containing only functions that will\n * return a promise. These functions are derived from the IDL definition.\n */\nexport class Actor {\n    constructor(metadata) {\n        this[metadataSymbol] = Object.freeze(metadata);\n    }\n    /**\n     * Get the Agent class this Actor would call, or undefined if the Actor would use\n     * the default agent (global.ic.agent).\n     * @param actor The actor to get the agent of.\n     */\n    static agentOf(actor) {\n        return actor[metadataSymbol].config.agent;\n    }\n    /**\n     * Get the interface of an actor, in the form of an instance of a Service.\n     * @param actor The actor to get the interface of.\n     */\n    static interfaceOf(actor) {\n        return actor[metadataSymbol].service;\n    }\n    static canisterIdOf(actor) {\n        return Principal.from(actor[metadataSymbol].config.canisterId);\n    }\n    static async install(fields, config) {\n        const mode = fields.mode === undefined ? CanisterInstallMode.Install : fields.mode;\n        // Need to transform the arg into a number array.\n        const arg = fields.arg ? [...new Uint8Array(fields.arg)] : [];\n        // Same for module.\n        const wasmModule = [...new Uint8Array(fields.module)];\n        const canisterId = typeof config.canisterId === 'string'\n            ? Principal.fromText(config.canisterId)\n            : config.canisterId;\n        await getManagementCanister(config).install_code({\n            mode: { [mode]: null },\n            arg,\n            wasm_module: wasmModule,\n            canister_id: canisterId,\n        });\n    }\n    static async createCanister(config) {\n        const { canister_id: canisterId } = await getManagementCanister(config || {}).provisional_create_canister_with_cycles({ amount: [], settings: [] });\n        return canisterId;\n    }\n    static async createAndInstallCanister(interfaceFactory, fields, config) {\n        const canisterId = await this.createCanister(config);\n        await this.install(Object.assign({}, fields), Object.assign(Object.assign({}, config), { canisterId }));\n        return this.createActor(interfaceFactory, Object.assign(Object.assign({}, config), { canisterId }));\n    }\n    static createActorClass(interfaceFactory, options) {\n        const service = interfaceFactory({ IDL });\n        class CanisterActor extends Actor {\n            constructor(config) {\n                const canisterId = typeof config.canisterId === 'string'\n                    ? Principal.fromText(config.canisterId)\n                    : config.canisterId;\n                super({\n                    config: Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG), config), { canisterId }),\n                    service,\n                });\n                for (const [methodName, func] of service._fields) {\n                    if (options === null || options === void 0 ? void 0 : options.httpDetails) {\n                        func.annotations.push(ACTOR_METHOD_WITH_HTTP_DETAILS);\n                    }\n                    this[methodName] = _createActorMethod(this, methodName, func, config.blsVerify);\n                }\n            }\n        }\n        return CanisterActor;\n    }\n    static createActor(interfaceFactory, configuration) {\n        return new (this.createActorClass(interfaceFactory))(configuration);\n    }\n    static createActorWithHttpDetails(interfaceFactory, configuration) {\n        return new (this.createActorClass(interfaceFactory, { httpDetails: true }))(configuration);\n    }\n}\n// IDL functions can have multiple return values, so decoding always\n// produces an array. Ensure that functions with single or zero return\n// values behave as expected.\nfunction decodeReturnValue(types, msg) {\n    const returnValues = IDL.decode(types, Buffer.from(msg));\n    switch (returnValues.length) {\n        case 0:\n            return undefined;\n        case 1:\n            return returnValues[0];\n        default:\n            return returnValues;\n    }\n}\nconst DEFAULT_ACTOR_CONFIG = {\n    pollingStrategyFactory: strategy.defaultStrategy,\n};\nexport const ACTOR_METHOD_WITH_HTTP_DETAILS = 'http-details';\nfunction _createActorMethod(actor, methodName, func, blsVerify) {\n    let caller;\n    if (func.annotations.includes('query') || func.annotations.includes('composite_query')) {\n        caller = async (options, ...args) => {\n            var _a, _b;\n            // First, if there's a config transformation, call it.\n            options = Object.assign(Object.assign({}, options), (_b = (_a = actor[metadataSymbol].config).queryTransform) === null || _b === void 0 ? void 0 : _b.call(_a, methodName, args, Object.assign(Object.assign({}, actor[metadataSymbol].config), options)));\n            const agent = options.agent || actor[metadataSymbol].config.agent || getDefaultAgent();\n            const cid = Principal.from(options.canisterId || actor[metadataSymbol].config.canisterId);\n            const arg = IDL.encode(func.argTypes, args);\n            const result = await agent.query(cid, { methodName, arg });\n            switch (result.status) {\n                case \"rejected\" /* QueryResponseStatus.Rejected */:\n                    throw new QueryCallRejectedError(cid, methodName, result);\n                case \"replied\" /* QueryResponseStatus.Replied */:\n                    return func.annotations.includes(ACTOR_METHOD_WITH_HTTP_DETAILS)\n                        ? {\n                            httpDetails: result.httpDetails,\n                            result: decodeReturnValue(func.retTypes, result.reply.arg),\n                        }\n                        : decodeReturnValue(func.retTypes, result.reply.arg);\n            }\n        };\n    }\n    else {\n        caller = async (options, ...args) => {\n            var _a, _b;\n            // First, if there's a config transformation, call it.\n            options = Object.assign(Object.assign({}, options), (_b = (_a = actor[metadataSymbol].config).callTransform) === null || _b === void 0 ? void 0 : _b.call(_a, methodName, args, Object.assign(Object.assign({}, actor[metadataSymbol].config), options)));\n            const agent = options.agent || actor[metadataSymbol].config.agent || getDefaultAgent();\n            const { canisterId, effectiveCanisterId, pollingStrategyFactory } = Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG), actor[metadataSymbol].config), options);\n            const cid = Principal.from(canisterId);\n            const ecid = effectiveCanisterId !== undefined ? Principal.from(effectiveCanisterId) : cid;\n            const arg = IDL.encode(func.argTypes, args);\n            const { requestId, response } = await agent.call(cid, {\n                methodName,\n                arg,\n                effectiveCanisterId: ecid,\n            });\n            if (!response.ok || response.body /* IC-1462 */) {\n                throw new UpdateCallRejectedError(cid, methodName, requestId, response);\n            }\n            const pollStrategy = pollingStrategyFactory();\n            const responseBytes = await pollForResponse(agent, ecid, requestId, pollStrategy, blsVerify);\n            const shouldIncludeHttpDetails = func.annotations.includes(ACTOR_METHOD_WITH_HTTP_DETAILS);\n            if (responseBytes !== undefined) {\n                return shouldIncludeHttpDetails\n                    ? {\n                        httpDetails: response,\n                        result: decodeReturnValue(func.retTypes, responseBytes),\n                    }\n                    : decodeReturnValue(func.retTypes, responseBytes);\n            }\n            else if (func.retTypes.length === 0) {\n                return shouldIncludeHttpDetails\n                    ? {\n                        httpDetails: response,\n                        result: undefined,\n                    }\n                    : undefined;\n            }\n            else {\n                throw new Error(`Call was returned undefined, but type [${func.retTypes.join(',')}].`);\n            }\n        };\n    }\n    const handler = (...args) => caller({}, ...args);\n    handler.withOptions =\n        (options) => (...args) => caller(options, ...args);\n    return handler;\n}\n/**\n * Create a management canister actor\n * @param config\n */\nexport function getManagementCanister(config) {\n    function transform(_methodName, args, _callConfig) {\n        const first = args[0];\n        let effectiveCanisterId = Principal.fromHex('');\n        if (first && typeof first === 'object' && first.canister_id) {\n            effectiveCanisterId = Principal.from(first.canister_id);\n        }\n        return { effectiveCanisterId };\n    }\n    return Actor.createActor(managementCanisterIdl, Object.assign(Object.assign(Object.assign({}, config), { canisterId: Principal.fromHex('') }), {\n        callTransform: transform,\n        queryTransform: transform,\n    }));\n}\n//# sourceMappingURL=actor.js.map","import { toHex } from '../utils/buffer';\nconst FIVE_MINUTES_IN_MSEC = 5 * 60 * 1000;\n/**\n * A best practices polling strategy: wait 2 seconds before the first poll, then 1 second\n * with an exponential backoff factor of 1.2. Timeout after 5 minutes.\n */\nexport function defaultStrategy() {\n    return chain(conditionalDelay(once(), 1000), backoff(1000, 1.2), timeout(FIVE_MINUTES_IN_MSEC));\n}\n/**\n * Predicate that returns true once.\n */\nexport function once() {\n    let first = true;\n    return async () => {\n        if (first) {\n            first = false;\n            return true;\n        }\n        return false;\n    };\n}\n/**\n * Delay the polling once.\n * @param condition A predicate that indicates when to delay.\n * @param timeInMsec The amount of time to delay.\n */\nexport function conditionalDelay(condition, timeInMsec) {\n    return async (canisterId, requestId, status) => {\n        if (await condition(canisterId, requestId, status)) {\n            return new Promise(resolve => setTimeout(resolve, timeInMsec));\n        }\n    };\n}\n/**\n * Error out after a maximum number of polling has been done.\n * @param count The maximum attempts to poll.\n */\nexport function maxAttempts(count) {\n    let attempts = count;\n    return async (canisterId, requestId, status) => {\n        if (--attempts <= 0) {\n            throw new Error(`Failed to retrieve a reply for request after ${count} attempts:\\n` +\n                `  Request ID: ${toHex(requestId)}\\n` +\n                `  Request status: ${status}\\n`);\n        }\n    };\n}\n/**\n * Throttle polling.\n * @param throttleInMsec Amount in millisecond to wait between each polling.\n */\nexport function throttle(throttleInMsec) {\n    return () => new Promise(resolve => setTimeout(resolve, throttleInMsec));\n}\n/**\n * Reject a call after a certain amount of time.\n * @param timeInMsec Time in milliseconds before the polling should be rejected.\n */\nexport function timeout(timeInMsec) {\n    const end = Date.now() + timeInMsec;\n    return async (canisterId, requestId, status) => {\n        if (Date.now() > end) {\n            throw new Error(`Request timed out after ${timeInMsec} msec:\\n` +\n                `  Request ID: ${toHex(requestId)}\\n` +\n                `  Request status: ${status}\\n`);\n        }\n    };\n}\n/**\n * A strategy that throttle, but using an exponential backoff strategy.\n * @param startingThrottleInMsec The throttle in milliseconds to start with.\n * @param backoffFactor The factor to multiple the throttle time between every poll. For\n *   example if using 2, the throttle will double between every run.\n */\nexport function backoff(startingThrottleInMsec, backoffFactor) {\n    let currentThrottling = startingThrottleInMsec;\n    return () => new Promise(resolve => setTimeout(() => {\n        currentThrottling *= backoffFactor;\n        resolve();\n    }, currentThrottling));\n}\n/**\n * Chain multiple polling strategy. This _chains_ the strategies, so if you pass in,\n * say, two throttling strategy of 1 second, it will result in a throttle of 2 seconds.\n * @param strategies A strategy list to chain.\n */\nexport function chain(...strategies) {\n    return async (canisterId, requestId, status) => {\n        for (const a of strategies) {\n            await a(canisterId, requestId, status);\n        }\n    };\n}\n//# sourceMappingURL=strategy.js.map","let wasm;\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet cachedFloat64Memory0 = null;\n\nfunction getFloat64Memory0() {\n    if (cachedFloat64Memory0 === null || cachedFloat64Memory0.byteLength === 0) {\n        cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachedFloat64Memory0;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n/**\n* @returns {number}\n*/\nexport function getMinVerificationVersion() {\n    const ret = wasm.getMinVerificationVersion();\n    return ret;\n}\n\n/**\n* @returns {number}\n*/\nexport function getMaxVerificationVersion() {\n    const ret = wasm.getMaxVerificationVersion();\n    return ret;\n}\n\n/**\n*/\nexport function main() {\n    wasm.main();\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* The primary entry point for verifying a request and response pair. This will verify the response\n* with respect to the request, according the [Response Verification Spec]().\n* @param {Request} request\n* @param {Response} response\n* @param {Uint8Array} canister_id\n* @param {bigint} current_time_ns\n* @param {bigint} max_cert_time_offset_ns\n* @param {Uint8Array} ic_public_key\n* @param {number} min_requested_verification_version\n* @returns {VerificationInfo}\n*/\nexport function verifyRequestResponsePair(request, response, canister_id, current_time_ns, max_cert_time_offset_ns, ic_public_key, min_requested_verification_version) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray8ToWasm0(canister_id, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArray8ToWasm0(ic_public_key, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        wasm.verifyRequestResponsePair(retptr, addHeapObject(request), addHeapObject(response), ptr0, len0, current_time_ns, max_cert_time_offset_ns, ptr1, len1, min_requested_verification_version);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n/**\n* JS Representation of the ResponseVerificationError code\n*/\nexport const ResponseVerificationErrorCode = Object.freeze({\n/**\n* The URL was malformed and could not be parsed correctly\n*/\nMalformedUrl:0,\"0\":\"MalformedUrl\",\n/**\n* Error converting UTF-8 string\n*/\nIoError:1,\"1\":\"IoError\",\n/**\n* Error converting UTF-8 string\n*/\nUtf8ConversionError:2,\"2\":\"Utf8ConversionError\",\n/**\n* An unsupported verification version was requested\n*/\nUnsupportedVerificationVersion:3,\"3\":\"UnsupportedVerificationVersion\",\n/**\n* Mismatch between the minimum requested version and the actual requested version\n*/\nRequestedVerificationVersionMismatch:4,\"4\":\"RequestedVerificationVersionMismatch\",\n/**\n* Error parsing CEL expression\n*/\nCelError:5,\"5\":\"CelError\",\n/**\n* Error decoding base64\n*/\nBase64DecodingError:6,\"6\":\"Base64DecodingError\",\n/**\n* Error parsing int\n*/\nParseIntError:7,\"7\":\"ParseIntError\",\n/**\n* The tree has different root hash from the expected value in the certified variables\n*/\nInvalidTree:8,\"8\":\"InvalidTree\",\n/**\n* The CEL expression path is invalid\n*/\nInvalidExpressionPath:9,\"9\":\"InvalidExpressionPath\",\n/**\n* The response body was a mismatch from the expected values in the tree\n*/\nInvalidResponseBody:10,\"10\":\"InvalidResponseBody\",\n/**\n* The response hashes were a mismatch from the expected values in the tree\n*/\nInvalidResponseHashes:11,\"11\":\"InvalidResponseHashes\",\n/**\n* The certificate was missing from the certification header\n*/\nMissingCertificate:12,\"12\":\"MissingCertificate\",\n/**\n* The tree was missing from the certification header\n*/\nMissingTree:13,\"13\":\"MissingTree\",\n/**\n* The certificate expression path was missing from the certification header\n*/\nMissingCertificateExpressionPath:14,\"14\":\"MissingCertificateExpressionPath\",\n/**\n* The certificate expression was missing from the response headers\n*/\nMissingCertificateExpression:15,\"15\":\"MissingCertificateExpression\",\n/**\n* The certification values could not be found in the response headers\n*/\nMissingCertification:16,\"16\":\"MissingCertification\",\n/**\n* Failed to decode CBOR\n*/\nCborDecodingFailed:17,\"17\":\"CborDecodingFailed\",\n/**\n* Failed to verify certificate\n*/\nCertificateVerificationFailed:18,\"18\":\"CertificateVerificationFailed\", });\n/**\n* JS Representation of the ResponseVerificationError\n*/\nexport class ResponseVerificationError {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(ResponseVerificationError.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    toJSON() {\n        return {\n            code: this.code,\n            message: this.message,\n        };\n    }\n\n    toString() {\n        return JSON.stringify(this);\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_responseverificationerror_free(ptr);\n    }\n    /**\n    * Error code as an enum\n    * @returns {number}\n    */\n    get code() {\n        const ret = wasm.__wbg_get_responseverificationerror_code(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * Stringified error message\n    * @returns {string}\n    */\n    get message() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.__wbg_get_responseverificationerror_message(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_log_53ed96ea72ace5e9 = function(arg0, arg1) {\n        console.log(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbg_error_93b671ae91baaee7 = function(arg0, arg1) {\n        console.error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbg_warn_52c5b3e773c3a056 = function(arg0, arg1) {\n        console.warn(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbg_new_abda76e883ba8a5f = function() {\n        const ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_658279fe44541cf6 = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_error_f851667af71bcfc6 = function(arg0, arg1) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_number_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'number' ? obj : undefined;\n        getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n        getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n    };\n    imports.wbg.__wbg_responseverificationerror_new = function(arg0) {\n        const ret = ResponseVerificationError.__wrap(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_length_fff51ee6522a1a18 = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_new_898a68150f225f2e = function() {\n        const ret = new Array();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_get_44be0491f933a435 = function(arg0, arg1) {\n        const ret = getObject(arg0)[arg1 >>> 0];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_of_195c986fbfdd6637 = function(arg0, arg1) {\n        const ret = Array.of(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_of_3f69007bb4eeae65 = function(arg0, arg1, arg2) {\n        const ret = Array.of(getObject(arg0), getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_push_ca1c26067ef907ac = function(arg0, arg1) {\n        const ret = getObject(arg0).push(getObject(arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_entries_e51f29c7bba0c054 = function(arg0) {\n        const ret = Object.entries(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_fromEntries_46475be008d7104f = function() { return handleError(function (arg0) {\n        const ret = Object.fromEntries(getObject(arg0));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_is_205d914af04a8faa = function(arg0, arg1) {\n        const ret = Object.is(getObject(arg0), getObject(arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_buffer_085ec1f694018c4f = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_6da8e527659b86aa = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_8125e318e6245eed = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_length_72e2208bbc0efc61 = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_set_5cf90238115182c3 = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedFloat64Memory0 = null;\n    cachedInt32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined') {\n        input = new URL('web_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync }\nexport default __wbg_init;\n","import { IDL } from '@dfinity/candid';\nconst Token = IDL.Unknown;\nexport const streamingCallbackHttpResponseType = IDL.Record({\n    token: IDL.Opt(Token),\n    body: IDL.Vec(IDL.Nat8),\n});\nexport const idlFactory = ({ IDL }) => {\n    const HeaderField = IDL.Tuple(IDL.Text, IDL.Text);\n    const HttpRequest = IDL.Record({\n        url: IDL.Text,\n        method: IDL.Text,\n        body: IDL.Vec(IDL.Nat8),\n        headers: IDL.Vec(HeaderField),\n        certificate_version: IDL.Opt(IDL.Nat16),\n    });\n    const StreamingStrategy = IDL.Variant({\n        Callback: IDL.Record({\n            token: Token,\n            callback: IDL.Func([Token], [IDL.Opt(streamingCallbackHttpResponseType)], ['query']),\n        }),\n    });\n    const HttpResponse = IDL.Record({\n        body: IDL.Vec(IDL.Nat8),\n        headers: IDL.Vec(HeaderField),\n        upgrade: IDL.Opt(IDL.Bool),\n        streaming_strategy: IDL.Opt(StreamingStrategy),\n        status_code: IDL.Nat16,\n    });\n    const HttpUpdateRequest = IDL.Record({\n        url: IDL.Text,\n        method: IDL.Text,\n        body: IDL.Vec(IDL.Nat8),\n        headers: IDL.Vec(HeaderField),\n    });\n    return IDL.Service({\n        http_request: IDL.Func([HttpRequest], [HttpResponse], ['query']),\n        http_request_update: IDL.Func([HttpUpdateRequest], [HttpResponse], []),\n    });\n};\n","export var HTTPHeaders;\n(function (HTTPHeaders) {\n    HTTPHeaders[\"Vary\"] = \"vary\";\n    HTTPHeaders[\"CacheControl\"] = \"cache-control\";\n    HTTPHeaders[\"Range\"] = \"range\";\n    HTTPHeaders[\"ContentEncoding\"] = \"content-encoding\";\n    HTTPHeaders[\"BoundaryNodeRequestId\"] = \"x-request-id\";\n})(HTTPHeaders || (HTTPHeaders = {}));\nexport const cacheHeaders = [HTTPHeaders.CacheControl.toString()];\nexport const responseVerificationFailedResponse = Object.freeze({\n    status: 500,\n    statusText: 'Response verification failed',\n});\nexport var HTTPRequestMethod;\n(function (HTTPRequestMethod) {\n    HTTPRequestMethod[\"Get\"] = \"GET\";\n})(HTTPRequestMethod || (HTTPRequestMethod = {}));\nexport const headerDirectiveEntrySeparator = '=';\nexport const varyHeaderSeparator = ',';\nexport const cacheControlHeaderSeparator = ',';\nexport var RequestCacheControlDirectives;\n(function (RequestCacheControlDirectives) {\n    RequestCacheControlDirectives[\"NoCache\"] = \"no-cache\";\n    RequestCacheControlDirectives[\"NoStore\"] = \"no-store\";\n})(RequestCacheControlDirectives || (RequestCacheControlDirectives = {}));\nexport var ResponseCacheControlDirectives;\n(function (ResponseCacheControlDirectives) {\n    ResponseCacheControlDirectives[\"NoStore\"] = \"no-store\";\n    ResponseCacheControlDirectives[\"MaxAge\"] = \"max-age\";\n})(ResponseCacheControlDirectives || (ResponseCacheControlDirectives = {}));\n","import { Actor, HttpAgent, } from '@dfinity/agent';\nimport initResponseVerification, { getMaxVerificationVersion, } from '@dfinity/response-verification';\nimport responseVerificationWasmModule from '@dfinity/response-verification/dist/web/web_bg.wasm';\nimport { idlFactory } from '../../http-interface/canister_http_interface';\nimport { HTTPHeaders } from './typings';\nexport const shouldFetchRootKey = Boolean(process.env.FORCE_FETCH_ROOT_KEY);\nexport const isMainNet = !shouldFetchRootKey;\nexport async function createAgentAndActor(gatewayUrl, canisterId, fetchRootKey) {\n    const agent = new HttpAgent({ host: gatewayUrl.toString() });\n    if (fetchRootKey) {\n        await agent.fetchRootKey();\n    }\n    const actor = Actor.createActorWithHttpDetails(idlFactory, {\n        agent,\n        canisterId: canisterId,\n    });\n    return [agent, actor];\n}\nexport async function uninstallServiceWorker() {\n    await self.registration.unregister();\n}\nexport async function reloadServiceWorkerClients() {\n    self.clients.matchAll({ type: 'window' }).then(function (clients) {\n        clients.forEach((client) => {\n            client.navigate(client.url);\n        });\n    });\n}\nexport function getBoundaryNodeRequestId(httpDetails) {\n    for (const [key, value] of httpDetails.headers) {\n        if (key.toLowerCase() === HTTPHeaders.BoundaryNodeRequestId) {\n            return value;\n        }\n    }\n}\n/**\n * Request objects cannot be mutated, so we have to clone them and\n * object spread does not work so we have to manually deconstruct the request.\n * If we create a new Request using the original one then the duplex property is not copied over, so we have to set it manually.\n * The duplex property also does not exist in the Typescript definitions so we need to cast to unknown.\n * Safari does not support creating a Request with a readable stream as a body, so we have to read the stream and set the body\n * as the UIntArray that is read.\n */\nexport async function updateRequestApiGateway(originalRequest, gatewayUrl) {\n    const url = new URL(originalRequest.url);\n    const { cache, credentials, headers, integrity, keepalive, method, mode, redirect, referrer, referrerPolicy, signal, } = originalRequest;\n    const requestInit = {\n        cache,\n        credentials,\n        headers,\n        integrity,\n        keepalive,\n        method,\n        mode,\n        redirect,\n        referrer,\n        referrerPolicy,\n        signal,\n        duplex: 'half',\n    };\n    if (!['HEAD', 'GET'].includes(method)) {\n        requestInit['body'] = await originalRequest.arrayBuffer();\n    }\n    return new Request(`${url.protocol}//${gatewayUrl.hostname}${url.pathname}`, requestInit);\n}\nexport async function createHttpRequest(request) {\n    const certificateVersion = getMaxVerificationVersion();\n    const url = new URL(request.url);\n    const requestHeaders = [['Host', url.hostname]];\n    request.headers.forEach((value, key) => {\n        if (key.toLowerCase() === 'if-none-match') {\n            // Drop the if-none-match header because we do not want a \"304 not modified\" response back.\n            // See TT-30.\n            return;\n        }\n        requestHeaders.push([key, value]);\n    });\n    // If the accept encoding isn't given, add it because we want to save bandwidth.\n    if (!request.headers.has('Accept-Encoding')) {\n        requestHeaders.push(['Accept-Encoding', 'gzip, deflate, identity']);\n    }\n    return {\n        method: request.method,\n        url: url.pathname + url.search,\n        headers: requestHeaders,\n        body: new Uint8Array(await request.arrayBuffer()),\n        certificate_version: [certificateVersion],\n    };\n}\nlet responseVerificationWasm = null;\nlet loadingResponseVerificationWasm = null;\nexport const loadResponseVerification = async () => {\n    if (!responseVerificationWasm && !loadingResponseVerificationWasm) {\n        loadingResponseVerificationWasm = initResponseVerification(responseVerificationWasmModule);\n        responseVerificationWasm = await loadingResponseVerificationWasm;\n        loadingResponseVerificationWasm = null;\n        return;\n    }\n    if (loadingResponseVerificationWasm) {\n        await loadingResponseVerificationWasm;\n    }\n};\n","export class Logger {\n    info(message, ...args) {\n        console.log(message, ...args);\n    }\n    warn(message, ...args) {\n        console.warn(message, ...args);\n    }\n    error(message, ...args) {\n        console.error(message, ...args);\n    }\n    debug(message, ...args) {\n        console.debug(message, ...args);\n    }\n}\nexport default new Logger();\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { openDB, deleteDB, } from 'idb';\nconst DB_NAME = 'sw';\nconst DB_VERSION = 1.0;\nconst DB_DEFAULT_STORE = 'main';\nconst TTL_INDEX_NAME = 'ttl';\nconst TTL_INDEX_KEY_PATH = 'expireAt';\n/**\n * Provides custom access to indexed db storage while still\n * keeping access to the underlying idb object.\n */\nclass Storage {\n    constructor(idb, defaultStore) {\n        this.idb = idb;\n        this.defaultStore = defaultStore;\n    }\n    /**\n     * Retrieves the underlying IDBPDatabase instance.\n     */\n    db() {\n        return this.idb;\n    }\n    /**\n     * Retrieves the default store name used for access.\n     */\n    store() {\n        return this.defaultStore;\n    }\n    /**\n     * Connects to the given database name from indexed db.\n     *\n     * @param name Name of the database to connect\n     * @param version Version of the database\n     * @param stores Stores options\n     * @param onTerminated Callback when the browser interrupts the db connection\n     */\n    static async connect({ name = DB_NAME, version = DB_VERSION, stores = {}, onTerminated, } = {}) {\n        var _a, _b;\n        if (!(stores === null || stores === void 0 ? void 0 : stores.init) || !((_a = stores === null || stores === void 0 ? void 0 : stores.init) === null || _a === void 0 ? void 0 : _a.length)) {\n            // we initialize the default store in case no other store is provided\n            stores.init = [DB_DEFAULT_STORE];\n        }\n        const idb = await openDB(name, version, {\n            async upgrade(database, oldVersion, _newVersion, transaction) {\n                var _a;\n                for (const createStore of (_a = stores.init) !== null && _a !== void 0 ? _a : []) {\n                    if (typeof createStore !== 'string') {\n                        const store = await createStore(database, oldVersion, transaction);\n                        store.createIndex(TTL_INDEX_NAME, TTL_INDEX_KEY_PATH);\n                        return;\n                    }\n                    if (database.objectStoreNames.contains(createStore)) {\n                        // we return early here to avoid a store with the same name to be created\n                        // on db version changes which would cause an error to be thrown\n                        return;\n                    }\n                    const store = database.createObjectStore(createStore);\n                    store.createIndex(TTL_INDEX_NAME, TTL_INDEX_KEY_PATH);\n                }\n                database.onversionchange = function () {\n                    database.close();\n                };\n            },\n            terminated() {\n                onTerminated === null || onTerminated === void 0 ? void 0 : onTerminated();\n            },\n        });\n        if ((stores === null || stores === void 0 ? void 0 : stores.default) && !idb.objectStoreNames.contains(stores === null || stores === void 0 ? void 0 : stores.default)) {\n            throw new Error('Default store name not found');\n        }\n        const defaultStore = (_b = stores === null || stores === void 0 ? void 0 : stores.default) !== null && _b !== void 0 ? _b : idb.objectStoreNames[0];\n        const storage = new Storage(idb, defaultStore);\n        await storage.removeOutdatedRecords();\n        return storage;\n    }\n    /**\n     * Closes the open database connection after all active transactions are finalized.\n     */\n    async disconnect() {\n        return this.idb.close();\n    }\n    /**\n     * Removes the active indexed db storage.\n     */\n    async remove() {\n        return deleteDB(this.idb.name);\n    }\n    /**\n     * Gets the value for a given key from indexed db store, if the value has already expired\n     * it's removed and returns undefined.\n     *\n     * @param key Key to fetch from the indexed db\n     * @param storeName Optional store name, defaults to initial store\n     */\n    async get(key, opts) {\n        var _a;\n        const store = (_a = opts === null || opts === void 0 ? void 0 : opts.storeName) !== null && _a !== void 0 ? _a : this.defaultStore;\n        const value = await this.idb.get(store, key);\n        if ((value === null || value === void 0 ? void 0 : value.expireAt) && Date.now() >= value.expireAt) {\n            await this.idb.delete(store, key);\n            return;\n        }\n        return value === null || value === void 0 ? void 0 : value.body;\n    }\n    /**\n     * Deletes the value for a given key from indexed db store if available.\n     *\n     * @param key Key to fetch from the indexed db\n     * @param storeName Optional store name, defaults to initial store\n     */\n    async delete(key, opts) {\n        var _a;\n        const store = (_a = opts === null || opts === void 0 ? void 0 : opts.storeName) !== null && _a !== void 0 ? _a : this.defaultStore;\n        await this.idb.delete(store, key);\n    }\n    /**\n     * Gets all values from indexed db store, if the value has already expired\n     * it's removed and returns undefined.\n     *\n     * @param storeName Optional store name, defaults to initial store\n     */\n    async getAll(opts) {\n        var _a;\n        const store = (_a = opts === null || opts === void 0 ? void 0 : opts.storeName) !== null && _a !== void 0 ? _a : this.defaultStore;\n        await this.removeOutdatedRecords({ storeName: store });\n        const values = await this.idb.getAll(store);\n        return values.map((value) => value === null || value === void 0 ? void 0 : value.body);\n    }\n    /**\n     * Sets the value for a given key to indexed db store, it wraps the value with the given ttl to\n     * expire the record. If TTL is not present, the value won't expire.\n     *\n     * @param key Key to set into the indexed db\n     * @param value Value to be persisted\n     * @param ttl Expire date for the value\n     * @param storeName Optional store name, defaults to initial store\n     * @returns\n     */\n    async put(key, value, opts) {\n        var _a, _b;\n        const store = (_a = opts === null || opts === void 0 ? void 0 : opts.storeName) !== null && _a !== void 0 ? _a : this.defaultStore;\n        const expireAt = (_b = opts === null || opts === void 0 ? void 0 : opts.ttl) === null || _b === void 0 ? void 0 : _b.getTime();\n        const storeValue = {\n            expireAt: expireAt && expireAt > Date.now() ? expireAt : undefined,\n            body: value,\n        };\n        return this.idb.put(store, storeValue, key);\n    }\n    /**\n     * Removes all entries for the given store.\n     *\n     * @param storeName Optional store name, defaults to initial store\n     */\n    async clear(opts) {\n        var _a;\n        const store = (_a = opts === null || opts === void 0 ? void 0 : opts.storeName) !== null && _a !== void 0 ? _a : this.defaultStore;\n        return this.idb.clear(store);\n    }\n    /**\n     * Cleanup all outdated records of a given store\n     */\n    async removeOutdatedRecords(opts) {\n        var _a;\n        const store = (_a = opts === null || opts === void 0 ? void 0 : opts.storeName) !== null && _a !== void 0 ? _a : this.defaultStore;\n        const entriesUntil = IDBKeyRange.upperBound(Date.now());\n        const transaction = this.idb.transaction(store, 'readwrite');\n        const expiredKeys = await transaction.db.getAllKeysFromIndex(store, TTL_INDEX_NAME, entriesUntil);\n        const removeOperations = expiredKeys.map((expiredKey) => transaction.db.delete(store, expiredKey));\n        await Promise.all([...removeOperations, transaction.done]);\n    }\n}\nexport { DB_NAME, DB_VERSION, DB_DEFAULT_STORE, Storage, };\n","export class MalformedCanisterError extends Error {\n    constructor(message) {\n        super(message);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\n","import { Principal } from '@dfinity/principal';\nimport { MalformedCanisterError } from './errors';\nimport logger from '../../logger';\nexport class ResolverMapper {\n    static fromDBHostsItem(lookup) {\n        if (!lookup.canister) {\n            return null;\n        }\n        try {\n            return Principal.fromText(lookup.canister.id);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    static toDBHostsItem(lookup) {\n        if (!lookup) {\n            return {\n                canister: false,\n            };\n        }\n        try {\n            return {\n                canister: {\n                    id: lookup === null || lookup === void 0 ? void 0 : lookup.toText(),\n                },\n            };\n        }\n        catch (error) {\n            return {\n                canister: false,\n            };\n        }\n    }\n    static toHTTPSUrl(url) {\n        const secureDomain = new URL(url.href);\n        secureDomain.protocol = 'https:';\n        return secureDomain;\n    }\n    static getPrincipalFromText(canisterId) {\n        try {\n            return Principal.fromText(canisterId);\n        }\n        catch (err) {\n            const error = err;\n            throw new MalformedCanisterError(error.message);\n        }\n    }\n    static toDBHostsItemFromEvent(event) {\n        try {\n            return ResolverMapper.toDBHostsItem(ResolverMapper.getPrincipalFromText(event.canisterId));\n        }\n        catch (err) {\n            // logging the error in case the event had malformed values\n            logger.error(err);\n            return null;\n        }\n    }\n}\n","import { Principal } from '@dfinity/principal';\nexport const DEFAULT_GATEWAY = new URL(self.location.protocol + '//' + 'icp-api.io');\nexport const hostnameCanisterIdMap = new Map(Object.entries({\n    'identity.ic0.app': Principal.from('rdmx6-jaaaa-aaaaa-aaadq-cai'),\n    'nns.ic0.app': Principal.from('qoctq-giaaa-aaaaa-aaaea-cai'),\n    'dscvr.one': Principal.from('h5aet-waaaa-aaaab-qaamq-cai'),\n    'dscvr.ic0.app': Principal.from('h5aet-waaaa-aaaab-qaamq-cai'),\n    'personhood.ic0.app': Principal.from('g3wsl-eqaaa-aaaan-aaaaa-cai'),\n}));\n","export var DomainStorageStores;\n(function (DomainStorageStores) {\n    DomainStorageStores[\"Hosts\"] = \"hosts\";\n})(DomainStorageStores || (DomainStorageStores = {}));\nexport var AcceptedLookupUrlProtocol;\n(function (AcceptedLookupUrlProtocol) {\n    AcceptedLookupUrlProtocol[\"Http\"] = \"http:\";\n    AcceptedLookupUrlProtocol[\"Https\"] = \"https:\";\n})(AcceptedLookupUrlProtocol || (AcceptedLookupUrlProtocol = {}));\nexport const acceptedLookupUrlProtocols = new Set(Object.values(AcceptedLookupUrlProtocol).map(String));\nexport const domainLookupHeaders = {\n    canisterId: 'x-ic-canister-id',\n};\nexport const domainStorageProperties = {\n    name: 'ic-domains-v2',\n    version: 2,\n    store: DomainStorageStores.Hosts,\n};\n","import { Principal } from '@dfinity/principal';\nimport { isMainNet } from '../requests/utils';\nexport const apiGateways = [\n    'boundary.dfinity.network',\n    'boundary.ic0.app',\n    'ic0.app',\n    'icp0.io',\n    'icp-api.io',\n];\n/**\n * Try to resolve the Canister ID to contact from headers.\n * @param headers Headers from the HttpRequest.\n * @returns A Canister ID or null if none were found.\n */\nexport function maybeResolveCanisterFromHeaders(headers) {\n    const maybeHostHeader = headers.get('host');\n    if (maybeHostHeader) {\n        // Remove the port.\n        const lookup = maybeResolveCanisterFromHostName(maybeHostHeader.replace(/:\\d+$/, ''));\n        if (lookup) {\n            return lookup;\n        }\n    }\n    return null;\n}\n/**\n * Try to resolve the Canister ID to contact from a URL string.\n * @param url The URL (normally from the request).\n * @returns A Canister ID or null if none were found.\n */\nexport function resolveCanisterFromUrl(url) {\n    return maybeResolveCanisterFromHostName(url.hostname);\n}\nexport function isRawDomain(hostname, mainNet = isMainNet) {\n    // For security reasons the match is only made for ic[0-9].app, ic[0-9].dev and icp[0-9].io domains. This makes\n    // the match less permissive and prevents unwanted matches for domains that could include raw\n    // but still serve as a normal dapp domain that should go through response verification.\n    const isIcAppRaw = !!hostname.match(new RegExp(/\\.raw\\.ic[0-9]+\\.app/));\n    const isIcDevRaw = !!hostname.match(new RegExp(/\\.raw\\.testic[0-9]+\\.app/));\n    const isIcpIoRaw = !!hostname.match(new RegExp(/\\.raw\\.icp[0-9]+\\.io/));\n    const isTestnetRaw = !mainNet &&\n        (!!hostname.match(new RegExp(/\\.raw\\.[\\w-]+\\.testnet\\.[\\w-]+\\.network/)) ||\n            !!hostname.match(new RegExp(/\\.raw\\.ic[0-9]+\\.dev/)));\n    return isIcAppRaw || isIcDevRaw || isIcpIoRaw || isTestnetRaw;\n}\n/**\n * Split a hostname up-to the first valid canister ID from the right.\n * @param hostname The hostname to analyze.\n * @returns A canister ID followed by all subdomains that are after it, or null if no canister ID were found.\n */\nexport function maybeResolveCanisterFromHostName(hostname) {\n    const subdomains = hostname.split('.');\n    // raw ic domain in handled as a normal web2 request\n    if (isRawDomain(hostname)) {\n        return null;\n    }\n    for (const domain of subdomains) {\n        try {\n            return Principal.fromText(domain);\n        }\n        catch (_) {\n            // subdomain did not match expected Principal format\n            // continue checking each subdomain\n        }\n    }\n    return null;\n}\n","import { Principal } from '@dfinity/principal';\nimport { isMainNet } from '../requests/utils';\nimport logger from '../../logger';\nimport { Storage } from '../storage';\nimport { MalformedCanisterError } from './errors';\nimport { ResolverMapper } from './mapper';\nimport { DEFAULT_GATEWAY, hostnameCanisterIdMap } from './static';\nimport { acceptedLookupUrlProtocols, domainLookupHeaders, domainStorageProperties, } from './typings';\nimport { apiGateways, isRawDomain, maybeResolveCanisterFromHeaders, resolveCanisterFromUrl, } from './utils';\nexport class CanisterResolver {\n    constructor(storage, ttl = 60 * 60 * 1000, // 60 minutes\n    inflight = new Map()) {\n        this.storage = storage;\n        this.ttl = ttl;\n        this.inflight = inflight;\n    }\n    static async setup() {\n        if (!this.instance) {\n            const storage = await CanisterResolver.storageConnection();\n            this.instance = new CanisterResolver(storage);\n        }\n        return this.instance;\n    }\n    static async storageConnection() {\n        return await Storage.connect({\n            name: domainStorageProperties.name,\n            version: domainStorageProperties.version,\n            stores: {\n                init: [domainStorageProperties.store],\n                default: domainStorageProperties.store,\n            },\n        });\n    }\n    async saveICHostInfo(event) {\n        const item = ResolverMapper.toDBHostsItemFromEvent(event);\n        if (item && item.canister) {\n            await this.storage.put(self.location.origin, item, {\n                ttl: new Date(Date.now() + this.ttl),\n            });\n        }\n    }\n    /**\n     * Gets the current gateway. On mainnet this is always `DEFAULT_GATEWAY`,\n     * on testnets this is based on the current URL, see `getRootDomain` for more information.\n     * @returns The current gateway.\n     */\n    async getCurrentGateway(mainNet = isMainNet) {\n        return mainNet ? DEFAULT_GATEWAY : this.getRootDomain();\n    }\n    /**\n     * Gets the root domain that is currently hosting the service worker,\n     * this will be used as the gateway when running on a testnet,\n     * or used to determine if a dApp is making requests against itself or another domain.\n     *\n     * This is based on the current URL and assumes the following format:\n     * `${self.location.protocol}//${canisterId}.${gatewayHostname}/${path}`,\n     * and will return the following:\n     * `${self.location.protocol}//${gatewayHostname}`.\n     * If no canister ID is found in the hostname, the full hostname will be returned.\n     *\n     * For example:\n     * `https://rwlgt-iiaaa-aaaaa-aaaaa-cai.small04.testnet.dfinity.network/some-path/`,\n     * will return:\n     * `https://small04.testnet.dfinity.network/`.\n     *\n     * @returns The gateway for the testnet hosting the service worker.\n     */\n    getRootDomain() {\n        const hostnameParts = self.location.hostname.split('.').reverse();\n        const rootDomainParts = [];\n        for (const part of hostnameParts) {\n            try {\n                // we don't need the canister ID at this point,\n                // but if we have found a canister ID then we know that we've found the full root domain,\n                // so we return it\n                Principal.fromText(part);\n                return new URL(`${self.location.protocol}//${rootDomainParts.reverse().join('.')}`);\n            }\n            catch (_) {\n                // domain part is not a canister ID,\n                // so we can assume it is part of the root domain\n                rootDomainParts.push(part);\n            }\n        }\n        // this part of the code will be reached if we never find a canister ID in the domain\n        // this will happen if we are on a custom domain and it should return the full hostname\n        return new URL(`${self.location.protocol}//${self.location.hostname}`);\n    }\n    resolveLookupFromUrl(domain) {\n        // maybe resolve from hardcoded mappings to avoid uncessary network round trips\n        const staticMapping = hostnameCanisterIdMap.get(domain.hostname);\n        if (staticMapping) {\n            return staticMapping;\n        }\n        // handle raw domain as a web2 request\n        if (isRawDomain(domain.hostname)) {\n            return null;\n        }\n        // maybe resolve the canister id from url\n        return resolveCanisterFromUrl(domain);\n    }\n    async lookupFromHttpRequest(request) {\n        const url = new URL(request.url);\n        if (!acceptedLookupUrlProtocols.has(url.protocol)) {\n            return null;\n        }\n        const canister = maybeResolveCanisterFromHeaders(request.headers);\n        if (canister) {\n            return canister;\n        }\n        return await this.lookup(url);\n    }\n    async lookup(domain) {\n        // inglight map is used to deduplicate lookups for the same domain\n        let inflightLookup = this.inflight.get(domain.origin);\n        if (inflightLookup) {\n            return await inflightLookup;\n        }\n        inflightLookup = (async () => {\n            // maybe resolve from information available in the request\n            const lookupFromUrl = this.resolveLookupFromUrl(domain);\n            if (lookupFromUrl) {\n                return lookupFromUrl;\n            }\n            // maybe resolve from previous cached results\n            const cachedLookup = await this.storage.get(domain.origin);\n            if (cachedLookup) {\n                return ResolverMapper.fromDBHostsItem(cachedLookup);\n            }\n            // maybe resolve from response headers the domain provides\n            const lookup = await this.fetchDomain(domain);\n            // we cache lookups to avoid additional round trips to the same domain\n            try {\n                const dbHostItem = ResolverMapper.toDBHostsItem(lookup);\n                await this.storage.put(domain.origin, dbHostItem, {\n                    ttl: new Date(Date.now() + this.ttl),\n                });\n            }\n            catch (err) {\n                // only log the error in case persist transaction fails\n                logger.error('Failed to cache host lookup', err);\n            }\n            return lookup;\n        })();\n        // caching the promise of inflight requests to enable concurrent\n        // requests to the same domain to use the same promise\n        this.inflight.set(domain.origin, inflightLookup);\n        const lookup = await inflightLookup;\n        this.inflight.delete(domain.origin);\n        return lookup;\n    }\n    /**\n     * Checks if the given request is a direct api call.\n     * @param request The request to check\n     */\n    isAPICall(request, gatewayUrl, mainNet = isMainNet) {\n        const url = new URL(request.url);\n        return (url.pathname.startsWith('/api/') &&\n            this.isGatewayCall(url, gatewayUrl, mainNet));\n    }\n    /**\n     * Checks if the given request is a call to the `/_/raw/` endpoint.\n     * @param request The request to check\n     * @param gatewayUrl The current gateway URL\n     * @param mainNet Whether the current network is mainnet or not\n     * @returns True if the request is a call to the `/_/raw/` endpoint, false otherwise\n     */\n    isUnderscoreRawCall(request, gatewayUrl, mainNet = isMainNet) {\n        const url = new URL(request.url);\n        return (url.pathname.startsWith('/_/raw') &&\n            this.isGatewayCall(url, gatewayUrl, mainNet));\n    }\n    isGatewayCall(url, gatewayUrl, mainNet = isMainNet) {\n        if (!mainNet && url.hostname.endsWith(gatewayUrl.hostname)) {\n            return true;\n        }\n        return apiGateways.some((apiGateway) => url.hostname.endsWith(apiGateway));\n    }\n    /**\n     * Performs a HEAD request to the domain expecting to get back the canister id and gateway,\n     * if both are not available handles the domain as a web2 request.\n     * The lookup request is made over HTTPS for security reasons.\n     * @param domain The domain to find out if points to a canister or we2.\n     * @param retries Number of fetch tries, only retry on network failures\n     */\n    async fetchDomain(domain, retries = 3) {\n        var _a;\n        try {\n            const secureDomain = ResolverMapper.toHTTPSUrl(domain);\n            const response = await fetch(secureDomain.href, {\n                method: 'HEAD',\n                mode: 'no-cors',\n            });\n            const headers = response.headers;\n            // we expect a 200 from a request to the http gateway\n            const successfulResponse = response.status >= 200 && response.status < 300;\n            if (successfulResponse && headers.has(domainLookupHeaders.canisterId)) {\n                const canisterId = (_a = headers.get(domainLookupHeaders.canisterId)) !== null && _a !== void 0 ? _a : '';\n                return ResolverMapper.getPrincipalFromText(canisterId);\n            }\n            return null;\n        }\n        catch (err) {\n            // we don't retry in case the gateway returned wrong headers\n            if (err instanceof MalformedCanisterError) {\n                throw err;\n            }\n            if (retries <= 1) {\n                // network failures are thrown after retries\n                throw err;\n            }\n            // retry the request on network failure\n            return await this.fetchDomain(domain, retries - 1);\n        }\n    }\n}\n","export var CacheStorageStores;\n(function (CacheStorageStores) {\n    CacheStorageStores[\"Assets\"] = \"assets\";\n})(CacheStorageStores || (CacheStorageStores = {}));\nexport const cacheStorageProperties = {\n    name: 'ic-cache',\n    version: 1,\n    store: CacheStorageStores.Assets,\n};\nexport var CacheStorageNames;\n(function (CacheStorageNames) {\n    CacheStorageNames[\"Image\"] = \"image\";\n    CacheStorageNames[\"Audio\"] = \"audio\";\n    CacheStorageNames[\"Video\"] = \"video\";\n    CacheStorageNames[\"Script\"] = \"script\";\n    CacheStorageNames[\"Style\"] = \"style\";\n    CacheStorageNames[\"Font\"] = \"font\";\n    CacheStorageNames[\"Other\"] = \"other\";\n})(CacheStorageNames || (CacheStorageNames = {}));\nexport const supportedRequestDestinations = new Set([\n    'image',\n    'script',\n    'style',\n    'font',\n    'audio',\n    'video',\n]);\n","import { hashString } from '../../utils';\nimport { HTTPHeaders, varyHeaderSeparator } from '../requests';\nimport { CacheStorageNames } from './typings';\nexport class CacheMapper {\n    /**\n     * Creates the request key of a given request composed of hostname, pathname\n     * and optional options with method, search and vary headers available from the response.\n     * @param request Used to create the key\n     * @param response Used to create the key\n     * @param options Whether it should use method, search and vary headers to compose the key\n     */\n    static toRequestKey(request, response, options) {\n        const url = new URL(request.url);\n        const headers = [];\n        const varyHeader = response === null || response === void 0 ? void 0 : response.headers.get(HTTPHeaders.Vary);\n        if (!(options === null || options === void 0 ? void 0 : options.ignoreVary) && response && varyHeader) {\n            const rawVaryHeaders = varyHeader\n                .split(varyHeaderSeparator)\n                .map((varyHeader) => varyHeader.toLowerCase().trim());\n            // headers need to be sorted to make sure the key has always the same signature\n            new Set(rawVaryHeaders.sort()).forEach((varyHeader) => {\n                var _a;\n                if (varyHeader.length) {\n                    headers.push([varyHeader, (_a = request.headers.get(varyHeader)) !== null && _a !== void 0 ? _a : '']);\n                }\n            });\n        }\n        return {\n            hostname: url.hostname,\n            pathname: url.pathname,\n            method: !(options === null || options === void 0 ? void 0 : options.ignoreMethod) ? request.method : null,\n            search: !(options === null || options === void 0 ? void 0 : options.ignoreSearch) ? url.search : null,\n            headers,\n        };\n    }\n    /**\n     * Creates a sha-256 hex from the given request, response and cache query options.\n     * @param request Used to create the key\n     * @param response Used to create the key\n     * @param options Whether it should use method, search and vary headers to compose the key\n     */\n    static async toRequestKeyHash(request, response, options) {\n        const requestKey = CacheMapper.toRequestKey(request, response, options);\n        const keyParts = [\n            requestKey.hostname,\n            requestKey.pathname,\n            requestKey.method,\n            requestKey.search,\n            requestKey.headers,\n        ];\n        return hashString(`:${keyParts.filter(Boolean).join('::')}:`);\n    }\n    static toDBRequestMetadata(request, response) {\n        const url = new URL(request.url);\n        return {\n            hostname: url.hostname,\n            pathname: url.pathname,\n            method: request.method,\n            response: {\n                ok: response.ok,\n                status: response.status,\n            },\n        };\n    }\n    static fromRequestToCacheName(request) {\n        switch (request.destination) {\n            case 'audio':\n                return CacheStorageNames.Audio;\n            case 'video':\n                return CacheStorageNames.Video;\n            case 'script':\n                return CacheStorageNames.Script;\n            case 'style':\n                return CacheStorageNames.Style;\n            case 'image':\n                return CacheStorageNames.Image;\n            case 'font':\n                return CacheStorageNames.Font;\n            default:\n                return CacheStorageNames.Other;\n        }\n    }\n}\n","export function getValueFromCookie(name, cookie = document.cookie) {\n    var _a, _b;\n    return (_b = (_a = cookie.match(new RegExp(`(?:${name}=)(.*?)(?:;|$)`))) === null || _a === void 0 ? void 0 : _a[1]) !== null && _b !== void 0 ? _b : null;\n}\nexport async function hashString(str, algorithm = 'SHA-256') {\n    const data = new TextEncoder().encode(str);\n    const hashBuffer = await crypto.subtle.digest(algorithm, data);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    return hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n}\nexport function parseSafeInteger(value, radix = 10) {\n    if (!value) {\n        return NaN;\n    }\n    const parsedNumber = Number.parseInt(value, radix);\n    if (!Number.isNaN(parsedNumber) &&\n        parsedNumber >= Number.MIN_SAFE_INTEGER &&\n        parsedNumber <= Number.MAX_SAFE_INTEGER) {\n        return parsedNumber;\n    }\n    return NaN;\n}\n","import { HTTPHeaders, HTTPRequestMethod, RequestMapper } from '../requests';\nimport { Storage } from '../storage';\nimport { CacheMapper } from './mapper';\nimport { cacheStorageProperties, supportedRequestDestinations, } from './typings';\nexport class ResponseCache {\n    constructor(storage) {\n        this.storage = storage;\n    }\n    static async setup() {\n        if (!this.instance) {\n            const storage = await ResponseCache.storageConnection();\n            this.instance = new ResponseCache(storage);\n        }\n        return this.instance;\n    }\n    static async storageConnection() {\n        return await Storage.connect({\n            name: cacheStorageProperties.name,\n            version: cacheStorageProperties.version,\n            stores: {\n                init: [cacheStorageProperties.store],\n                default: cacheStorageProperties.store,\n            },\n        });\n    }\n    async match(request) {\n        const cache = await this.cacheDB(request);\n        const response = await cache.match(request);\n        if (!response) {\n            return;\n        }\n        const requestKeyHash = await CacheMapper.toRequestKeyHash(request, response);\n        const metadata = await this.storage.get(requestKeyHash);\n        if (!metadata) {\n            await cache.delete(request);\n            return;\n        }\n        // if the browser has been force refreshed we should remove the cache entry\n        const cacheControl = RequestMapper.toRequestCacheControlHeader(request.headers);\n        if (cacheControl === null || cacheControl === void 0 ? void 0 : cacheControl.noCache) {\n            await cache.delete(request);\n            await this.storage.delete(requestKeyHash);\n            return;\n        }\n        return response;\n    }\n    /**\n     * Requests can be cached if they are GET and are loading assets.\n     */\n    static isRequestCachingSupported(request) {\n        const isSupportedDestination = supportedRequestDestinations.has(request.destination);\n        const isSupportedMethod = request.method.toLowerCase() === HTTPRequestMethod.Get.toLowerCase();\n        const isRangeRequest = !!request.headers.get(HTTPHeaders.Range);\n        return isSupportedDestination && isSupportedMethod && !isRangeRequest;\n    }\n    shouldCacheResponse(request, responseHeaders = new Headers()) {\n        const requestCacheControl = RequestMapper.toRequestCacheControlHeader(request.headers);\n        if (requestCacheControl === null || requestCacheControl === void 0 ? void 0 : requestCacheControl.noStore) {\n            return false;\n        }\n        const responseCacheControl = RequestMapper.toResponseCacheControlHeader(responseHeaders);\n        if (responseCacheControl === null || responseCacheControl === void 0 ? void 0 : responseCacheControl.noStore) {\n            return false;\n        }\n        return (responseCacheControl === null || responseCacheControl === void 0 ? void 0 : responseCacheControl.maxAge) !== undefined;\n    }\n    /**\n     * Decides whether it should cache the response using the available etag and cache control headers.\n     * @param request Request is used to calculate the cache key\n     * @param response Response being cached\n     * @param options Whether it should use method, search and vary headers to compose the key\n     */\n    async save({ request, response, certifiedResponseHeaders = new Headers(), }) {\n        if (!this.shouldCacheResponse(request, certifiedResponseHeaders)) {\n            return false;\n        }\n        const cache = await this.cacheDB(request);\n        const requestKeyHash = await CacheMapper.toRequestKeyHash(request, response);\n        const metadata = CacheMapper.toDBRequestMetadata(request, response);\n        // cache control strategy\n        const responseCacheControl = RequestMapper.toResponseCacheControlHeader(certifiedResponseHeaders);\n        const cacheTTL = (responseCacheControl === null || responseCacheControl === void 0 ? void 0 : responseCacheControl.maxAge)\n            ? new Date(Date.now() + responseCacheControl.maxAge * 1000) // max-age seconds to ms\n            : undefined;\n        await cache.put(request, response.clone());\n        await this.storage.put(requestKeyHash, metadata, {\n            ttl: cacheTTL,\n        });\n        return true;\n    }\n    /**\n     * Creates a cache instance for the cache name associated with the given request.\n     * @param request Used to resolve the cache name\n     */\n    async cacheDB(request) {\n        const cacheName = CacheMapper.fromRequestToCacheName(request);\n        return await self.caches.open(cacheName);\n    }\n}\n","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","import { inflate, ungzip } from 'pako';\nimport { HTTPHeaders } from '../requests';\nfunction getContentEncoding(responseHeaders) {\n    var _a;\n    return ((_a = responseHeaders\n        .filter(([key]) => key.toLowerCase() === HTTPHeaders.ContentEncoding)\n        .map((header) => header[1].trim())\n        .pop()) !== null && _a !== void 0 ? _a : '');\n}\n/**\n * Decode a body (ie. deflate or gunzip it) based on its content-encoding.\n *\n * @param responseBody The response body to decode.\n * @param responseHeaders The response headers.\n */\nexport function decodeBody(responseBody, responseHeaders) {\n    const encoding = getContentEncoding(responseHeaders);\n    switch (encoding) {\n        case 'identity':\n        case '':\n            return responseBody;\n        case 'gzip':\n            return ungzip(responseBody);\n        case 'deflate':\n            return inflate(responseBody);\n        default:\n            throw new Error(`Unsupported encoding: \"${encoding}\"`);\n    }\n}\n","import { streamingCallbackHttpResponseType } from '../../http-interface/canister_http_interface';\nimport { IDL } from '@dfinity/candid';\nimport { concat, } from '@dfinity/agent';\nconst MAX_CALLBACKS = 1000;\nexport async function streamBody(agent, httpResponse, canisterId) {\n    // if we do streaming, body contains the first chunk\n    let buffer = new ArrayBuffer(0);\n    buffer = concat(buffer, httpResponse.body);\n    if (httpResponse.streaming_strategy.length !== 0) {\n        const remainingChunks = await streamRemainingChunks(agent, canisterId, httpResponse.streaming_strategy[0]);\n        buffer = concat(buffer, remainingChunks);\n    }\n    return new Uint8Array(buffer);\n}\nasync function streamRemainingChunks(agent, canisterId, streamingStrategy) {\n    let buffer = new ArrayBuffer(0);\n    let tokenOpt = streamingStrategy.Callback.token;\n    const callBackFunc = streamingStrategy.Callback.callback[1];\n    let currentCallback = 1;\n    while (tokenOpt) {\n        if (currentCallback > MAX_CALLBACKS) {\n            throw new Error('Exceeded streaming callback limit');\n        }\n        const callbackResponse = await queryNextChunk(tokenOpt, agent, canisterId, callBackFunc);\n        switch (callbackResponse.status) {\n            case \"replied\" /* QueryResponseStatus.Replied */: {\n                const [callbackData] = IDL.decode([streamingCallbackHttpResponseType], callbackResponse.reply.arg);\n                if (isStreamingCallbackResponse(callbackData)) {\n                    buffer = concat(buffer, callbackData.body);\n                    [tokenOpt] = callbackData.token;\n                }\n                else {\n                    throw new Error('Unexpected callback response: ' + callbackData);\n                }\n                break;\n            }\n            case \"rejected\" /* QueryResponseStatus.Rejected */: {\n                throw new Error('Streaming callback error: ' + callbackResponse);\n            }\n        }\n        currentCallback += 1;\n    }\n    return buffer;\n}\nfunction queryNextChunk(token, agent, canisterId, callBackFunc) {\n    const tokenType = token.type();\n    // unbox primitive values\n    const tokenValue = typeof token.valueOf === 'function' ? token.valueOf() : token;\n    const callbackArg = IDL.encode([tokenType], [tokenValue]);\n    return agent.query(canisterId, {\n        methodName: callBackFunc,\n        arg: callbackArg,\n    });\n}\nfunction isStreamingCallbackResponse(response) {\n    return (typeof response === 'object' &&\n        response !== null &&\n        'body' in response &&\n        'token' in response);\n}\n","import { cacheHeaders } from '../requests';\n// cache headers are remove since those are handled by\n// cache storage within the service worker. If returned they would\n// reach https://www.chromium.org/blink/ in the cache of chromium which\n// could cache those entries in memory and those requests can't be\n// intercepted by the service worker\nexport function filterResponseHeaders(responseHeaders) {\n    return responseHeaders.filter(([key]) => !cacheHeaders.includes(key.trim().toLowerCase()));\n}\n","import { verifyRequestResponsePair, } from '@dfinity/response-verification';\nexport const maxCertTimeOffsetNs = BigInt.asUintN(64, BigInt(300000000000));\nexport function responseVerification(httpRequest, httpResponse, minAllowedVerificationVersion, canisterId, rootKey) {\n    const currentTimeNs = BigInt.asUintN(64, BigInt(Date.now() * 1000000)); // from ms to nanoseconds\n    return verifyRequestResponsePair({\n        headers: httpRequest.headers,\n        method: httpRequest.method,\n        url: httpRequest.url,\n        body: httpRequest.body,\n    }, {\n        statusCode: httpResponse.status_code,\n        body: httpResponse.body,\n        headers: httpResponse.headers,\n    }, canisterId.toUint8Array(), currentTimeNs, maxCertTimeOffsetNs, new Uint8Array(rootKey), minAllowedVerificationVersion);\n}\n","import { decodeBody, filterResponseHeaders, responseVerification, streamBody, } from '../response';\nimport { responseVerificationFailedResponse, } from './typings';\nimport { getMinVerificationVersion, ResponseVerificationError, } from '@dfinity/response-verification';\nexport async function queryCallHandler(agent, httpRequest, httpResponse, canisterId) {\n    var _a;\n    try {\n        const minAllowedVerificationVersion = getMinVerificationVersion();\n        const streamedBody = await streamBody(agent, httpResponse, canisterId);\n        const verificationResult = responseVerification(httpRequest, Object.assign(Object.assign({}, httpResponse), { body: streamedBody }), minAllowedVerificationVersion, canisterId, agent.rootKey);\n        if (verificationResult.verificationVersion < 2) {\n            if (httpResponse.status_code >= 300 && httpResponse.status_code < 400) {\n                return {\n                    response: new Response('Response verification v1 does not allow redirects', {\n                        status: 500,\n                        statusText: 'Response verification v1 does not allow redirects',\n                    }),\n                    certifiedHeaders: new Headers(),\n                };\n            }\n        }\n        const decodedResponseBody = decodeBody(streamedBody, httpResponse.headers);\n        const responseHeaders = filterResponseHeaders(httpResponse.headers);\n        return {\n            response: new Response(decodedResponseBody, {\n                status: httpResponse.status_code,\n                headers: responseHeaders,\n            }),\n            certifiedHeaders: new Headers((_a = verificationResult.response) === null || _a === void 0 ? void 0 : _a.headers),\n        };\n    }\n    catch (error) {\n        if (error instanceof ResponseVerificationError) {\n            return {\n                response: new Response('Response verification failed', {\n                    status: responseVerificationFailedResponse.status,\n                    statusText: responseVerificationFailedResponse.statusText,\n                }),\n                certifiedHeaders: new Headers(),\n            };\n        }\n        throw error;\n    }\n}\n","import { parseSafeInteger } from '../../utils';\nimport { RequestCacheControlDirectives, cacheControlHeaderSeparator, HTTPHeaders, ResponseCacheControlDirectives, headerDirectiveEntrySeparator, } from './typings';\nexport class RequestMapper {\n    static toRequestCacheControlHeader(headers) {\n        const cacheControlHeader = headers.get(HTTPHeaders.CacheControl);\n        if (!cacheControlHeader) {\n            return;\n        }\n        const cacheControl = {};\n        cacheControlHeader\n            .split(cacheControlHeaderSeparator)\n            .map((directive) => RequestMapper.toHeaderDirectiveEntry(directive))\n            .forEach((entry) => {\n            switch (entry.directive) {\n                case RequestCacheControlDirectives.NoCache: {\n                    cacheControl.noCache = true;\n                    break;\n                }\n                case RequestCacheControlDirectives.NoStore: {\n                    cacheControl.noStore = true;\n                    break;\n                }\n            }\n        });\n        return cacheControl;\n    }\n    static toResponseVerificationHeaders(headers) {\n        const finalHeaders = [];\n        headers.forEach(([key, multiValues]) => {\n            multiValues.split(',').forEach((value) => {\n                finalHeaders.push([key.toLowerCase(), value]);\n            });\n        });\n        return finalHeaders;\n    }\n    static toResponseCacheControlHeader(headers) {\n        const cacheControlHeader = headers.get(HTTPHeaders.CacheControl);\n        if (!cacheControlHeader) {\n            return;\n        }\n        const cacheControl = {};\n        cacheControlHeader\n            .split(cacheControlHeaderSeparator)\n            .map((directive) => RequestMapper.toHeaderDirectiveEntry(directive))\n            .forEach((entry) => {\n            switch (entry.directive) {\n                case ResponseCacheControlDirectives.MaxAge: {\n                    const maybeMaxAge = parseSafeInteger(entry.value);\n                    if (!Number.isNaN(maybeMaxAge) && maybeMaxAge >= 0) {\n                        cacheControl.maxAge = maybeMaxAge;\n                        // max-age = 0 is equivalent to no-store\n                        if (maybeMaxAge === 0) {\n                            cacheControl.noStore = true;\n                        }\n                    }\n                    break;\n                }\n                case ResponseCacheControlDirectives.NoStore: {\n                    cacheControl.noStore = true;\n                    break;\n                }\n            }\n        });\n        return cacheControl;\n    }\n    static toHeaderDirectiveEntry(directive) {\n        const [key, value] = directive.split(headerDirectiveEntrySeparator);\n        return {\n            directive: key.toLowerCase().trim(),\n            value: value === null || value === void 0 ? void 0 : value.toLowerCase().trim(),\n        };\n    }\n}\n","import logger from '../../logger';\nimport { ResponseCache } from '../cache';\nimport { CanisterResolver } from '../domains';\nimport { queryCallHandler } from './query-call';\nimport { shouldUpgradeToUpdateCall, updateCallHandler, } from './upgrade-to-update-call';\nimport { createAgentAndActor, createHttpRequest, getBoundaryNodeRequestId, loadResponseVerification, shouldFetchRootKey, updateRequestApiGateway, } from './utils';\nexport class RequestProcessor {\n    constructor(request) {\n        this.request = request;\n        this.url = new URL(this.request.url);\n    }\n    /**\n     * Only available if the api boundary node adds the 'X-Request-Id' header.\n     */\n    get requestId() {\n        return this._requestId;\n    }\n    /**\n     * Executes the current request performing the network request when necessary.\n     * @returns The response to send to the browser.\n     * @throws If an internal error happens.\n     */\n    async perform() {\n        const responseCache = await ResponseCache.setup();\n        const cachedResponse = await responseCache.match(this.request);\n        if (cachedResponse) {\n            return cachedResponse;\n        }\n        const canisterResolver = await CanisterResolver.setup();\n        const gatewayUrl = await canisterResolver.getCurrentGateway();\n        // maybe check if the response should be denied\n        if (canisterResolver.isUnderscoreRawCall(this.request, gatewayUrl)) {\n            return this.denyRequestHandler();\n        }\n        // maybe check if is an api call\n        if (canisterResolver.isAPICall(this.request, gatewayUrl)) {\n            return await this.apiRequestHandler(gatewayUrl);\n        }\n        const canisterId = await canisterResolver.lookupFromHttpRequest(this.request);\n        // maybe check if its an asset\n        if (canisterId) {\n            const assetResponse = await this.assetRequestHandler(gatewayUrl, canisterId);\n            // assets are cached depending of the available cache headers\n            await responseCache.save({\n                request: this.request,\n                response: assetResponse.response,\n                certifiedResponseHeaders: assetResponse.certifiedHeaders,\n            });\n            return assetResponse.response;\n        }\n        // make sure that we don't make a request against the service worker's origin,\n        // else we'll end up in a service worker loading loop\n        if (this.url.hostname === self.location.hostname) {\n            return new Response(`${this.url.toString()} did not resolve to a canister ID.`, {\n                status: 404,\n                statusText: `${this.url.toString()} did not resolve to a canister ID.`,\n            });\n        }\n        return await this.directRequestHandler();\n    }\n    /**\n     * We refuse any request to /_/*\n     */\n    denyRequestHandler() {\n        return new Response(null, {\n            status: 404,\n            statusText: 'Requests to /_/* are not allowed',\n        });\n    }\n    /**\n     * We forward all requests to /api/ to the gateway, as is.\n     */\n    async apiRequestHandler(gatewayUrl) {\n        const cleanedRequest = await updateRequestApiGateway(this.request, gatewayUrl);\n        const response = await fetch(cleanedRequest);\n        // force the content-type to be cbor as /api/ is exclusively used for canister calls\n        const sanitizedHeaders = new Headers(response.headers);\n        sanitizedHeaders.set('X-Content-Type-Options', 'nosniff');\n        sanitizedHeaders.set('Content-Type', 'application/cbor');\n        return new Response(response.body, {\n            status: response.status,\n            statusText: response.statusText,\n            headers: sanitizedHeaders,\n        });\n    }\n    /**\n     * We perform asset certification for all ic asset requests.\n     */\n    async assetRequestHandler(gatewayUrl, canisterId) {\n        await loadResponseVerification();\n        const [agent, actor] = await createAgentAndActor(gatewayUrl, canisterId, shouldFetchRootKey);\n        const httpRequest = await createHttpRequest(this.request);\n        const agentResponse = await actor.http_request(httpRequest);\n        this._requestId = getBoundaryNodeRequestId(agentResponse.httpDetails);\n        const httpResponse = await agentResponse.result;\n        if (shouldUpgradeToUpdateCall(httpResponse)) {\n            const updateCallResult = await updateCallHandler(agent, actor, canisterId, httpRequest);\n            this._requestId = updateCallResult.boundaryNodeRequestId;\n            return updateCallResult.result;\n        }\n        return await queryCallHandler(agent, httpRequest, httpResponse, canisterId);\n    }\n    /**\n     * Last check. IF this is not an ic domain, then we simply let it load as is.\n     * An ic domain will always load using our service worker, and not an ic domain\n     * would load by reference. If you want security for your users at that point you\n     * should use SRI to make sure the resource matches.\n     */\n    async directRequestHandler() {\n        logger.info('Direct call ...');\n        // todo: Do we need to check for headers and certify the content here?\n        return await fetch(this.request);\n    }\n}\nexport * from './mapper';\nexport * from './typings';\n","import { decodeBody, filterResponseHeaders, streamBody } from '../response';\nimport { getBoundaryNodeRequestId } from './utils';\nexport function shouldUpgradeToUpdateCall(response) {\n    return response.upgrade.length === 1 && response.upgrade[0];\n}\nexport async function updateCallHandler(agent, actor, canisterId, httpRequest) {\n    const agentResponse = await actor.http_request_update({\n        url: httpRequest.url,\n        method: httpRequest.method,\n        body: httpRequest.body,\n        headers: httpRequest.headers,\n    });\n    const requestId = getBoundaryNodeRequestId(agentResponse.httpDetails);\n    const httpResponse = await agentResponse.result;\n    const streamedBody = await streamBody(agent, httpResponse, canisterId);\n    const decodedBody = decodeBody(streamedBody, httpResponse.headers);\n    const filteredResponseHeaders = filterResponseHeaders(httpResponse.headers);\n    return {\n        result: {\n            response: new Response(decodedBody, {\n                status: httpResponse.status_code,\n                headers: filteredResponseHeaders,\n            }),\n            // all headers are considered certified for update calls\n            certifiedHeaders: new Headers(httpResponse.headers),\n        },\n        boundaryNodeRequestId: requestId,\n    };\n}\n","// Module\nvar code = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n  <head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <title>Error</title>\\n    <meta name=\\\"theme-color\\\" content=\\\"rgb(241, 238, 245)\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\">\\n    <style>\\n      html {\\n        min-height: 100%;\\n      }\\n\\n      html,\\n      body {\\n        padding: 0;\\n        margin: 0;\\n      }\\n\\n      main {\\n        min-height: 100vh;\\n        align-items: center;\\n        text-align: center;\\n        font-size: 14px;\\n        box-sizing: border-box;\\n        font-family: sans-serif;\\n        font-style: normal;\\n        color: #1c1e21;\\n        display: flex;\\n        flex-flow: column nowrap;\\n        background: rgb(241, 238, 245);\\n        background: linear-gradient(\\n          180deg,\\n          rgba(241, 238, 245, 1) 68%,\\n          rgba(60, 1, 186, 0.17) 100%\\n        );\\n      }\\n\\n      .logo {\\n        margin: 32px 0;\\n      }\\n\\n      .banner {\\n        display: inline-block;\\n        width: calc(100% - 48px);\\n        margin: 0 16px;\\n        padding: 0.75rem;\\n        background-color: hsla(0, 0%, 100%, 0.2);\\n        border: transparent;\\n      }\\n\\n      .container {\\n        border-color: transparent;\\n        padding: 2rem;\\n        padding-bottom: 0;\\n        overflow: hidden;\\n        background-color: hsla(0, 0%, 100%, 0.8);\\n        border-radius: 8px;\\n        margin-bottom: 16px;\\n      }\\n\\n      .container hr {\\n        border: 1px solid #e5e3e9;\\n      }\\n\\n      h1 {\\n        font-size: 20px;\\n        line-height: 20px;\\n        margin-bottom: 20px;\\n      }\\n\\n      [role='doc-subtitle'] {\\n        margin-bottom: 1rem;\\n      }\\n\\n      button {\\n        cursor: pointer;\\n        background-color: transparent;\\n        border: none;\\n        display: inline-block;\\n      }\\n\\n      .collapsible-container {\\n        background-color: hsla(0, 0%, 100%, 0.8);\\n        border-radius: 8px;\\n      }\\n\\n      .collapsible-trigger {\\n        cursor: pointer;\\n        color: #1c1e21;\\n        padding: 16px 20px;\\n        box-sizing: border-box;\\n        width: 100%;\\n        text-align: left;\\n        font-weight: 700;\\n        display: flex;\\n        flex-direction: row;\\n        align-items: center;\\n      }\\n\\n      .collapsible-trigger:hover,\\n      .collapsible-trigger:active {\\n        background-color: transparent;\\n      }\\n\\n      .collapsible-trigger .chevron {\\n        transition: transform 0.2s;\\n      }\\n\\n      .collapsible-trigger.active .chevron {\\n        transform: rotate(180deg);\\n      }\\n\\n      .collapsible-trigger .clipboard {\\n        display: none;\\n      }\\n\\n      .collapsible-trigger.active .clipboard {\\n        display: block;\\n      }\\n\\n      .spacer {\\n        flex: 1;\\n      }\\n\\n      .collapsible-content {\\n        display: none;\\n        padding: 0 16px 20px;\\n      }\\n\\n      .collapsible-content.active {\\n        display: block;\\n      }\\n\\n      .copy-to-clipboard-feedback {\\n        display: none;\\n      }\\n\\n      .anchor {\\n        color: #7045cb;\\n        text-decoration: underline;\\n      }\\n\\n      button.reload-btn {\\n        margin: 0;\\n        padding: 0;\\n        font-size: 14px;\\n      }\\n\\n      textarea {\\n        box-sizing: border-box;\\n        width: 100%;\\n        resize: none;\\n        border: none;\\n        background-color: transparent;\\n      }\\n\\n      textarea:focus-visible {\\n        outline: none;\\n      }\\n    </style>\\n  </head>\\n  <body>\\n    <main>\\n      <svg class=\\\"logo\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"86.33\\\" height=\\\"74.33\\\" fill=\\\"none\\\" viewBox=\\\"0 0 259 223\\\">\\n        <g clip-path=\\\"url(#a)\\\">\\n          <path fill=\\\"url(#b)\\\" d=\\\"M188.498 0c-12.854 0-26.892 6.604-41.721 19.623-7.022 6.167-13.11 12.766-17.678 18.06.008.009.016.017.024.029a.245.245 0 0 1 .02-.024s7.206 7.86 15.136 16.274c4.269-5.082 10.436-12.018 17.527-18.24 13.182-11.578 21.792-14.005 26.692-14.005 18.49 0 33.531 14.693 33.531 32.75 0 17.957-15.049 32.638-33.555 32.75-.843 0-1.927-.104-3.262-.4 5.392 2.338 11.188 4.02 16.708 4.02 33.89 0 40.513-22.158 40.965-23.727a52.622 52.622 0 0 0 1.535-12.639C244.416 24.432 219.331 0 188.498 0Z\\\"/>\\n          <path fill=\\\"url(#c)\\\" d=\\\"M70.107 108.926c12.854 0 26.892-6.604 41.721-19.623 7.022-6.167 13.11-12.767 17.678-18.06a.174.174 0 0 1-.024-.029c-.012.016-.02.024-.02.024s-7.206-7.86-15.136-16.274c-4.269 5.081-10.436 12.017-17.527 18.24C83.617 84.783 75.007 87.21 70.107 87.21c-18.49 0-33.53-14.693-33.53-32.75 0-17.957 15.048-32.638 33.554-32.75.843 0 1.927.104 3.261.4-5.391-2.338-11.187-4.02-16.707-4.02-33.89 0-40.513 22.157-40.965 23.727a52.612 52.612 0 0 0-1.535 12.639c.004 30.039 25.09 54.471 55.922 54.471Z\\\"/>\\n          <path fill=\\\"#29ABE2\\\" d=\\\"M201.856 90.284c-17.351-.428-35.385-14.136-39.067-17.544-9.504-8.806-31.44-32.65-33.163-34.52C113.546 20.183 91.759 0 70.107 0h-.056c-26.32.132-48.44 17.989-54.323 41.824.452-1.57 9.097-24.148 40.937-23.363 17.351.429 35.473 14.32 39.15 17.729 9.506 8.806 31.449 32.654 33.164 34.524 16.08 18.033 37.867 38.212 59.519 38.212h.056c26.32-.132 48.44-17.989 54.323-41.824-.448 1.57-9.181 23.967-41.021 23.182Z\\\"/>\\n          <path fill=\\\"#000\\\" d=\\\"M7.405 170a1.5 1.5 0 0 0 1.5-1.5v-25.36a1.5 1.5 0 0 0-1.5-1.5h-2.6a1.5 1.5 0 0 0-1.5 1.5v25.36a1.5 1.5 0 0 0 1.5 1.5h2.6ZM47.432 170a1.5 1.5 0 0 0 1.5-1.5v-25.36a1.5 1.5 0 0 0-1.5-1.5h-2.52a1.5 1.5 0 0 0-1.5 1.5v17.26L32.2 142.575a2 2 0 0 0-1.693-.935h-4.275a1.5 1.5 0 0 0-1.5 1.5v25.36a1.5 1.5 0 0 0 1.5 1.5h2.52a1.5 1.5 0 0 0 1.5-1.5v-18.62l12.29 19.198a2.001 2.001 0 0 0 1.684.922h3.206ZM84.09 146.88a1.5 1.5 0 0 0 1.5-1.5v-2.24a1.5 1.5 0 0 0-1.5-1.5H63.61a1.5 1.5 0 0 0-1.5 1.5v2.24a1.5 1.5 0 0 0 1.5 1.5h7.46v21.62a1.5 1.5 0 0 0 1.5 1.5h2.56a1.5 1.5 0 0 0 1.5-1.5v-21.62h7.46ZM115.017 170a1.5 1.5 0 0 0 1.5-1.5v-2.2a1.5 1.5 0 0 0-1.5-1.5h-10.74v-6.56h9.58a1.5 1.5 0 0 0 1.5-1.5v-1.92a1.5 1.5 0 0 0-1.5-1.5h-9.58v-6.48h10.74a1.5 1.5 0 0 0 1.5-1.5v-2.2a1.5 1.5 0 0 0-1.5-1.5h-14.76a1.5 1.5 0 0 0-1.5 1.5v25.36a1.5 1.5 0 0 0 1.5 1.5h14.76ZM144.703 169.18a1.5 1.5 0 0 0 1.337.82h2.761a1.5 1.5 0 0 0 1.328-2.196l-4.928-9.404c3.72-1.08 6.04-4.08 6.04-8.04 0-4.92-3.52-8.72-9.04-8.72h-9.58a1.5 1.5 0 0 0-1.5 1.5v25.36a1.5 1.5 0 0 0 1.5 1.5h2.56a1.5 1.5 0 0 0 1.5-1.5v-9.42h2.88l5.142 10.1Zm-8.022-14.86v-7.88h4.48c2.8 0 4.44 1.56 4.44 3.96 0 2.32-1.64 3.92-4.44 3.92h-4.48ZM188.216 170a1.5 1.5 0 0 0 1.5-1.5v-25.36a1.5 1.5 0 0 0-1.5-1.5h-2.52a1.5 1.5 0 0 0-1.5 1.5v17.26l-11.212-17.825a2 2 0 0 0-1.693-.935h-4.275a1.5 1.5 0 0 0-1.5 1.5v25.36a1.5 1.5 0 0 0 1.5 1.5h2.52a1.5 1.5 0 0 0 1.5-1.5v-18.62l12.29 19.198a2 2 0 0 0 1.684.922h3.206ZM221.835 170a1.5 1.5 0 0 0 1.5-1.5v-2.2a1.5 1.5 0 0 0-1.5-1.5h-10.74v-6.56h9.58a1.5 1.5 0 0 0 1.5-1.5v-1.92a1.5 1.5 0 0 0-1.5-1.5h-9.58v-6.48h10.74a1.5 1.5 0 0 0 1.5-1.5v-2.2a1.5 1.5 0 0 0-1.5-1.5h-14.76a1.5 1.5 0 0 0-1.5 1.5v25.36a1.5 1.5 0 0 0 1.5 1.5h14.76ZM257.239 146.88a1.5 1.5 0 0 0 1.5-1.5v-2.24a1.5 1.5 0 0 0-1.5-1.5h-20.48a1.5 1.5 0 0 0-1.5 1.5v2.24a1.5 1.5 0 0 0 1.5 1.5h7.46v21.62a1.5 1.5 0 0 0 1.5 1.5h2.56a1.5 1.5 0 0 0 1.5-1.5v-21.62h7.46ZM14.52 222.6c7.146 0 11.166-4.256 12.694-8.281.284-.747-.174-1.541-.939-1.772l-2.34-.707c-.8-.242-1.633.225-2.006.974-1.111 2.235-3.416 4.386-7.409 4.386-4.56 0-8.8-3.32-8.8-9.36 0-6.44 4.48-9.48 8.72-9.48 4.02 0 6.225 2.004 7.268 4.221.367.782 1.228 1.279 2.052 1.02l2.342-.739c.753-.238 1.202-1.022.928-1.763-1.53-4.146-5.511-8.059-12.59-8.059-7.6 0-14.44 5.76-14.44 14.8 0 9.04 6.6 14.76 14.52 14.76ZM41.154 207.8c0-6.4 4.48-9.44 8.84-9.44 4.4 0 8.88 3.04 8.88 9.44 0 6.4-4.48 9.44-8.88 9.44-4.36 0-8.84-3.04-8.84-9.44Zm-5.72.04c0 9.12 6.88 14.76 14.56 14.76 7.72 0 14.6-5.64 14.6-14.76 0-9.16-6.88-14.8-14.6-14.8-7.68 0-14.56 5.64-14.56 14.8ZM104.876 222a1.5 1.5 0 0 0 1.5-1.5v-24.86a2 2 0 0 0-2-2h-4.174a2 2 0 0 0-1.852 1.247l-7.814 19.233-8.007-19.248a2 2 0 0 0-1.847-1.232h-3.946a2 2 0 0 0-2 2v24.86a1.5 1.5 0 0 0 1.5 1.5h2.28a1.5 1.5 0 0 0 1.5-1.5v-18.22l7.777 18.793a1.5 1.5 0 0 0 1.386.927h2.591a1.5 1.5 0 0 0 1.388-.931l7.778-18.949v18.38a1.5 1.5 0 0 0 1.5 1.5h2.44ZM123.777 206.56v-8.12h4.36c2.76 0 4.44 1.56 4.44 4.08 0 2.44-1.68 4.04-4.44 4.04h-4.36Zm5.041 4.76c5.6 0 9.319-3.68 9.319-8.84 0-5.12-3.719-8.84-9.319-8.84h-9.101a1.5 1.5 0 0 0-1.5 1.5v25.36a1.5 1.5 0 0 0 1.5 1.5h2.521a1.5 1.5 0 0 0 1.5-1.5v-9.18h5.08ZM158.276 222.64c6.08 0 10.92-3.72 10.92-10.68v-16.82a1.5 1.5 0 0 0-1.5-1.5h-2.52a1.5 1.5 0 0 0-1.5 1.5v16.42c0 3.72-2.04 5.68-5.4 5.68-3.28 0-5.36-1.96-5.36-5.68v-16.42a1.5 1.5 0 0 0-1.5-1.5h-2.52a1.5 1.5 0 0 0-1.5 1.5v16.82c0 6.96 4.84 10.68 10.88 10.68ZM200.105 198.88a1.5 1.5 0 0 0 1.5-1.5v-2.24a1.5 1.5 0 0 0-1.5-1.5h-20.48a1.5 1.5 0 0 0-1.5 1.5v2.24a1.5 1.5 0 0 0 1.5 1.5h7.46v21.62a1.5 1.5 0 0 0 1.5 1.5h2.56a1.5 1.5 0 0 0 1.5-1.5v-21.62h7.46ZM227.031 222a1.5 1.5 0 0 0 1.5-1.5v-2.2a1.5 1.5 0 0 0-1.5-1.5h-10.74v-6.56h9.58a1.5 1.5 0 0 0 1.5-1.5v-1.92a1.5 1.5 0 0 0-1.5-1.5h-9.58v-6.48h10.74a1.5 1.5 0 0 0 1.5-1.5v-2.2a1.5 1.5 0 0 0-1.5-1.5h-14.76a1.5 1.5 0 0 0-1.5 1.5v25.36a1.5 1.5 0 0 0 1.5 1.5h14.76ZM252.717 221.18a1.5 1.5 0 0 0 1.337.82h2.761a1.5 1.5 0 0 0 1.328-2.196l-4.928-9.404c3.72-1.08 6.04-4.08 6.04-8.04 0-4.92-3.52-8.72-9.04-8.72h-11.08v26.86a1.5 1.5 0 0 0 1.5 1.5h2.56a1.5 1.5 0 0 0 1.5-1.5v-9.42h2.88l5.142 10.1Zm-8.022-14.86v-7.88h4.48c2.8 0 4.44 1.56 4.44 3.96 0 2.32-1.64 3.92-4.44 3.92h-4.48Z\\\"/>\\n        </g>\\n        <defs>\\n          <linearGradient id=\\\"b\\\" x1=\\\"159.39\\\" x2=\\\"235.567\\\" y1=\\\"7.182\\\" y2=\\\"85.915\\\" gradientUnits=\\\"userSpaceOnUse\\\">\\n            <stop offset=\\\".21\\\" stop-color=\\\"#F15A24\\\"/>\\n            <stop offset=\\\".684\\\" stop-color=\\\"#FBB03B\\\"/>\\n          </linearGradient>\\n          <linearGradient id=\\\"c\\\" x1=\\\"99.215\\\" x2=\\\"23.038\\\" y1=\\\"101.744\\\" y2=\\\"23.01\\\" gradientUnits=\\\"userSpaceOnUse\\\">\\n            <stop offset=\\\".21\\\" stop-color=\\\"#ED1E79\\\"/>\\n            <stop offset=\\\".893\\\" stop-color=\\\"#522785\\\"/>\\n          </linearGradient>\\n          <clipPath id=\\\"a\\\">\\n            <path fill=\\\"#fff\\\" d=\\\"M0 0h259v223H0z\\\"/>\\n          </clipPath>\\n        </defs>\\n      </svg>\\n      <div class=\\\"banner\\\">\\n        <div class=\\\"container\\\">\\n          <h1>Page failed to load.</h1>\\n          <!--{{content}}-->\\n\\n          <!--{{afterContent}}-->\\n        </div>\\n\\n        <!--{{extraDetailsContent}}-->\\n      </div>\\n    </main>\\n\\n    <\" + \"script>\\n      function isSafari() {\\n        return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\\n      }\\n\\n      async function reloadServiceWorker() {\\n        const worker = navigator.serviceWorker.controller;\\n        const shouldReloadFromServiceWorker = !isSafari();\\n\\n        if (worker) {\\n          worker.postMessage({\\n            action: 'ResetServiceWorker',\\n            data: { reloadFromWorker: shouldReloadFromServiceWorker },\\n          });\\n\\n          if (!shouldReloadFromServiceWorker) {\\n            // give the service worker a chance to uninstall itself before reloading\\n            setTimeout(() => window.location.reload(), 250);\\n          }\\n\\n          return;\\n        }\\n\\n        window.location.reload();\\n      }\\n\\n      document.addEventListener('DOMContentLoaded', () => {\\n        const collapsibleTrigger = document.querySelector(\\n          '.collapsible-trigger'\\n        );\\n        const collapsibleContent = document.querySelector(\\n          '.collapsible-content'\\n        );\\n        const textArea = document.querySelector('textarea');\\n\\n        collapsibleTrigger.addEventListener('click', () => {\\n          collapsibleTrigger.classList.toggle('active');\\n          collapsibleContent.classList.toggle('active');\\n          textArea.style.height = `${textArea.scrollHeight + 1}px`;\\n        });\\n\\n        const copyToClipboard = document.querySelector('.copy-to-clipboard');\\n        const copyToClipboardFeedback = document.querySelector(\\n          '.copy-to-clipboard-feedback'\\n        );\\n        copyToClipboard.addEventListener('click', (event) => {\\n          event.stopPropagation();\\n\\n          textArea.select();\\n          textArea.setSelectionRange(0, 99999); // For mobile devices\\n          navigator.clipboard.writeText(textArea.value);\\n\\n          copyToClipboardFeedback.style.display = 'block';\\n          setTimeout(() => {\\n            copyToClipboardFeedback.style.display = 'none';\\n          }, 3000);\\n        });\\n      });\\n    <\" + \"/script>\\n  </body>\\n</html>\\n\";\n// Exports\nexport default code;","import errorPageHtml from 'html-loader?{\"minimize\":{\"removeComments\":false}}!./error.html';\nimport logger from '../../logger';\nimport { responseVerificationFailedResponse } from '../requests';\nconst format = (obj) => JSON.stringify(obj, null, 2);\nconst genericMsg = (msg) => `\n<div role=\"doc-subtitle\">\n  ${msg}\n</div>\n`;\nconst couldNotConnectMsg = `\n<div role=\"doc-subtitle\">\n  <p>\n    There was an issue connecting to the Internet Computer network.\n    <br />\n    Please check your Internet connection and try again.  \n  </p>\n</div>\n`;\nconst reloadServiceWorkerSection = `\n<hr />\n<p>\n  Click\n  <button\n    class=\"anchor reload-btn\"\n    href=\"#\"\n    onclick=\"this.disabled=true;reloadServiceWorker()\"\n  >\n    here\n  </button>\n  to reload the page, if this issue persists, please feel free to reach out on\n  <a\n    href=\"https://forum.dfinity.org/\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    class=\"anchor\"\n  >the Internet Computer forum</a>.\n</p>\n`;\nconst getDisplayMessage = (err) => {\n    if (err instanceof TypeError) {\n        return couldNotConnectMsg;\n    }\n    return genericMsg(String(err));\n};\nconst chevron = '<svg class=\"chevron\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.5 7.75L10.25 13L5 7.75\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>';\nconst clipboard = '<svg class=\"clipboard\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.75 3C5.23207 3 4 4.22862 4 5.74826V14.75H5.5V5.74826C5.5 5.05875 6.05879 4.5 6.75 4.5H12.75V3H6.75ZM8.75 7.25H13.75C14.0261 7.25 14.25 7.47386 14.25 7.75V15.75C14.25 16.0261 14.0261 16.25 13.75 16.25H8.75C8.47386 16.25 8.25 16.0261 8.25 15.75V7.75C8.25 7.47386 8.47386 7.25 8.75 7.25ZM6.75 7.75C6.75 6.64543 7.64543 5.75 8.75 5.75H13.75C14.8546 5.75 15.75 6.64543 15.75 7.75V15.75C15.75 16.8546 14.8546 17.75 13.75 17.75H8.75C7.64543 17.75 6.75 16.8546 6.75 15.75V7.75Z\" fill=\"currentColor\"></path></svg>';\nconst collapsibleContent = (title, msg) => `\n<div class=\"collapsible-container\">\n  <div class=\"collapsible-trigger\" title=\"Show error details\" aria-label=\"Show error details\">\n    ${title}\n\n    <button\n      type=\"button\"\n      class=\"copy-to-clipboard\"\n      title=\"Copy to clipboard\"\n      aria-label=\"Copy to clipboard\"\n    >${clipboard}</button>\n\n    <span class=\"copy-to-clipboard-feedback\">Copied!</span>\n\n    <span class=\"spacer\"></span>\n\n    ${chevron}\n  </div>\n\n  <div class=\"collapsible-content\">\n    ${msg}\n\n  </div>\n</div>\n`;\nconst getErrorDetails = async (props) => {\n    let errorDetails = '<textarea readonly>';\n    errorDetails += 'Timestamp: ' + new Date().toUTCString();\n    if (props.requestId) {\n        errorDetails += '\\nRequest-ID: ' + props.requestId;\n    }\n    errorDetails +=\n        '\\n\\nRequest: ' +\n            format({\n                method: props.request.method,\n                url: props.request.url,\n                origin: location.origin,\n            });\n    if (props.response) {\n        errorDetails +=\n            '\\n\\nResponse: ' +\n                format({\n                    status: props.response.status,\n                    statusText: props.response.statusText,\n                    body: await props.response.text(),\n                });\n    }\n    errorDetails += '</textarea>';\n    return collapsibleContent('Error details', errorDetails);\n};\nconst logProps = (props) => {\n    logger.error('Error', props.error);\n    logger.error('Request', props.request);\n    if (props.requestId) {\n        logger.error('RequestID', props.requestId);\n    }\n    if (props.response) {\n        logger.error('Response', props.response);\n    }\n};\nconst afterContentSection = (props) => {\n    if (!props.response) {\n        return reloadServiceWorkerSection;\n    }\n    if (props.response.status !== responseVerificationFailedResponse.status &&\n        props.response.statusText !== responseVerificationFailedResponse.statusText) {\n        return reloadServiceWorkerSection;\n    }\n    return '';\n};\nexport const handleErrorResponse = async (props) => {\n    logProps(props);\n    if (props.isNavigation) {\n        const displayMessage = getDisplayMessage(props.error);\n        const extraDetails = await getErrorDetails(props);\n        const afterContent = afterContentSection(props);\n        return new Response(errorPageHtml\n            .replace('<!--{{content}}-->', displayMessage)\n            .replace('<!--{{afterContent}}-->', afterContent)\n            .replace('<!--{{extraDetailsContent}}-->', extraDetails), {\n            status: 502,\n            headers: {\n                'content-type': 'text/html',\n            },\n        });\n    }\n    const errorMessage = String(props.error);\n    return new Response(errorMessage, {\n        status: 502,\n        statusText: errorMessage,\n    });\n};\n","import { AgentHTTPResponseError } from '@dfinity/agent/lib/cjs/agent/http/errors';\nimport { ServiceWorkerEvents } from '../typings';\nimport { CanisterResolver } from './domains';\nimport { RequestProcessor } from './requests';\nimport { getBoundaryNodeRequestId, loadResponseVerification, reloadServiceWorkerClients, uninstallServiceWorker, } from './requests/utils';\nimport { handleErrorResponse } from './views/error';\n// Always install updated SW immediately\nself.addEventListener('install', (event) => {\n    event.waitUntil(loadResponseVerification().then(() => self.skipWaiting()));\n});\nself.addEventListener('activate', (event) => {\n    // upon activation take control of all clients (tabs & windows)\n    event.waitUntil(self.clients.claim());\n});\n// Intercept and proxy all fetch requests made by the browser or DOM on this scope.\nself.addEventListener('fetch', (event) => {\n    event.respondWith((async () => {\n        var _a;\n        const isNavigation = event.request.mode === 'navigate';\n        const request = new RequestProcessor(event.request);\n        try {\n            const response = await request.perform();\n            if (response.status >= 400) {\n                return handleErrorResponse({\n                    isNavigation,\n                    requestId: request.requestId,\n                    error: (_a = response.statusText) !== null && _a !== void 0 ? _a : (await response.text()),\n                    request: event.request,\n                    response,\n                });\n            }\n            return response;\n        }\n        catch (error) {\n            let requestId = request.requestId;\n            if (error instanceof AgentHTTPResponseError) {\n                requestId = getBoundaryNodeRequestId(error.response);\n            }\n            return await handleErrorResponse({\n                isNavigation,\n                requestId,\n                error,\n                request: event.request,\n            });\n        }\n    })());\n});\n// handle events from the client messages\nself.addEventListener('message', async (event) => {\n    const body = event.data;\n    switch (body === null || body === void 0 ? void 0 : body.action) {\n        case ServiceWorkerEvents.SaveICHostInfo: {\n            const resolver = await CanisterResolver.setup();\n            await resolver.saveICHostInfo(body.data);\n            break;\n        }\n        case ServiceWorkerEvents.ResetServiceWorker: {\n            await uninstallServiceWorker();\n            if (body.data.reloadFromWorker) {\n                await reloadServiceWorkerClients();\n            }\n            break;\n        }\n    }\n});\n"],"names":["exports","AgentHTTPResponseError","Error","constructor","message","response","super","this","name","Object","setPrototypeOf","prototype","request","async","options","canisterId","agent","paths","uniquePaths","Set","encodedPaths","map","path","encodePath","status","Map","promises","index","_a","readState","data","create","certificate","rootKey","lookup","set","decodeTime","decodeControllers","decodeHex","TextDecoder","decode","decodeStrategy","key","decodeLeb128","decodeCbor","decodeUtf8","console","warn","error","includes","group","groupEnd","Promise","all","encoder","TextEncoder","encode","arg","DataView","buffer","canisterBuffer","toUint8Array","ArrayBuffer","metaPath","encoded","buf","decoded","Date","Number","BigInt","tag","controllersRaw","fromUint8Array","Uint8Array","serializer","SelfDescribeCborSerializer","withDefaultEncoders","CborTag","value","serialize","decodePositiveBigInt","len","byteLength","res","i","addEncoder","priority","match","_isPrincipal","v","bytes","isView","tagged","toString","Uint8ArrayDecoder","createByteString","raw","createByteStringFromHeap","start","end","_heap","slice","input","size","tags","val","Semantic","decodeFirst","CertificateVerificationError","reason","isBufferEqual","a","b","a8","b8","length","Certificate","_rootKey","_canisterId","_blsVerify","cert","blsVerify","verify","lookup_path","tree","rootHash","reconstruct","derKey","_checkDelegationAndGetKey","delegation","sig","signature","expectedLength","DER_PREFIX","KEY_LENGTH","TypeError","prefix","extractDER","msg","domain_sep","sigVer","err","d","rangeLookup","subnet_id","some","r","ltEq","gtEq","publicKeyLookup","t","s","str","l","trees","find_label","flatten_forks","concat","AgentError","hash","update","digest","hashValue","hashString","Array","isArray","vals","toHash","assign","requestIdOf","sorted","entries","filter","undefined","sort","k1","k2","x","wasm","wasmBytes","cachegetUint8Memory0","passArray8ToWasm0","malloc","ptr","memory","init","instance","module","imports","Response","arrayBuffer","WebAssembly","instantiate","Instance","load","__wbindgen_wasm_module","pk","bls_init","pk1","sig1","msg1","m","w","ptr0","len0","__wbindgen_malloc","ptr1","len1","ptr2","len2","bls_verify","buffers","result","reduce","acc","curr","toHex","padStart","join","hexRe","RegExp","fromHex","hex","test","parseInt","compare","b1","b2","u1","u2","uint8ToBuf","arr","byteOffset","chars","charCodeAt","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","p","arraybuffer","PipeArrayBuffer","_buffer","_view","read","num","subarray","readUint8","write","offset","alloc","amount","idlLabelToId","label","isSafeInteger","array","h","c","idlHash","eob","safeRead","pipe","safeReadUint8","byte","lebEncode","Math","ceil","log2","lebDecode","weight","valueOf","slebEncode","isNeg","getLowerBytes","slebDecode","pipeView","writeIntLE","min","mul","sub","readUIntLE","iexp2","n","nBig","RangeError","magicNumber","zipWith","xs","ys","f","TypeTable","_typs","_idx","has","obj","add","type","idx","push","merge","knot","get","knotIdx","splice","delete","indexOf","typeName","Visitor","visitType","visitPrimitive","visitEmpty","visitBool","visitNull","visitReserved","visitText","visitNumber","visitInt","visitNat","visitFloat","visitFixedInt","visitFixedNat","visitPrincipal","visitConstruct","visitVec","ty","visitOpt","visitRecord","fields","visitTuple","components","visitVariant","visitRec","visitFunc","visitService","Type","display","valueToString","toReadableString","buildTypeTable","typeTable","_buildTypeTableImpl","PrimitiveType","checkType","ConstructType","RecClass","getType","encodeType","EmptyClass","accept","covariant","encodeValue","decodeValue","UnknownClass","typeFunc","decodedValue","defineProperty","writable","enumerable","configurable","BoolClass","NullClass","ReservedClass","TextClass","fatal","IntClass","isInteger","NatClass","FloatClass","_bits","view","setFloat32","setFloat64","getFloat32","getFloat64","FixedIntClass","max","ok","readIntLE","FixedNatClass","writeUIntLE","VecClass","_type","_blobOptimization","bits","BYTES_PER_ELEMENT","every","e","opCode","vec","Uint16Array","Uint32Array","BigUint64Array","Int8Array","Int16Array","Int32Array","BigInt64Array","rets","OptClass","opt","RecordClass","_fields","tryAsTuple","k","hasOwnProperty","values","T","forEach","_","record","expectedRecordIdx","actualRecordIdx","expectKey","expectType","expectedId","actualId","TupleClass","_components","tuple","wireType","VariantClass","variant","wireHash","arguments","_id","_counter","fill","decodePrincipalId","PrincipalClass","toText","FuncClass","argTypes","retTypes","annotations","argsToString","types","principal","methodName","canister","method","methodLen","argLen","args","retLen","annLen","anns","encodeAnnotation","ann","ServiceClass","func","meths","labelBuf","JSON","stringify","_key","substring","toReadableString_max","magic","table","typs","magicBuffer","rawTable","rawTypes","prevHash","objectLength","pow","argLength","returnValues","returnValuesLength","annotationLength","servLength","methods","nameLength","funcName","funcType","rawList","readTypeTable","Rec","Null","Bool","Nat","Int","Nat8","Nat16","Nat32","Nat64","Int8","Int16","Int32","Int64","Float32","Float64","Text","Reserved","Empty","Principal","buildType","entry","Vec","Opt","Record","Tuple","Variant","Func","rec","typeRef","Service","output","ind","Unknown","ret","alphabet","lookupTable","o","lookUpTable","_arr","anonymous","managementCanister","selfAuthenticating","publicKey","sha","from","other","fromText","text","skip","decodeChar","char","toLowerCase","replace","isAnonymous","toUpperCase","checksumArrayBuf","setUint32","crc","getCrc32","checksum","matches","compareTo","cmp","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","revLookup","fromByteArray","uint8","extraBytes","parts","maxChunkLength","encodeChunk","code","globalObject","BigNumber","isNumeric","mathceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","bitFloor","coeffToString","z","j","y","xc","yc","intCheck","String","isOdd","toExponential","charAt","toFixedPoint","zs","clone","configObject","div","convertBase","parseNumeric","pow2_53","random53bitInt","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","P","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabetHasNormalDecimalDigits","caseChanged","isNum","_isBigNumber","search","round","DEBUG","format","rm","id","c0","ne","maxOrMin","call","normalise","pop","sd","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","lt","minimum","gt","random","dp","rand","copy","sum","plus","decimal","toBaseOut","baseIn","baseOut","arrL","reverse","sign","callerIsToString","multiply","base","temp","xlo","xhi","carry","klo","khi","aL","bL","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","isNaN","p1","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","mod","times","integerValue","isEqualTo","eq","isFinite","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","minus","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","split","g1","g2","intPart","fractionPart","intDigits","substr","toFraction","md","d0","d1","d2","exp","n0","n1","toNumber","toPrecision","toJSON","Bignumber","MT","POS_INT","NEG_INT","BYTE_STRING","UTF8_STRING","ARRAY","MAP","TAG","SIMPLE_FLOAT","DATE_STRING","DATE_EPOCH","POS_BIGINT","NEG_BIGINT","DECIMAL_FRAC","BIGFLOAT","BASE64URL_EXPECTED","BASE64_EXPECTED","BASE16_EXPECTED","CBOR","URI","BASE64URL","BASE64","REGEXP","MIME","NUMBYTES","ZERO","TWO","FOUR","EIGHT","INDEFINITE","SIMPLE","FALSE","TRUE","NULL","UNDEFINED","SYMS","Symbol","PARENT","BREAK","STREAM","SHIFT32","SHIFT16","MAX_SAFE_HIGH","NEG_ONE","TEN","OBJECT","stdlib","foreign","heap","pushInt","pushInt32","pushInt32Neg","pushInt64","pushInt64Neg","pushFloat","pushFloatSingle","pushFloatDouble","pushTrue","pushFalse","pushUndefined","pushNull","pushInfinity","pushInfinityNeg","pushNaN","pushNaNNeg","pushArrayStart","pushArrayStartFixed","pushArrayStartFixed32","pushArrayStartFixed64","pushObjectStart","pushObjectStartFixed","pushObjectStartFixed32","pushObjectStartFixed64","pushByteString","pushByteStringStart","pushUtf8String","pushUtf8StringStart","pushSimpleUnassigned","pushTagStart","pushTagStart4","pushTagStart8","pushTagUnassigned","pushBreak","inputLength","parse","jumpTable","checkOffset","readUInt16","readUInt32","INT_P","octet","UINT_P_8","UINT_P_16","UINT_P_32","UINT_P_64","INT_N","UINT_N_8","UINT_N_16","UINT_N_32","UINT_N_64","step","BYTE_STRING_8","BYTE_STRING_16","BYTE_STRING_32","BYTE_STRING_64","BYTE_STRING_BREAK","UTF8_STRING_8","UTF8_STRING_16","UTF8_STRING_32","UTF8_STRING_64","UTF8_STRING_BREAK","ARRAY_8","ARRAY_16","ARRAY_32","ARRAY_64","ARRAY_BREAK","MAP_8","MAP_16","MAP_32","MAP_64","MAP_BREAK","TAG_KNOWN","TAG_BIGNUM_POS","TAG_BIGNUM_NEG","TAG_FRAC","TAG_BIGNUM_FLOAT","TAG_UNASSIGNED","TAG_BASE64_URL","TAG_BASE64","TAG_BASE16","TAG_MORE_1","TAG_MORE_2","TAG_MORE_4","TAG_MORE_8","SIMPLE_UNASSIGNED","SIMPLE_FALSE","SIMPLE_TRUE","SIMPLE_NULL","SIMPLE_UNDEFINED","SIMPLE_BYTE","SIMPLE_FLOAT_HALF","g","mant","SIMPLE_FLOAT_SINGLE","SIMPLE_FLOAT_DOUBLE","ERROR","Buffer","ieee754","parser","utils","Simple","Tagged","URL","Decoder","opts","nextPowerOf2","_heap8","_reset","_knownTags","arrayBufferToBignumber","log","bind","_depth","_parents","_currentParent","_ref","ref","_closeParent","_push","createTag","createUtf8String","createMap","createObject","createArray","_dec","hasChildren","tmpKey","buildMap","_createParent","_res","tagNumber","typ","createInt","createInt32","buildInt32","createInt64","f1","f2","buildInt64","createFloat","createFloatSingle","createFloatDouble","createInt32Neg","createInt64Neg","createTrue","createFalse","createNull","createUndefined","createInfinity","Infinity","createInfinityNeg","createNaN","createNaNNeg","createUtf8StringFromHeap","createSimpleUnassigned","_createArrayStartFixed","len3","len4","_createObjectStartFixed","_decode","decodeAll","enc","Diagnose","fl","isNegativeZero","list","keys","collectObject","diagnose","constants","HALF","FLOAT","DOUBLE","MAXINT_BN","BUF_NAN","BUF_INF_NEG","BUF_INF_POS","Encoder","streaming","stream","onData","semanticTypes","_pushUrl","_pushBigNumber","addTypes","genTypes","addSemanticType","fun","old","resultMethod","resultLength","finalize","pushWrite","_pushUInt8","_pushUInt16BE","_pushUInt32BE","_pushDoubleBE","_pushNaN","_pushInfinity","_pushFloat","allocUnsafe","writeHalf","parseHalf","b4","writeFloatBE","readFloatBE","_pushInt","mt","orig","_pushIntNum","_pushNumber","_pushString","_pushBoolean","_pushUndefined","_pushArray","gen","pushAny","_pushTag","_pushDate","_pushBuffer","_pushNoFilter","_pushRegexp","source","_pushSet","_pushBigint","dec","slide","_pushMap","_pushRawMap","_pushObject","encodeCBOR","keyLength","keySorter","toType","isBuffer","writeUInt8","writeUInt16BE","writeUInt32BE","writeDoubleBE","inspect","isSimple","hasParent","convert","converters","er","u32","u","readUInt32BE","s16","lenA","lenB","count","customInspectSymbol","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","encodingOrOffset","string","encoding","isEncoding","actual","fromString","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","checked","numberIsNaN","fromObject","toPrimitive","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","poolSize","allocUnsafeSlow","_isBuffer","pos","swap16","swap32","swap64","toLocaleString","equals","trim","target","thisStart","thisEnd","thisCopy","targetCopy","hexSliceLookupTable","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUintLE","readUintBE","readUIntBE","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readDoubleLE","readDoubleBE","writeUintLE","writeUintBE","writeUIntBE","writeUint8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUint32LE","writeUInt32LE","writeUint32BE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeDoubleLE","targetStart","copyWithin","INVALID_BASE64_RE","leadSurrogate","base64clean","src","dst","i16","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","URLWithLegacySupport","URLSearchParams","defaultBase","relative","url","location","protocolMap","defaultProtocol","urlParsed","protocol","host","self","pathname","auth","username","password","query","startsWith","hostname","href","origin","port","searchParams","createObjectURL","revokeObjectURL","userPass","__importStar","__esModule","__export","cbor","BufferClasses","Float32Array","Float64Array","JsonDefaultCborEncoder","_serializer","_stable","undefined_","bool","number","doubleFloat","null_","serializeValue","find","getOwnPropertyNames","item","ToCborEncoder","toCBOR","CborSerializer","_encoders","stable","removeEncoder","getEncoderFor","chosenEncoder","MAX_U64_NUMBER","_concat","newBuffer","_serializeValue","major","minor","_serializeNumber","_serializeString","utf8","charcode","uSmall","u8","radix","u16","u64","iSmall","i8","i32","i64","done","newI64","reduceRight","true_","false_","items","keyA","keyB","localeCompare","singleFloat","single","lengths","outputLen","blockLen","exists","checkFinished","destroyed","finished","u8a","globalThis","createView","rotr","word","shift","toBytes","Hash","_cloneInto","wrapConstructor","hashCons","hashC","SHA2","padOffset","take","process","dataView","roundClean","digestInto","setBigUint64","_32n","_u32_max","wh","wl","oview","outLen","state","destroy","to","Maj","SHA256_K","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","getUint32","W15","W2","s0","s1","T1","T2","SHA224","sha256","sha224","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","Function","window","prop","toStringTag","ServiceWorkerEvents","ReplicaRejectCode","AnonymousIdentity","getPrincipal","transformRequest","body","content","randomNumber","randomInt","SubmitRequestType","makeNonce","rand1","rand2","rand3","rand4","NANOSECONDS_PER_MILLISECONDS","REPLICA_PERMITTED_DRIFT_MILLISECONDS","Expiry","deltaInMSec","_value","now","httpHeadersTransform","headers","headerFields","RequestStatusResponseStatus","DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS","HttpDefaultFetchError","IdentityInvalidError","_pipeline","_timeDiffMsecs","_rootKeyFetched","_isAgent","_identity","_fetch","_host","_credentials","fetch","defaultFetch","getDefaultFetch","_fetchOptions","fetchOptions","_callOptions","callOptions","_retryTimes","retryTimes","endsWith","credentials","resolve","identity","disableNonce","addTransform","nonceFn","endpoint","nonce","makeNonceTransform","isLocal","fn","findIndex","ecid","effectiveCanisterId","sender","ingress_expiry","submit","request_type","Call","canister_id","method_name","transformedRequest","_transform","Authorization","btoa","_requestAndRetry","requestId","responseBuffer","responseBody","statusText","tries","responseText","errorMessage","queryResponse","httpDetails","createReadStateRequest","syncTime","CanisterStatus","callTime","replicaTime","fetchRootKey","root_key","invalidateIdentity","replaceIdentity","then","r2","ProxyMessageKind","getDefaultAgent","ic","pollForResponse","strategy","currentRequest","maybeBuf","Replied","Received","Processing","Rejected","rejectCode","rejectMessage","Done","IDL","definite_canister_settings","controllers","freezing_threshold","memory_allocation","compute_allocation","canister_settings","wasm_module","canister_status","stopped","stopping","running","memory_size","cycles","settings","module_hash","create_canister","delete_canister","deposit_cycles","install_code","mode","reinstall","upgrade","install","provisional_create_canister_with_cycles","provisional_top_up_canister","raw_rand","start_canister","stop_canister","uninstall_code","update_settings","ActorCallError","props","QueryCallRejectedError","Status","Code","reject_code","Message","reject_message","UpdateCallRejectedError","error_code","CanisterInstallMode","metadataSymbol","for","metadata","freeze","agentOf","actor","interfaceOf","service","canisterIdOf","Install","wasmModule","getManagementCanister","createCanister","createAndInstallCanister","interfaceFactory","createActor","createActorClass","DEFAULT_ACTOR_CONFIG","ACTOR_METHOD_WITH_HTTP_DETAILS","_createActorMethod","configuration","createActorWithHttpDetails","decodeReturnValue","pollingStrategyFactory","strategies","chain","condition","first","once","setTimeout","startingThrottleInMsec","backoffFactor","currentThrottling","backoff","timeInMsec","timeout","caller","_b","queryTransform","cid","reply","callTransform","pollStrategy","responseBytes","shouldIncludeHttpDetails","handler","withOptions","transform","_methodName","_callConfig","getObject","heap_next","takeObject","dropObject","WASM_VECTOR_LEN","cachedUint8Memory0","getUint8Memory0","cachedTextEncoder","encodeString","encodeInto","written","passStringToWasm0","realloc","mem","isLikeNone","cachedInt32Memory0","getInt32Memory0","addHeapObject","cachedTextDecoder","ignoreBOM","getStringFromWasm0","cachedFloat64Memory0","debugString","description","debug","builtInMatches","exec","className","stack","MalformedUrl","IoError","Utf8ConversionError","UnsupportedVerificationVersion","RequestedVerificationVersionMismatch","CelError","Base64DecodingError","ParseIntError","InvalidTree","InvalidExpressionPath","InvalidResponseBody","InvalidResponseHashes","MissingCertificate","MissingTree","MissingCertificateExpressionPath","MissingCertificateExpression","MissingCertification","CborDecodingFailed","CertificateVerificationFailed","ResponseVerificationError","__wrap","__wbg_ptr","__destroy_into_raw","free","__wbg_responseverificationerror_free","__wbg_get_responseverificationerror_code","deferred1_0","deferred1_1","retptr","__wbindgen_add_to_stack_pointer","__wbg_get_responseverificationerror_message","r0","r1","__wbindgen_free","__wbg_get_imports","wbg","__wbg_log_53ed96ea72ace5e9","arg0","arg1","__wbg_error_93b671ae91baaee7","__wbg_warn_52c5b3e773c3a056","__wbg_new_abda76e883ba8a5f","__wbg_stack_658279fe44541cf6","__wbindgen_realloc","__wbg_error_f851667af71bcfc6","deferred0_0","deferred0_1","__wbindgen_object_drop_ref","__wbindgen_string_get","__wbindgen_number_new","__wbindgen_string_new","__wbindgen_number_get","__wbg_responseverificationerror_new","__wbg_length_fff51ee6522a1a18","__wbg_new_898a68150f225f2e","__wbg_get_44be0491f933a435","__wbg_of_195c986fbfdd6637","of","__wbg_of_3f69007bb4eeae65","arg2","__wbg_push_ca1c26067ef907ac","__wbg_entries_e51f29c7bba0c054","__wbg_fromEntries_46475be008d7104f","fromEntries","__wbindgen_exn_store","handleError","__wbg_is_205d914af04a8faa","is","__wbg_buffer_085ec1f694018c4f","__wbg_newwithbyteoffsetandlength_6da8e527659b86aa","__wbg_new_8125e318e6245eed","__wbg_length_72e2208bbc0efc61","__wbg_set_5cf90238115182c3","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_memory","__wbg_init","Request","instantiateStreaming","__wbg_load","__wbindgen_start","__wbg_finalize_init","Token","streamingCallbackHttpResponseType","token","idlFactory","HeaderField","HttpRequest","certificate_version","StreamingStrategy","Callback","callback","HttpResponse","streaming_strategy","status_code","HttpUpdateRequest","http_request","http_request_update","HTTPHeaders","cacheHeaders","CacheControl","responseVerificationFailedResponse","HTTPRequestMethod","RequestCacheControlDirectives","ResponseCacheControlDirectives","shouldFetchRootKey","Boolean","isMainNet","getBoundaryNodeRequestId","BoundaryNodeRequestId","responseVerificationWasm","loadingResponseVerificationWasm","loadResponseVerification","info","instanceOfAny","object","constructors","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","transformCachableValue","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","unwrap","storeNames","tx","reject","unlisten","removeEventListener","complete","DOMException","addEventListener","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","promise","success","catch","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","store","oldTraps","TTL_INDEX_NAME","TTL_INDEX_KEY_PATH","Storage","idb","defaultStore","db","connect","version","stores","onTerminated","blocked","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","openDB","database","_newVersion","createStore","createIndex","contains","createObjectStore","onversionchange","close","default","storage","removeOutdatedRecords","disconnect","remove","deleteDatabase","deleteDB","expireAt","getAll","put","ttl","getTime","storeValue","clear","entriesUntil","IDBKeyRange","upperBound","removeOperations","getAllKeysFromIndex","expiredKey","MalformedCanisterError","ResolverMapper","fromDBHostsItem","toDBHostsItem","toHTTPSUrl","secureDomain","getPrincipalFromText","toDBHostsItemFromEvent","logger","DEFAULT_GATEWAY","hostnameCanisterIdMap","DomainStorageStores","AcceptedLookupUrlProtocol","acceptedLookupUrlProtocols","domainLookupHeaders","domainStorageProperties","Hosts","apiGateways","isRawDomain","mainNet","isIcAppRaw","isIcDevRaw","isIcpIoRaw","isTestnetRaw","maybeResolveCanisterFromHostName","subdomains","domain","CanisterResolver","inflight","setup","storageConnection","saveICHostInfo","getCurrentGateway","getRootDomain","hostnameParts","rootDomainParts","part","resolveLookupFromUrl","lookupFromHttpRequest","maybeHostHeader","maybeResolveCanisterFromHeaders","inflightLookup","lookupFromUrl","cachedLookup","fetchDomain","dbHostItem","isAPICall","gatewayUrl","isGatewayCall","isUnderscoreRawCall","apiGateway","retries","CacheStorageStores","cacheStorageProperties","Assets","CacheStorageNames","supportedRequestDestinations","CacheMapper","toRequestKey","varyHeader","Vary","ignoreVary","rawVaryHeaders","ignoreMethod","ignoreSearch","toRequestKeyHash","requestKey","algorithm","hashBuffer","subtle","toDBRequestMetadata","fromRequestToCacheName","destination","Audio","Video","Script","Style","Image","Font","Other","ResponseCache","cache","cacheDB","requestKeyHash","cacheControl","RequestMapper","toRequestCacheControlHeader","noCache","isRequestCachingSupported","isSupportedDestination","isSupportedMethod","Get","isRangeRequest","Range","shouldCacheResponse","responseHeaders","Headers","requestCacheControl","noStore","responseCacheControl","toResponseCacheControlHeader","maxAge","save","certifiedResponseHeaders","cacheTTL","cacheName","caches","zero$1","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","D_CODES$1","_dist_code","_length_code","MAX_MATCH$1","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","pending_buf","pending","send_bits","bi_valid","bi_buf","send_code","bi_reverse","gen_codes","bl_count","next_code","MAX_BITS$1","init_block","LITERALS$1","dyn_ltree","dyn_dtree","bl_tree","END_BLOCK","opt_len","static_len","sym_next","bi_windup","smaller","depth","_n2","_m2","pqdownheap","heap_len","compress_block","ltree","dtree","lc","extra","sx","sym_buf","build_tree","desc","stree","node","heap_max","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","_tr_stored_block$1","stored_len","last","_tr_init","LENGTH_CODES$1","L_CODES$1","tr_static_init","l_desc","d_desc","bl_desc","_tr_stored_block","_tr_flush_block","opt_lenb","static_lenb","max_blindex","level","strm","data_type","block_mask","detect_data_type","BL_CODES$1","build_bl_tree","lcodes","dcodes","blcodes","rank","send_all_trees","_tr_tally","sym_end","_tr_align","STATIC_TREES","bi_flush","adler32_1","adler","s2","crcTable","makeTable","crc32_1","messages","constants$2","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","Z_NO_FLUSH$2","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$2","MAX_MATCH","MIN_LOOKAHEAD","INIT_STATE","BUSY_STATE","FINISH_STATE","errorCode","zero","slide_hash","wsize","w_size","hash_size","head","prev","HASH","hash_shift","hash_mask","flush_pending","avail_out","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","avail_in","next_in","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","window_size","insert","ins_h","deflate_stored","flush","left","have","min_block","pending_buf_size","used","high_water","deflate_fast","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","configuration_table","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","HEAP_SIZE","MAX_BITS","lit_bufsize","deflateStateCheck","deflateResetKeep","deflateReset","deflateInit2","windowBits","memLevel","deflate_1$2","deflateInit","deflateSetHeader","deflate","old_flush","header","level_flags","hcrc","comment","time","os","beg","gzhead_extra","bstate","deflate_huff","deflate_rle","deflateEnd","deflateSetDictionary","dictionary","dictLength","tmpDict","avail","next","deflateInfo","_has","common","sources","flattenChunks","chunks","chunk","STR_APPLY_UIA_OK","__","_utf8len","strings","string2buf","c2","m_pos","str_len","buf_len","buf2string","utf16buf","c_len","buf2binstring","utf8border","zstream","toString$1","Z_NO_FLUSH$1","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFLATED$1","Deflate$1","chunkSize","gzip","ended","dict","_dict_set","deflate$1","deflator","flush_mode","_flush_mode","onEnd","deflate_1$1","Deflate","deflateRaw","BAD$1","inffast","_in","_out","dmax","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","from_source","lencode","distcode","lenbits","distbits","top","dolen","dodist","sane","lbase","lext","dbase","dext","inftrees","lens_index","codes","table_index","work","incr","low","mask","sym","root","drop","huff","MAXBITS","offs","here_bits","here_op","here_val","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","HEAD","DICT","TYPE","TYPEDO","COPY_","LEN_","LEN","CHECK","BAD","zswap32","InflateState","havedict","flags","check","total","wbits","ncode","nlen","ndist","lendyn","distdyn","back","was","inflateStateCheck","inflateResetKeep","inflateReset","inflateReset2","inflateInit2","lenfix","distfix","virgin","fixedtables","updatewindow","inflate_1$2","inflateInit","inflate","last_bits","last_op","last_val","hbuf","order","inf_leave","xflags","extra_len","inflateEnd","inflateGetHeader","inflateSetDictionary","dictid","inflateInfo","gzheader","Inflate$1","inflate$1","inflator","last_avail_out","next_out_utf8","tail","utf8str","inflate_1$1","Inflate","inflateRaw","ungzip","inflate_1","ungzip_1","decodeBody","ContentEncoding","getContentEncoding","MAX_CALLBACKS","streamBody","httpResponse","remainingChunks","streamingStrategy","tokenOpt","callBackFunc","currentCallback","callbackResponse","queryNextChunk","callbackData","streamRemainingChunks","tokenType","tokenValue","callbackArg","filterResponseHeaders","maxCertTimeOffsetNs","asUintN","queryCallHandler","httpRequest","minAllowedVerificationVersion","getMinVerificationVersion","streamedBody","verificationResult","currentTimeNs","current_time_ns","max_cert_time_offset_ns","ic_public_key","min_requested_verification_version","verifyRequestResponsePair","statusCode","responseVerification","verificationVersion","certifiedHeaders","decodedResponseBody","cacheControlHeader","directive","toHeaderDirectiveEntry","NoCache","NoStore","toResponseVerificationHeaders","finalHeaders","multiValues","MaxAge","maybeMaxAge","parsedNumber","MIN_SAFE_INTEGER","parseSafeInteger","RequestProcessor","_requestId","perform","responseCache","cachedResponse","canisterResolver","denyRequestHandler","apiRequestHandler","assetResponse","assetRequestHandler","directRequestHandler","cleanedRequest","originalRequest","integrity","keepalive","redirect","referrer","referrerPolicy","signal","requestInit","duplex","updateRequestApiGateway","sanitizedHeaders","createAgentAndActor","certificateVersion","getMaxVerificationVersion","requestHeaders","createHttpRequest","agentResponse","updateCallResult","decodedBody","filteredResponseHeaders","boundaryNodeRequestId","updateCallHandler","reloadServiceWorkerSection","handleErrorResponse","logProps","isNavigation","displayMessage","getDisplayMessage","extraDetails","errorDetails","toUTCString","getErrorDetails","afterContent","afterContentSection","waitUntil","skipWaiting","clients","claim","respondWith","action","SaveICHostInfo","resolver","ResetServiceWorker","registration","unregister","uninstallServiceWorker","reloadFromWorker","matchAll","client","navigate","reloadServiceWorkerClients"],"sourceRoot":""}